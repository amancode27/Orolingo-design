%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: People discussing media ratings.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 7/1/2020
%%BoundingBox: 0 0 3050 2001
%%HiResBoundingBox: 0 0 3050 2000.0005
%%CropBox: 0 0 3050 2000.0005
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">People discussing media ratings</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">People discussing media ratings. Man and woman asking people about their feedback flat vector illustration. Social networking concept for banner, website design or landing web page</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>advertising</rdf:li>
               <rdf:li>thumb</rdf:li>
               <rdf:li>media</rdf:li>
               <rdf:li>community</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>follower</rdf:li>
               <rdf:li>social</rdf:li>
               <rdf:li>networking</rdf:li>
               <rdf:li>star</rdf:li>
               <rdf:li>feedback</rdf:li>
               <rdf:li>rating</rdf:li>
               <rdf:li>review</rdf:li>
               <rdf:li>satisfaction</rdf:li>
               <rdf:li>liking</rdf:li>
               <rdf:li>comment</rdf:li>
               <rdf:li>evaluation</rdf:li>
               <rdf:li>opinion</rdf:li>
               <rdf:li>speech</rdf:li>
               <rdf:li>bubble</rdf:li>
               <rdf:li>talking</rdf:li>
               <rdf:li>chair</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>discussion</rdf:li>
               <rdf:li>conversation</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>female</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>male</rdf:li>
               <rdf:li>friend</rdf:li>
               <rdf:li>friendship</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>web</rdf:li>
               <rdf:li>landing</rdf:li>
               <rdf:li>page</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-07-01T10:29:14+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-07-01T10:29:14+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-07-01T10:29:14+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqpyzxRD42ofDvkoxJQTSEk1FjtGtB4nc5aMPexMlokuHC1mIZ/sKNu9O2SoDoiyoi4nH+7G+/J&#xA;cA7kWVRL+4XqQ3zH9MicQTxFER6jGdnUr7jcZWcR6MhJEpIjiqMGHtlZBDK12BVsr8I2eleIrTDE&#xA;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&#xA;V//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0074BE906CBBEA118CF5B4B84D069D3D</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0074BE906CBBEA118CF5B4B84D069D3D</xmpMM:InstanceID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:fd9ef29e-4414-3d4b-b2fc-1293fb2fb1e1</stRef:instanceID>
            <stRef:documentID>xmp.did:5953fc6e-9dc5-d545-a05b-7810ceae1e33</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:719fd2da-b20b-7245-bb99-a620a4539f0f</stEvt:instanceID>
                  <stEvt:when>2020-03-27T18:09:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:15c05f8d-6440-7146-8a99-2e06a304e771</stEvt:instanceID>
                  <stEvt:when>2020-04-13T23:38:38+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5953fc6e-9dc5-d545-a05b-7810ceae1e33</stEvt:instanceID>
                  <stEvt:when>2020-05-11T14:26:07+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:fd9ef29e-4414-3d4b-b2fc-1293fb2fb1e1</stEvt:instanceID>
                  <stEvt:when>2020-05-27T23:45:07+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0074BE906CBBEA118CF5B4B84D069D3D</stEvt:instanceID>
                  <stEvt:when>2020-07-01T10:29:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3050.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РєСЂР°СЃРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Р¶РµР»С‚С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Р·РµР»РµРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РіРѕР»СѓР±РѕР№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB СЃРёРЅРёР№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РїСѓСЂРїСѓСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3050 2000 li
3050 0 li
cp
clp
3050 2000 mo
0 2000 li
0 0 li
3050 0 li
3050 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
156.482 1840.37 mo
-79.1797 1487.2 55.3223 1132.1 326.851 930.572 cv
602.871 725.707 291.266 301.869 840.64 129.403 cv
1124.84 40.1812 1374.76 283.503 1653.33 294.075 cv
1902.94 303.548 2161.16 88.9678 2414.59 188.372 cv
2584.08 245.592 2753.5 406.178 2740.86 598.184 cv
2734.33 697.402 2676.53 814.855 2736.38 890.229 cv
2989.01 1208.34 2962.97 1486.59 2863.96 1835.92 cv
2863.99 1835.91 156.482 1840.37 156.482 1840.37 cv
cp
.890196 .917647 1 rgb
f
1143.22 1009.12 mo
1172.8 998.813 1235.67 967.068 1205.89 924.264 cv
1176.1 881.459 1163.45 899.393 1174.9 847.923 cv
1186.36 796.452 1150.12 755.465 1115.04 765.352 cv
1079.96 775.237 1070.72 803.439 1027.93 795.806 cv
985.144 788.172 949.072 827.873 964.826 862.816 cv
980.58 897.759 987.289 914.576 971.989 933.655 cv
956.69 952.735 888.479 972.717 916.327 1019.13 cv
944.175 1065.55 957.201 1062.86 947.093 1086.39 cv
936.984 1109.91 959.406 1137.07 998.86 1133.83 cv
1038.31 1130.59 1074.15 1116.07 1089.09 1072.23 cv
1104.03 1028.38 1143.22 1009.12 1143.22 1009.12 cv
cp
.172549 .156863 .345098 rgb
f
1076.54 1759.36 mo
1074.09 1784.5 li
1095.12 1790.88 li
1112.02 1772.85 li
1114.8 1762.47 li
1076.54 1759.36 li
cp
.952941 .478431 .313726 rgb
f
1142.9 1252.18 mo
1142.9 1252.18 1174.47 1456.59 1165.96 1544.2 cv
1157.44 1631.8 1114.62 1762.86 1114.62 1762.86 cv
1076.19 1762.86 li
1076.19 1762.86 1076.84 1747.01 1078.35 1694.78 cv
1080.26 1628.17 1078.35 1573.48 1107.44 1539.13 cv
1092.37 1474.14 1053.83 1252.18 1053.83 1252.18 cv
1142.9 1252.18 li
cp
f
1103.89 1287.13 mo
1103.89 1287.13 1093.69 1475.28 1062.67 1557.65 cv
983.205 1611.81 910.965 1638.07 862.885 1656.98 cv
860.621 1657.87 851.073 1622.1 851.073 1622.1 cv
904.467 1587.18 951.334 1524.22 1005.81 1532.32 cv
996.495 1472.06 987.47 1317.21 987.47 1317.21 cv
1103.89 1287.13 li
cp
f
1061.27 952.68 mo
1061.27 1029.98 li
1061.27 1029.98 1087.04 1043.72 1109.37 1029.98 cv
1105.93 1012.8 1103.89 958.078 1103.89 958.078 cv
1061.27 952.68 li
cp
f
1015.17 994.384 mo
1143.41 994.384 li
1143.41 994.384 1166.44 1046.08 1163.32 1090.35 cv
1160.19 1134.61 1154.56 1255.05 1154.56 1255.05 cv
1154.56 1255.05 1075.91 1237.2 1025.69 1221.71 cv
1021.69 1130.88 994.728 1089.47 996.587 1059.96 cv
998.446 1030.45 1015.17 994.384 1015.17 994.384 cv
cp
.960784 .584314 .678431 rgb
f
1142.38 885.018 mo
1142.38 928.324 1116.26 963.431 1084.04 963.431 cv
1051.83 963.431 1025.71 928.324 1025.71 885.018 cv
1025.71 841.71 1051.83 806.604 1084.04 806.604 cv
1116.26 806.604 1142.38 841.71 1142.38 885.018 cv
cp
.952941 .478431 .313726 rgb
f
1021.83 885.018 mo
1054.03 880.9 1083.97 862.956 1100.88 839.77 cv
1111.81 866.87 1142.38 885.018 1142.38 885.018 cv
1142.38 885.018 1165.28 833.177 1123.62 805.21 cv
1083.87 778.532 989.044 796.761 1021.83 885.018 cv
cp
.172549 .156863 .345098 rgb
f
1059.5 901.75 mo
1056.08 901.75 1053.31 898.974 1053.31 895.549 cv
1053.31 892.126 1056.08 889.349 1059.5 889.349 cv
1062.93 889.349 1065.7 892.126 1065.7 895.549 cv
1065.7 898.974 1062.93 901.75 1059.5 901.75 cv
cp
0 0 0 rgb
f
1108.91 901.75 mo
1105.49 901.75 1102.71 898.974 1102.71 895.549 cv
1102.71 892.126 1105.49 889.349 1108.91 889.349 cv
1112.34 889.349 1115.11 892.126 1115.11 895.549 cv
1115.11 898.974 1112.34 901.75 1108.91 901.75 cv
cp
f
1119.84 889.964 mo
1118.82 889.965 1117.83 889.443 1117.27 888.505 cv
1115.74 885.923 1113.89 884.375 1111.76 883.905 cv
1108.08 883.092 1104.44 885.545 1104.41 885.571 cv
1103.06 886.495 1101.2 886.159 1100.27 884.812 cv
1099.34 883.465 1099.66 881.623 1101.01 880.684 cv
1101.24 880.521 1106.74 876.73 1112.98 878.076 cv
1116.81 878.902 1119.97 881.389 1122.39 885.469 cv
1123.23 886.883 1122.77 888.709 1121.35 889.548 cv
1120.87 889.831 1120.35 889.964 1119.84 889.964 cv
cp
.172549 .156863 .345098 rgb
f
1047.74 890.266 mo
1047.09 890.266 1046.43 890.052 1045.88 889.611 cv
1044.6 888.585 1044.39 886.71 1045.42 885.427 cv
1049.33 880.542 1053.67 877.883 1058.29 877.525 cv
1064.27 877.062 1068.37 880.745 1068.55 880.903 cv
1069.76 882.012 1069.84 883.895 1068.73 885.107 cv
1067.63 886.316 1065.76 886.406 1064.55 885.314 cv
1064.46 885.239 1062.02 883.174 1058.68 883.468 cv
1055.78 883.721 1052.89 885.633 1050.07 889.15 cv
1049.48 889.884 1048.62 890.266 1047.74 890.266 cv
cp
f
1090.19 903.688 mo
1098.21 909.469 1100.71 911.841 1103.81 913.769 cv
1101.67 920.928 1090.44 924.483 1087.25 923.658 cv
1095.07 919.803 1096.17 914.581 1096.17 914.581 cv
1090.19 903.688 li
cp
.870588 .384314 .235294 rgb
f
1034.42 891.067 mo
1041.11 899.533 1041.44 910.413 1035.17 915.367 cv
1028.89 920.32 1018.39 917.474 1011.7 909.007 cv
1005.02 900.542 1004.69 889.663 1010.96 884.71 cv
1017.24 879.754 1027.74 882.602 1034.42 891.067 cv
cp
.952941 .478431 .313726 rgb
f
1028.56 909.357 mo
1028.3 909.357 1028.04 909.307 1027.79 909.2 cv
1026.78 908.773 1026.3 907.609 1026.73 906.6 cv
1028.15 903.244 1028.18 900.543 1026.83 898.575 cv
1024.74 895.536 1019.8 894.597 1016.22 894.716 cv
1015.13 894.756 1014.21 893.894 1014.17 892.798 cv
1014.13 891.703 1014.99 890.785 1016.09 890.75 cv
1020.9 890.589 1027.1 891.97 1030.1 896.327 cv
1031.59 898.497 1032.85 902.308 1030.39 908.143 cv
1030.07 908.901 1029.33 909.357 1028.56 909.357 cv
cp
.870588 .384314 .235294 rgb
f
1068.57 934.244 mo
1067.74 932.887 1068.92 931.197 1070.47 931.526 cv
1074.43 932.361 1080.99 933.604 1087.31 934.167 cv
1093.62 934.731 1100.3 934.67 1104.34 934.549 cv
1105.93 934.502 1106.8 936.374 1105.74 937.563 cv
1102.49 941.22 1095.95 946.629 1086.27 945.765 cv
1076.59 944.901 1071.12 938.421 1068.57 934.244 cv
cp
1 1 1 rgb
f
1095.63 1788.09 mo
1100.85 1774.37 1112.02 1772.85 1112.02 1772.85 cv
1133.73 1801.81 1187.04 1784.04 1185.28 1823.2 cv
1104.2 1822.7 1070.51 1823.2 1070.51 1823.2 cv
1070.62 1814.21 1072.22 1792.86 1074.09 1784.5 cv
1078.31 1785.25 li
1095.63 1788.09 li
cp
.172549 .156863 .345098 rgb
f
1181.41 1833.66 mo
1074.42 1833.66 li
1072.26 1833.66 1070.51 1831.91 1070.51 1829.75 cv
1070.51 1822.12 li
1185.32 1822.12 li
1185.32 1829.75 li
1185.32 1831.91 1183.57 1833.66 1181.41 1833.66 cv
cp
.12549 .113725 .25098 rgb
f
854.813 1619.63 mo
826.161 1634.22 li
830.206 1655.17 li
853.343 1661.51 li
864.222 1656.46 li
854.813 1619.63 li
cp
.952941 .478431 .313726 rgb
f
832.83 1654.34 mo
846.974 1652.61 853.343 1661.51 853.343 1661.51 cv
838.313 1693.27 877.715 1730.99 843.288 1747.22 cv
807.001 1677.38 791.309 1648.68 791.309 1648.68 cv
799.08 1644.7 818.139 1636.4 826.161 1634.22 cv
827.431 1638.19 li
832.83 1654.34 li
cp
.172549 .156863 .345098 rgb
f
832.187 1747.92 mo
784.476 1657.48 li
783.291 1655.23 784.151 1652.45 786.396 1651.27 cv
792.235 1648.19 li
844.234 1746.76 li
838.395 1749.84 li
836.15 1751.03 833.37 1750.17 832.187 1747.92 cv
cp
.12549 .113725 .25098 rgb
f
1018.41 1477.39 mo
994.774 1473.12 972.096 1473.14 958.794 1473.43 cv
967.21 1445.27 964.777 1271.45 1018.13 1211.67 cv
1152.4 1211.67 li
1199.93 1293.23 1182 1414.07 1211.37 1463.57 cv
1199.89 1469.12 1167.73 1483.01 1125.61 1487.26 cv
1079.04 1491.96 1058.37 1484.62 1018.41 1477.39 cv
cp
.027451 .0235294 .207843 rgb
f
1061.27 994.384 mo
1029.02 991.691 li
1029.02 991.691 988.559 906.285 973.025 878.671 cv
962.439 834.34 977.477 717.354 977.477 717.354 cv
930.469 706.181 li
930.469 706.181 908.939 848.957 916.218 889.24 cv
918.138 899.864 976.756 1024.89 976.756 1024.89 cv
976.756 1024.89 996.587 1059.96 969.508 1236.02 cv
1007.74 1245.51 1034.41 1246.08 1034.41 1246.08 cv
1061.27 994.384 li
cp
.901961 .145098 .321569 rgb
f
1105.76 994.383 mo
1130.8 1246.08 li
1130.8 1246.08 1142.24 1249.95 1185.18 1237.18 cv
1164.38 1132.06 1170.44 1067.56 1173.38 1047.36 cv
1173.99 1043.17 1175.3 1039.14 1177.29 1035.4 cv
1186.3 1018.43 1216.03 960.439 1243.42 885.018 cv
1241.71 849.892 1216.3 706.181 1216.3 706.181 cv
1171.82 703.812 li
1185.4 872.799 li
1185.4 872.799 1137.8 976.581 1132.19 993.769 cv
1105.76 994.383 li
cp
f
1409.01 724.97 mo
749.434 724.97 li
719.082 724.97 694.478 700.365 694.478 670.014 cv
694.478 516.996 li
694.478 486.645 719.082 462.039 749.435 462.039 cv
1409.01 462.039 li
1439.36 462.039 1463.96 486.645 1463.96 516.996 cv
1463.96 670.014 li
1463.96 700.365 1439.36 724.97 1409.01 724.97 cv
cp
.498039 .6 .921569 rgb
f
824.854 653.5 mo
790.649 632.968 li
756.36 653.359 li
753.023 655.344 748.935 652.36 749.806 648.576 cv
758.765 609.701 li
728.776 583.392 li
725.856 580.832 727.43 576.021 731.299 575.68 cv
771.039 572.188 li
786.794 535.536 li
788.328 531.969 793.39 531.979 794.908 535.553 cv
810.511 572.27 li
850.236 575.926 li
854.104 576.283 855.657 581.1 852.728 583.649 cv
822.63 609.833 li
831.427 648.745 li
832.284 652.533 828.183 655.5 824.854 653.5 cv
cp
.976471 .976471 .227451 rgb
f
969.084 653.5 mo
934.88 632.968 li
900.592 653.359 li
897.254 655.344 893.164 652.36 894.037 648.576 cv
902.996 609.701 li
873.007 583.392 li
870.088 580.832 871.662 576.021 875.529 575.68 cv
915.271 572.188 li
931.025 535.536 li
932.558 531.969 937.62 531.979 939.139 535.553 cv
954.741 572.27 li
994.467 575.926 li
998.334 576.283 999.888 581.1 996.958 583.649 cv
966.861 609.833 li
975.658 648.745 li
976.515 652.533 972.413 655.5 969.084 653.5 cv
cp
f
1113.31 653.5 mo
1079.11 632.968 li
1044.82 653.359 li
1041.48 655.344 1037.4 652.36 1038.27 648.576 cv
1047.23 609.701 li
1017.24 583.392 li
1014.32 580.832 1015.89 576.021 1019.76 575.68 cv
1059.5 572.188 li
1075.26 535.536 li
1076.79 531.969 1081.85 531.979 1083.37 535.553 cv
1098.97 572.27 li
1138.7 575.926 li
1142.56 576.283 1144.12 581.1 1141.19 583.649 cv
1111.09 609.833 li
1119.89 648.745 li
1120.75 652.533 1116.64 655.5 1113.31 653.5 cv
cp
f
1257.54 653.5 mo
1223.34 632.968 li
1189.05 653.359 li
1185.72 655.344 1181.63 652.36 1182.5 648.576 cv
1191.46 609.701 li
1161.47 583.392 li
1158.55 580.832 1160.12 576.021 1163.99 575.68 cv
1203.73 572.188 li
1219.49 535.536 li
1221.02 531.969 1226.08 531.979 1227.6 535.553 cv
1243.2 572.27 li
1282.93 575.926 li
1286.8 576.283 1288.35 581.1 1285.42 583.649 cv
1255.32 609.833 li
1264.12 648.745 li
1264.98 652.533 1260.88 655.5 1257.54 653.5 cv
cp
f
1401.78 653.5 mo
1367.57 632.968 li
1333.28 653.359 li
1329.95 655.344 1325.86 652.36 1326.73 648.576 cv
1335.69 609.701 li
1305.7 583.392 li
1302.78 580.832 1304.35 576.021 1308.22 575.68 cv
1347.96 572.188 li
1363.72 535.536 li
1365.25 531.969 1370.31 531.979 1371.83 535.553 cv
1387.43 572.27 li
1427.16 575.926 li
1431.03 576.283 1432.58 581.1 1429.65 583.649 cv
1399.55 609.833 li
1408.35 648.745 li
1409.21 652.533 1405.11 655.5 1401.78 653.5 cv
cp
f
2883.93 1853.38 mo
141.167 1853.38 li
134.538 1853.38 129.165 1848.01 129.165 1841.38 cv
129.165 1841.38 li
129.165 1834.75 134.538 1829.38 141.167 1829.38 cv
2883.93 1829.38 li
2890.56 1829.38 2895.93 1834.75 2895.93 1841.38 cv
2895.93 1841.38 li
2895.93 1848.01 2890.56 1853.38 2883.93 1853.38 cv
cp
.584314 .65098 .858824 rgb
f
2880.5 1427.4 mo
2880.5 1427.4 2902.34 1451.21 2890.06 1505.95 cv
2877.55 1561.72 2890.51 1595.4 2890.51 1595.4 cv
2872.67 1619.91 li
2872.67 1619.91 2855.6 1568.06 2867.79 1523.72 cv
2883.12 1468.23 2880.5 1427.4 2880.5 1427.4 cv
cp
f
2950.66 1426.71 mo
2950.66 1426.71 2960.24 1448.5 2940.67 1486.8 cv
2920.64 1525.8 2922.37 1553.26 2922.37 1553.26 cv
2907.27 1572.71 li
2907.27 1572.71 2904.7 1526.39 2922.11 1495.78 cv
2943.86 1457.48 2950.66 1426.71 2950.66 1426.71 cv
cp
f
2844.34 1491.35 mo
2844.34 1491.35 2827.34 1510.43 2828.14 1570.97 cv
2828.78 1620.31 2845.35 1642.23 2845.57 1672.51 cv
2866.97 1634.41 li
2863.85 1613.64 2847.55 1603.37 2844.8 1558.66 cv
2842.22 1516.8 2844.34 1491.35 2844.34 1491.35 cv
cp
f
2702.91 1708.74 mo
2702.91 1708.74 2699.44 1734.14 2733.85 1783.89 cv
2761.89 1824.49 2786.67 1824.85 2793.65 1834.09 cv
2798.28 1809.09 li
2781.62 1794.5 2768.04 1799.98 2740.82 1764.41 cv
2715.33 1731.01 2702.91 1708.74 2702.91 1708.74 cv
cp
f
2805.34 1538.61 mo
2805.34 1538.61 2801.03 1582.52 2804.01 1609.15 cv
2808.18 1647 2827.4 1663.2 2834.44 1701.57 cv
2820.03 1731.05 li
2820.03 1731.05 2792.64 1695.59 2789.37 1648.67 cv
2783.86 1569.94 2805.34 1538.61 2805.34 1538.61 cv
cp
f
2739.61 1574.39 mo
2749.32 1597.16 2755.65 1621.23 2758.4 1645.83 cv
2766.19 1720.44 2815.07 1763.87 2815.07 1763.87 cv
2805.79 1784.22 li
2805.79 1784.22 2749.92 1757.17 2745.14 1694.32 cv
2740.16 1627.9 2739.61 1574.39 2739.61 1574.39 cv
cp
f
2866.64 1639.91 mo
2866.64 1639.91 2882.3 1629.81 2955.44 1622.08 cv
3002.32 1617.14 2984.94 1603.04 3030.96 1605.9 cv
2998.96 1616.5 2993.46 1642.99 2950.13 1650.12 cv
2915.47 1655.8 2881.3 1664.18 2847.95 1675.2 cv
2866.64 1639.91 li
cp
f
3015.27 1653.55 mo
3015.27 1653.55 2995.68 1695.24 2931.62 1705.62 cv
2892.21 1712.1 2854.14 1725.02 2818.93 1743.86 cv
2830.44 1707.64 li
2830.44 1707.64 2852.06 1682.52 2919.7 1678.13 cv
2966.18 1675.1 3015.27 1653.55 3015.27 1653.55 cv
cp
f
2991.86 1722.29 mo
2991.86 1722.29 2972.26 1763.98 2908.21 1774.36 cv
2868.8 1780.84 2830.73 1793.76 2795.51 1812.6 cv
2807.02 1776.38 li
2807.02 1776.38 2828.64 1751.26 2896.29 1746.87 cv
2942.76 1743.84 2991.86 1722.29 2991.86 1722.29 cv
cp
f
3032.54 1527.71 mo
3032.54 1527.71 3016.74 1550.67 2976.01 1555.7 cv
2934.7 1560.79 2907.15 1576.45 2907.15 1576.45 cv
2915.68 1561.92 li
2915.68 1561.92 2929.34 1546.05 2972.1 1543.26 cv
3001.5 1541.32 3032.54 1527.71 3032.54 1527.71 cv
cp
f
2894.65 1599.91 mo
2894.65 1599.91 2924.92 1589.44 2971.45 1582.68 cv
3000.78 1578.33 3034.94 1551.98 3034.94 1551.98 cv
3034.94 1551.98 3015.18 1600.15 2970.68 1603.96 cv
2919.65 1608.32 2872.51 1626.48 2872.51 1626.48 cv
2894.65 1599.91 li
cp
f
2913.79 1567.39 mo
2913.79 1567.39 2929.99 1520.9 2971.35 1502.67 cv
2995.77 1491.66 3018.17 1476.65 3037.64 1458.25 cv
3037.64 1458.25 3023.58 1505.61 2983.82 1518.25 cv
2947.14 1530.02 2927.04 1560.8 2927.04 1560.8 cv
2913.79 1567.39 li
cp
f
2797.31 1834 mo
2790.18 1832.82 li
2797.44 1788.82 2842.08 1640.89 2921.6 1553.6 cv
2926.94 1558.47 li
2848.54 1644.56 2804.5 1790.56 2797.31 1834 cv
cp
f
319.164 1386.83 mo
319.164 1386.83 294.007 1411.95 304.868 1472.73 cv
315.949 1534.66 300.082 1571.06 300.082 1571.06 cv
318.52 1598.87 li
318.52 1598.87 339.778 1542.68 328.508 1493.34 cv
314.323 1431.59 319.164 1386.83 319.164 1386.83 cv
cp
f
242.057 1382.69 mo
242.057 1382.69 230.468 1406.19 250.147 1449.24 cv
270.29 1493.09 267.078 1523.19 267.078 1523.19 cv
282.738 1545.31 li
282.738 1545.31 287.797 1494.5 270.119 1460.01 cv
248.054 1416.86 242.057 1382.69 242.057 1382.69 cv
cp
f
355.844 1458.88 mo
355.844 1458.88 373.619 1480.68 369.83 1547.21 cv
366.75 1601.42 347.479 1624.73 345.782 1658.01 cv
324.08 1615.08 li
328.516 1592.4 346.924 1581.89 352.099 1532.86 cv
356.958 1486.97 355.844 1458.88 355.844 1458.88 cv
cp
f
500.901 1704.71 mo
500.901 1704.71 503.49 1732.8 463.269 1785.85 cv
430.479 1829.14 403.216 1828.34 395.103 1838.17 cv
391.208 1810.45 li
410.232 1795.21 424.9 1801.9 456.535 1764.09 cv
486.176 1728.59 500.901 1704.71 500.901 1704.71 cv
cp
f
396.451 1512.72 mo
396.451 1512.72 399.089 1561.2 394.528 1590.34 cv
388.123 1631.76 366.204 1648.65 356.621 1690.49 cv
371.044 1723.61 li
371.044 1723.61 402.869 1685.93 408.729 1634.5 cv
418.566 1548.19 396.451 1512.72 396.451 1512.72 cv
cp
f
467.006 1555.22 mo
455.231 1579.79 447.114 1605.95 442.912 1632.87 cv
430.762 1714.53 372.183 1762.32 372.183 1762.32 cv
384.152 1782.74 li
384.152 1782.74 446.884 1755.69 455.161 1686.82 cv
463.828 1614.03 467.006 1555.22 467.006 1555.22 cv
cp
f
324.181 1621.15 mo
324.181 1621.15 307.454 1609.29 227.4 1597.27 cv
176.096 1589.59 195.887 1574.93 145.145 1575.85 cv
179.821 1589.05 184.593 1618.45 231.896 1628.37 cv
269.733 1636.27 306.894 1647.14 343.034 1660.85 cv
324.181 1621.15 li
cp
f
160.101 1629 mo
160.101 1629 179.643 1675.78 249.577 1690.27 cv
292.594 1699.3 333.833 1715.34 371.645 1737.74 cv
360.732 1697.36 li
360.732 1697.36 338.166 1668.71 264.002 1660.62 cv
213.049 1655.06 160.101 1629 160.101 1629 cv
cp
f
182.539 1705.71 mo
182.539 1705.71 202.081 1752.49 272.016 1766.98 cv
315.032 1776.01 356.271 1792.04 394.083 1814.45 cv
383.172 1774.06 li
383.172 1774.06 360.605 1745.42 286.44 1737.33 cv
235.488 1731.77 182.539 1705.71 182.539 1705.71 cv
cp
f
147.169 1489.81 mo
147.169 1489.81 163.439 1515.81 207.979 1523.31 cv
253.15 1530.89 282.693 1549.43 282.693 1549.43 cv
274.015 1533.04 li
274.015 1533.04 259.752 1514.93 212.876 1509.81 cv
180.645 1506.27 147.169 1489.81 147.169 1489.81 cv
cp
f
295.309 1575.82 mo
295.309 1575.82 262.529 1562.85 211.699 1553.19 cv
179.65 1546.99 143.363 1516.38 143.363 1516.38 cv
143.363 1516.38 162.772 1570.29 211.52 1576.62 cv
267.42 1583.86 318.38 1606.1 318.38 1606.1 cv
295.309 1575.82 li
cp
f
275.827 1539.15 mo
275.827 1539.15 260.246 1487.26 215.652 1465.22 cv
189.334 1451.94 165.419 1434.35 144.896 1413.19 cv
144.896 1413.19 158.085 1465.94 201.194 1481.75 cv
240.951 1496.45 261.577 1531.27 261.577 1531.27 cv
275.827 1539.15 li
cp
f
391.076 1837.89 mo
398.977 1836.94 li
393.105 1788.21 351.139 1623.41 267.907 1523.61 cv
261.793 1528.71 li
343.864 1627.13 385.262 1789.78 391.076 1837.89 cv
cp
f
1738.88 1634.31 mo
1696.67 1830.33 li
1695.54 1835.56 1693.67 1838.69 1691.66 1838.69 cv
1691.66 1838.69 li
1687.94 1838.69 1685.1 1828.23 1685.68 1816.68 cv
1694.87 1634.31 li
1738.88 1634.31 li
cp
.262745 .392157 .8 rgb
f
2813.59 1634.31 mo
2855.8 1830.33 li
2856.93 1835.56 2858.8 1838.69 2860.81 1838.69 cv
2860.81 1838.69 li
2864.53 1838.69 2867.37 1828.23 2866.79 1816.68 cv
2857.6 1634.31 li
2813.59 1634.31 li
cp
f
2486.4 1634.31 mo
2528.6 1830.33 li
2529.73 1835.56 2531.61 1838.69 2533.62 1838.69 cv
2533.62 1838.69 li
2537.34 1838.69 2540.18 1828.23 2539.59 1816.68 cv
2530.4 1634.31 li
2486.4 1634.31 li
cp
f
2179.37 1669.64 mo
1729.17 1669.64 li
1703.06 1669.64 1681.89 1648.47 1681.89 1622.36 cv
1681.89 1382.02 li
1681.89 1361.72 1698.35 1345.26 1718.65 1345.26 cv
2179.37 1345.26 li
2179.37 1669.64 li
cp
.462745 .560784 .858824 rgb
f
2273.76 1669.64 mo
1823.55 1669.64 li
1797.44 1669.64 1776.28 1648.47 1776.28 1622.36 cv
1776.28 1382.02 li
1776.28 1361.72 1792.74 1345.26 1813.04 1345.26 cv
2273.76 1345.26 li
2273.76 1669.64 li
cp
.262745 .392157 .8 rgb
f
2804.62 1427.3 mo
1999.69 1427.3 li
1999.69 1258.29 li
1999.69 1238.8 2015.48 1223 2034.97 1223 cv
2804.62 1223 li
2804.62 1427.3 li
cp
.462745 .560784 .858824 rgb
f
2859.36 1421.74 mo
1818.55 1421.74 li
1794.74 1421.74 1775.44 1441.04 1775.44 1464.85 cv
1775.44 1514.56 li
2859.36 1514.56 li
2859.36 1421.74 li
cp
.584314 .678431 .960784 rgb
f
2859.36 1503.78 mo
1775.44 1503.78 li
1775.44 1669.88 li
2859.36 1669.88 li
2859.36 1503.78 li
cp
.462745 .560784 .858824 rgb
f
2859.27 1427.3 mo
2749.96 1427.3 li
2749.96 1223 li
2823.98 1223 li
2843.47 1223 2859.27 1238.8 2859.27 1258.29 cv
2859.27 1427.3 li
cp
.262745 .392157 .8 rgb
f
1774.06 1788 mo
1739 1799.42 li
1722.31 1768.62 li
1723.75 1767.4 1724.68 1746.13 1725.04 1729.96 cv
1783.13 1734.06 li
1781.39 1750.47 1778.05 1771.99 1774.06 1788 cv
cp
.952941 .478431 .313726 rgb
f
1712.37 1810.93 mo
1712.37 1810.93 1698.66 1791.02 1682.94 1790.76 cv
1682.94 1790.76 1653.57 1794.41 1644.05 1807.51 cv
1641.06 1811.62 1642.87 1819.84 1644.51 1825.08 cv
1645.53 1828.35 1648.59 1831.77 1657.49 1833.93 cv
1670.63 1837.12 1688.16 1838.44 1719.59 1828.01 cv
1757.3 1815.51 1763.7 1819.19 1777.57 1813.68 cv
1791.96 1807.96 1786.03 1790.31 1780.86 1773.08 cv
1780.86 1773.08 1771.59 1795.21 1712.37 1810.93 cv
cp
.172549 .156863 .345098 rgb
f
1721.14 1765.58 mo
1721.14 1765.58 1704.71 1777.1 1682.65 1783.73 cv
1670.32 1787.44 1637.36 1796.15 1644.22 1818.06 cv
1645.24 1821.33 1648.3 1824.74 1657.2 1826.9 cv
1670.34 1830.1 1687.87 1831.42 1719.3 1820.99 cv
1757.01 1808.48 1763.41 1812.17 1777.29 1806.65 cv
1791.67 1800.94 1783.52 1781 1778.35 1763.77 cv
1778.35 1763.77 li
1778.28 1768.23 1777 1780.03 1751.04 1792.24 cv
1743.29 1795.89 1747.45 1760.36 1721.14 1765.58 cv
cp
.262745 .392157 .8 rgb
f
1913.19 1783.91 mo
1879.02 1797.77 li
1860.21 1768.22 li
1861.56 1766.9 1860.99 1745.62 1860.21 1729.47 cv
1918.45 1729.47 li
1917.86 1745.95 1916.05 1767.66 1913.19 1783.91 cv
cp
.952941 .478431 .313726 rgb
f
1945.72 1390.53 mo
1867.03 1410.39 1757.33 1469.55 1746.96 1482.03 cv
1725.52 1507.81 1723.8 1591.96 1722.84 1741.22 cv
1786.64 1741.22 li
1804.63 1623.47 1827.69 1571.26 1828.5 1523.88 cv
1828.5 1523.88 1889.88 1524.02 1979.44 1482.41 cv
2023.59 1461.9 2069.45 1438.34 2053.12 1398.31 cv
2040.12 1366.42 2020.75 1371.58 1945.72 1390.53 cv
cp
.541176 .156863 .298039 rgb
f
2032.85 1383.3 mo
1967.12 1394.55 1883.9 1476.18 1873.52 1488.66 cv
1852.09 1514.44 1861.16 1597.44 1860.21 1746.7 cv
1920.43 1746.7 li
1926.53 1669 1956.61 1580.41 1952.74 1523.91 cv
1952.74 1523.91 2017.43 1514.32 2106.99 1472.71 cv
2151.14 1452.2 2195.96 1454.24 2185.27 1402.95 cv
2178.23 1369.23 2109.12 1370.23 2032.85 1383.3 cv
cp
.901961 .145098 .321569 rgb
f
1837.96 1115.26 mo
1854.58 1098.49 1843.68 1081.29 1843.68 1081.29 cv
1852.8 1079.34 1900.92 1152.24 1921.68 1198.57 cv
1957.87 1162.08 2021.65 1112.82 2038.9 1109.95 cv
2038.9 1109.95 2062.17 1103.69 2070.53 1131.82 cv
2077.99 1156.93 2048.89 1174.72 2048.89 1174.72 cv
2048.89 1174.72 1924.39 1262.61 1905.98 1254.8 cv
1877.33 1242.65 1851.4 1138.03 1837.96 1115.26 cv
cp
.952941 .478431 .313726 rgb
f
1811.96 1113.19 mo
1822.12 1113.81 1834.68 1108.79 1838.6 1117.89 cv
1858.65 1108.12 li
1859.86 1096.03 li
1842.63 1068.42 1800.64 1060.59 1796.48 1060.22 cv
1785.68 1059.27 1780.66 1058.16 1779.82 1059.6 cv
1778.97 1061.05 1776.33 1070.67 1792 1072.55 cv
1811.67 1074.91 1798.62 1090.64 1758.71 1075.67 cv
1748.72 1071.92 1729.91 1076.78 1736.71 1084.09 cv
1744.21 1092.13 1765.74 1110.37 1811.96 1113.19 cv
cp
f
2032.92 1130.49 mo
2001.93 1126.19 1952.66 1112.88 1973.44 1065.14 cv
1994.23 1017.4 1997.3 1035.67 1976.01 987.517 cv
1954.72 939.363 1982.18 892.14 2018.46 894.952 cv
2054.75 897.764 2069.31 923.568 2109.71 907.718 cv
2150.11 891.868 2193.2 923.679 2184.62 960.976 cv
2176.03 998.272 2172.76 1016.05 2191.47 1031.74 cv
2210.19 1047.42 2280.88 1053.64 2262.7 1104.53 cv
2244.52 1155.43 2231.24 1155.35 2245.74 1176.4 cv
2260.25 1197.46 2243.61 1228.44 2204.35 1232.99 cv
2165.08 1237.54 2127.15 1230.35 2103.94 1190.34 cv
2080.73 1150.33 2032.92 1130.49 2032.92 1130.49 cv
cp
.172549 .156863 .345098 rgb
f
1966.62 1148.57 mo
1992.88 1132.67 2036.33 1088.16 2069.37 1101.35 cv
2102.41 1114.54 2091.2 1154.49 2075.39 1171.01 cv
2059.58 1187.53 2010.48 1225.33 2010.48 1225.33 cv
1966.62 1148.57 li
cp
.247059 .588235 .309804 rgb
f
2181.28 1393.75 mo
2166.57 1317.88 2170.17 1318.05 2164.06 1282.34 cv
2148.96 1194.09 2226.69 1123.25 2113.07 1088.28 cv
2062.76 1099.42 li
2014.41 1123.3 2004.96 1166.21 2000.2 1195.51 cv
1991.13 1251.26 1999.05 1334.49 1999.05 1334.49 cv
1980.04 1382.02 li
1980.04 1382.02 1993.23 1395.26 2055.78 1407.08 cv
2118.32 1418.89 2181.28 1393.75 2181.28 1393.75 cv
cp
.054902 .415686 .254902 rgb
f
2192.8 1168.38 mo
2204.87 1213.07 2206.17 1360.86 2195.93 1374.11 cv
2144.09 1345.37 li
2144.09 1345.37 2120.09 1191.51 2117.35 1165.78 cv
2112.49 1121.23 2173.23 1095.37 2192.8 1168.38 cv
cp
.952941 .478431 .313726 rgb
f
2116.4 1238.88 mo
2111.59 1204.91 2105.17 1139.98 2133.68 1118.7 cv
2162.19 1097.42 2189.47 1123.35 2195.29 1145.46 cv
2201.12 1167.57 2207.7 1229.19 2207.7 1229.19 cv
2116.4 1238.88 li
cp
.247059 .588235 .309804 rgb
f
2133.03 1012.31 mo
2131.95 1052.42 2105.54 1084.26 2074.04 1083.42 cv
2042.53 1082.58 2017.86 1049.37 2018.93 1009.26 cv
2020 969.143 2046.41 937.305 2077.92 938.146 cv
2109.42 938.988 2134.1 972.19 2133.03 1012.31 cv
cp
.952941 .478431 .313726 rgb
f
2122.75 1035.49 mo
2079.44 1076.91 li
2079.44 1076.91 2079.67 1099.88 2078.98 1107.49 cv
2077.54 1123.2 2096.36 1125.95 2109.17 1113.65 cv
2121.98 1101.36 2123.14 1088.28 2123.14 1088.28 cv
2122.75 1035.49 li
cp
f
2012.42 995.402 mo
2026.83 993.627 2057 984.682 2065.38 969.049 cv
2079.05 994.304 2118.38 1012.78 2148.97 1018.88 cv
2144.26 990.996 2133.3 940.189 2079.29 929.538 cv
2036.85 921.17 2012.42 995.402 2012.42 995.402 cv
cp
.172549 .156863 .345098 rgb
f
2034.43 1018.38 mo
2033.67 1021.31 2030.68 1023.07 2027.75 1022.31 cv
2024.82 1021.55 2023.06 1018.56 2023.82 1015.63 cv
2024.58 1012.7 2027.57 1010.94 2030.5 1011.7 cv
2033.43 1012.46 2035.19 1015.45 2034.43 1018.38 cv
cp
0 0 0 rgb
f
2079.42 1017.81 mo
2078.6 1020.98 2075.36 1022.88 2072.19 1022.06 cv
2069.01 1021.24 2067.11 1018 2067.93 1014.83 cv
2068.76 1011.65 2071.99 1009.75 2075.17 1010.57 cv
2078.34 1011.4 2080.24 1014.63 2079.42 1017.81 cv
cp
f
2084.82 1011.64 mo
2084.38 1011.53 2083.98 1011.27 2083.69 1010.88 cv
2079.45 1005.22 2071.33 1005.66 2071.25 1005.66 cv
2070.12 1005.73 2069.14 1004.87 2069.06 1003.74 cv
2068.99 1002.6 2069.84 1001.62 2070.98 1001.55 cv
2071.4 1001.52 2081.4 1000.93 2086.99 1008.41 cv
2087.68 1009.32 2087.49 1010.61 2086.58 1011.3 cv
2086.05 1011.69 2085.41 1011.79 2084.82 1011.64 cv
cp
.172549 .156863 .345098 rgb
f
2021.76 1011.02 mo
2021.55 1010.96 2021.34 1010.87 2021.14 1010.74 cv
2020.19 1010.11 2019.93 1008.83 2020.56 1007.88 cv
2025.43 1000.5 2033.55 1001.42 2033.9 1001.46 cv
2035.03 1001.6 2035.83 1002.63 2035.69 1003.76 cv
2035.55 1004.89 2034.52 1005.69 2033.4 1005.56 cv
2033.13 1005.53 2027.43 1004.96 2024 1010.16 cv
2023.5 1010.91 2022.59 1011.23 2021.76 1011.02 cv
cp
f
2041.02 1027.25 mo
2038.71 1030.9 2036.79 1034.56 2034.36 1036.93 cv
2033.54 1037.73 2033.5 1039.05 2034.26 1039.91 cv
2037.38 1043.45 2044.7 1045.37 2049.13 1046.23 cv
2049.78 1046.36 2050.1 1045.48 2049.52 1045.16 cv
2044.66 1042.43 2042.34 1040.15 2041.29 1038.86 cv
2040.77 1038.21 2040.6 1037.36 2040.82 1036.56 cv
2041.31 1034.72 2042.26 1030.98 2042.8 1027.93 cv
2042.99 1026.88 2041.59 1026.35 2041.02 1027.25 cv
cp
.870588 .384314 .235294 rgb
f
2118.64 1015.6 mo
2112.56 1022.81 2112.4 1032.69 2118.3 1037.68 cv
2124.21 1042.66 2133.92 1040.85 2140.01 1033.64 cv
2146.1 1026.43 2146.25 1016.55 2140.35 1011.57 cv
2134.45 1006.58 2124.73 1008.39 2118.64 1015.6 cv
cp
.952941 .478431 .313726 rgb
f
2126.88 1034.06 mo
2126.58 1033.98 2126.29 1033.83 2126.04 1033.61 cv
2122.46 1030.48 2121.31 1026.35 2122.97 1022.57 cv
2124.68 1018.7 2128.83 1016.21 2132.86 1016.66 cv
2133.99 1016.79 2134.81 1017.81 2134.68 1018.94 cv
2134.55 1020.07 2133.53 1020.89 2132.4 1020.76 cv
2130.2 1020.52 2127.71 1022.04 2126.75 1024.23 cv
2125.83 1026.34 2126.54 1028.56 2128.76 1030.5 cv
2129.62 1031.25 2129.7 1032.56 2128.95 1033.41 cv
2128.42 1034.02 2127.61 1034.24 2126.88 1034.06 cv
cp
.870588 .384314 .235294 rgb
f
2148 1341.15 mo
2162.96 1336.41 2197.64 1368.9 2196.43 1374.25 cv
2151.9 1455.94 2037.81 1489.48 2037.81 1489.48 cv
2017.87 1474.42 li
2017.87 1474.42 2094.7 1409.72 2148 1341.15 cv
cp
.952941 .478431 .313726 rgb
f
2037.81 1489.48 mo
2035.59 1510.79 2003.85 1538.56 1976.08 1540.54 cv
1948.31 1542.52 1957.24 1515.75 1968.15 1508.8 cv
1979.05 1501.86 1994.77 1494.95 1990.88 1489.48 cv
1986.99 1484.01 1980.04 1485.45 1975.09 1479.05 cv
1970.67 1473.34 1992.3 1462.07 2017.87 1474.42 cv
2026.48 1480.92 2037.81 1489.48 2037.81 1489.48 cv
cp
f
2060.46 1058.68 mo
2061.26 1062.49 2058.54 1066.28 2054.38 1067.16 cv
2050.22 1068.04 2046.2 1065.67 2045.39 1061.86 cv
2044.59 1058.06 2047.31 1054.26 2051.47 1053.38 cv
2055.63 1052.5 2059.65 1054.87 2060.46 1058.68 cv
cp
1 1 1 rgb
f
1853.27 1811.13 mo
1853.27 1811.13 1838.19 1792.23 1822.49 1793.07 cv
1822.49 1793.07 1793.45 1798.79 1784.88 1812.52 cv
1782.18 1816.83 1784.56 1824.91 1786.57 1830.02 cv
1787.82 1833.21 1791.11 1836.4 1800.14 1837.93 cv
1813.47 1840.19 1831.05 1840.27 1861.67 1827.66 cv
1898.4 1812.53 1905.05 1815.76 1918.5 1809.28 cv
1932.44 1802.56 1925.29 1785.38 1918.92 1768.55 cv
1918.92 1768.55 1911.23 1791.28 1853.27 1811.13 cv
cp
.172549 .156863 .345098 rgb
f
1858.82 1765.27 mo
1858.82 1765.27 1843.24 1777.92 1821.71 1786.09 cv
1809.67 1790.66 1777.4 1801.66 1785.78 1823.03 cv
1787.04 1826.22 1790.33 1829.41 1799.35 1830.94 cv
1812.69 1833.2 1830.27 1833.29 1860.89 1820.67 cv
1897.62 1805.54 1904.27 1808.77 1917.72 1802.29 cv
1931.66 1795.58 1922.14 1776.26 1915.76 1759.44 cv
1915.76 1759.44 li
1916.01 1763.9 1915.56 1775.75 1890.52 1789.77 cv
1883.05 1793.95 1884.7 1758.21 1858.82 1765.27 cv
cp
.262745 .392157 .8 rgb
f
2373.63 1098.32 mo
2333.95 1110.37 2314.19 1193.92 2297.3 1281.37 cv
2270.23 1334.59 2250.01 1375.51 2224.04 1429.18 cv
2248.29 1434.67 2268.37 1419.4 2268.37 1419.4 cv
2268.37 1419.4 2330.03 1362.74 2358.63 1300.41 cv
2365.18 1286.15 2367.41 1257.45 2371.12 1244.69 cv
2372.75 1204.7 2373.63 1098.32 2373.63 1098.32 cv
cp
.909804 .4 .52549 rgb
f
2164.33 1788.17 mo
2129.27 1799.59 li
2112.58 1768.79 li
2114.03 1767.57 2114.95 1746.3 2115.31 1730.13 cv
2173.4 1734.23 li
2171.67 1750.64 2168.33 1772.16 2164.33 1788.17 cv
cp
.952941 .478431 .313726 rgb
f
2102.64 1811.1 mo
2102.64 1811.1 2088.93 1791.19 2073.21 1790.93 cv
2073.21 1790.93 2043.84 1794.59 2034.32 1807.68 cv
2031.33 1811.79 2033.14 1820.02 2034.78 1825.25 cv
2035.8 1828.52 2038.86 1831.94 2047.76 1834.1 cv
2060.9 1837.29 2078.43 1838.61 2109.86 1828.19 cv
2147.57 1815.68 2153.97 1819.37 2167.84 1813.85 cv
2182.23 1808.13 2176.3 1790.48 2171.13 1773.25 cv
2171.13 1773.25 2161.86 1795.38 2102.64 1811.1 cv
cp
.12549 .113725 .25098 rgb
f
2111.41 1765.75 mo
2111.41 1765.75 2094.98 1777.27 2072.93 1783.9 cv
2060.59 1787.62 2027.63 1796.32 2034.49 1818.23 cv
2035.51 1821.5 2038.57 1824.92 2047.47 1827.08 cv
2060.61 1830.27 2078.14 1831.59 2109.57 1821.16 cv
2147.28 1808.65 2153.68 1812.34 2167.56 1806.83 cv
2181.94 1801.11 2173.79 1781.17 2168.62 1763.94 cv
2168.62 1763.94 li
2168.55 1768.41 2167.27 1780.2 2141.31 1792.42 cv
2133.56 1796.06 2137.72 1760.53 2111.41 1765.75 cv
cp
.172549 .156863 .345098 rgb
f
2118.19 1792.24 mo
2116.9 1792.24 2115.71 1791.42 2115.3 1790.14 cv
2111.86 1779.43 2100.55 1779.41 2100.08 1779.41 cv
2098.4 1779.42 2097.03 1778.08 2097.01 1776.41 cv
2096.98 1774.74 2098.31 1773.37 2099.98 1773.34 cv
2105.59 1773.23 2117.21 1776.24 2121.08 1788.28 cv
2121.59 1789.88 2120.71 1791.59 2119.11 1792.1 cv
2118.81 1792.2 2118.49 1792.24 2118.19 1792.24 cv
cp
.286275 .298039 .498039 rgb
f
2104.5 1798.82 mo
2103.21 1798.82 2102.02 1798 2101.61 1796.71 cv
2098.17 1786 2086.87 1785.98 2086.39 1785.98 cv
2084.72 1786 2083.34 1784.66 2083.32 1782.99 cv
2083.3 1781.32 2084.62 1779.94 2086.29 1779.91 cv
2091.9 1779.8 2103.53 1782.81 2107.39 1794.86 cv
2107.9 1796.45 2107.02 1798.16 2105.43 1798.67 cv
2105.12 1798.77 2104.81 1798.82 2104.5 1798.82 cv
cp
f
2304.54 1792.31 mo
2270.37 1806.16 li
2251.56 1776.62 li
2252.91 1775.3 2256.44 1752.66 2255.66 1736.5 cv
2309.8 1737.86 li
2309.22 1754.35 2307.4 1776.06 2304.54 1792.31 cv
cp
.952941 .478431 .313726 rgb
f
2335.99 1390.7 mo
2257.3 1410.56 2147.6 1469.72 2137.23 1482.2 cv
2115.79 1507.98 2110.07 1592.13 2109.12 1741.39 cv
2179.14 1741.39 li
2197.13 1623.64 2217.96 1571.44 2218.77 1524.05 cv
2218.77 1524.05 2280.15 1524.2 2369.71 1482.58 cv
2413.86 1462.07 2459.72 1438.52 2443.39 1398.48 cv
2430.39 1366.59 2411.02 1371.75 2335.99 1390.7 cv
cp
.12549 .113725 .25098 rgb
f
2425.55 1391.69 mo
2359.82 1402.94 2276.6 1484.57 2266.22 1497.05 cv
2244.79 1522.84 2247.41 1605.83 2246.45 1755.09 cv
2316.26 1756.86 li
2322.36 1679.16 2349.31 1588.8 2345.44 1532.31 cv
2345.44 1532.31 2406.65 1514.7 2501.34 1486.66 cv
2553.14 1471.32 2568.38 1462.12 2576.14 1427.11 cv
2578.79 1415.2 2581.62 1387.82 2575.97 1382.13 cv
2550.96 1356.96 2487.76 1381.03 2425.55 1391.69 cv
cp
.172549 .156863 .345098 rgb
f
2244.62 1819.52 mo
2244.62 1819.52 2229.54 1800.62 2213.85 1801.47 cv
2213.85 1801.47 2184.8 1807.18 2176.23 1820.91 cv
2173.54 1825.22 2175.92 1833.3 2177.92 1838.41 cv
2179.17 1841.6 2182.46 1844.79 2191.49 1846.32 cv
2204.83 1848.58 2222.4 1848.67 2253.03 1836.05 cv
2289.76 1820.92 2296.4 1824.15 2309.86 1817.67 cv
2323.8 1810.96 2316.65 1793.77 2310.27 1776.95 cv
2310.27 1776.95 2302.59 1799.67 2244.62 1819.52 cv
cp
.12549 .113725 .25098 rgb
f
2250.18 1773.66 mo
2250.18 1773.66 2234.59 1786.31 2213.06 1794.48 cv
2201.02 1799.05 2168.75 1810.06 2177.14 1831.42 cv
2178.39 1834.61 2181.68 1837.81 2190.71 1839.34 cv
2204.04 1841.59 2221.62 1841.68 2252.24 1829.07 cv
2288.98 1813.94 2295.62 1817.17 2309.07 1810.69 cv
2323.02 1803.97 2313.49 1784.66 2307.11 1767.83 cv
2307.11 1767.83 li
2307.36 1772.29 2306.92 1784.15 2281.88 1798.16 cv
2274.4 1802.34 2276.05 1766.61 2250.18 1773.66 cv
cp
.172549 .156863 .345098 rgb
f
2264.73 1800.39 mo
2263.45 1800.39 2262.26 1799.56 2261.85 1798.28 cv
2258.41 1787.57 2247.1 1787.55 2246.63 1787.55 cv
2244.95 1787.56 2243.58 1786.23 2243.55 1784.55 cv
2243.53 1782.88 2244.86 1781.51 2246.53 1781.48 cv
2252.14 1781.37 2263.76 1784.38 2267.63 1796.42 cv
2268.14 1798.02 2267.26 1799.73 2265.66 1800.24 cv
2265.35 1800.34 2265.04 1800.39 2264.73 1800.39 cv
cp
.286275 .298039 .498039 rgb
f
2251.05 1806.96 mo
2249.76 1806.96 2248.57 1806.14 2248.16 1804.85 cv
2244.72 1794.14 2233.42 1794.13 2232.94 1794.12 cv
2231.27 1794.14 2229.89 1792.8 2229.87 1791.13 cv
2229.85 1789.46 2231.17 1788.08 2232.84 1788.05 cv
2238.45 1787.94 2250.07 1790.95 2253.94 1803 cv
2254.45 1804.59 2253.57 1806.3 2251.97 1806.81 cv
2251.67 1806.91 2251.36 1806.96 2251.05 1806.96 cv
cp
f
2472.33 1031.45 mo
2472.3 1031.45 li
2445.83 1031.55 li
2439.84 1094.06 li
2470.73 1110.37 li
2503.68 1094.24 li
2498.35 1031.55 li
2472.33 1031.45 li
cp
.952941 .478431 .313726 rgb
f
2484.31 1021.96 mo
2506.51 1031.58 2527.34 1005.8 2527.34 1005.8 cv
2542.13 1007.69 2543.96 992.936 2543.96 992.936 cv
2551.26 992.889 2562.32 988.376 2563.27 974.756 cv
2564.07 963.225 2553.32 960.561 2555.75 947.498 cv
2557.69 937.017 2572.43 914.311 2540.6 902.687 cv
2540.6 902.687 2545.45 883.574 2527.33 873.239 cv
2505.12 860.567 2494.92 873.143 2483.69 872.588 cv
2471.14 871.967 2449.23 853.701 2437.86 879.771 cv
2437.86 879.771 2421.06 875.169 2409.76 885.017 cv
2399.23 894.191 2399.09 909.902 2402.31 916.655 cv
2402.31 916.655 2387.57 917.209 2380.7 928.963 cv
2376.1 936.844 2376.12 948.814 2382.99 956.676 cv
2387.36 961.678 2392.38 963.522 2392.38 963.522 cv
2397.58 966.049 2393.54 980.782 2397.51 985.051 cv
2403.88 991.901 2411.32 997.614 2419.09 1002.7 cv
2484.31 1021.96 li
cp
.172549 .156863 .345098 rgb
f
2532.28 991.26 mo
2524.86 1034.47 2485.75 1067.26 2451.82 1061.43 cv
2417.88 1055.6 2401.97 1013.37 2409.39 970.156 cv
2416.81 926.948 2450.33 896.644 2484.27 902.473 cv
2518.21 908.3 2539.7 948.052 2532.28 991.26 cv
cp
.952941 .478431 .313726 rgb
f
2425.78 980.313 mo
2424.5 983.364 2420.99 984.799 2417.94 983.519 cv
2414.89 982.241 2413.45 978.73 2414.73 975.681 cv
2416.01 972.632 2419.52 971.196 2422.57 972.476 cv
2425.62 973.755 2427.05 977.264 2425.78 980.313 cv
cp
0 0 0 rgb
f
2473.46 988.84 mo
2472.08 992.141 2468.28 993.695 2464.98 992.31 cv
2461.68 990.925 2460.12 987.126 2461.51 983.825 cv
2462.89 980.524 2466.69 978.97 2469.99 980.354 cv
2473.29 981.739 2474.85 985.538 2473.46 988.84 cv
cp
f
2436.67 987.758 mo
2430.08 995.692 2421.79 1005.34 2421.79 1005.34 cv
2421.79 1005.34 2423.73 1014.9 2435.77 1016.66 cv
2430.95 1013.86 2426.37 1009.75 2429.37 1003.22 cv
2432.36 996.704 2436.67 987.758 2436.67 987.758 cv
cp
.870588 .384314 .235294 rgb
f
2484.19 982.56 mo
2484.41 982.511 2484.63 982.436 2484.85 982.333 cv
2486.34 981.622 2486.97 979.84 2486.26 978.35 cv
2484.32 974.284 2478.3 967.084 2469.38 968.947 cv
2467.76 969.31 2466.73 970.867 2467.07 972.482 cv
2467.4 974.097 2468.99 975.133 2470.6 974.796 cv
2477.21 973.417 2480.83 980.847 2480.87 980.922 cv
2481.47 982.195 2482.87 982.842 2484.19 982.56 cv
cp
.172549 .156863 .345098 rgb
f
2429.26 966.617 mo
2429.68 966.527 2430.08 966.329 2430.42 966.019 cv
2431.43 965.091 2431.5 963.516 2430.57 962.501 cv
2430.43 962.343 2426.95 958.605 2421.93 958.744 cv
2418.49 958.839 2415.31 960.651 2412.47 964.129 cv
2411.6 965.193 2411.75 966.762 2412.82 967.632 cv
2413.88 968.502 2415.45 968.345 2416.32 967.28 cv
2418.21 964.973 2420.14 963.775 2422.06 963.722 cv
2424.79 963.646 2426.88 965.84 2426.9 965.863 cv
2427.52 966.539 2428.42 966.795 2429.26 966.617 cv
cp
f
2406.38 917.89 mo
2485.84 879.969 li
2554.04 944.309 li
2527.21 999.226 li
2532.99 971.919 2514.1 975.744 2507.94 965.459 cv
2501.68 955.034 2501.57 941.58 2478.21 946.603 cv
2478.21 946.603 2465.14 930.547 2452.1 943.967 cv
2442.01 954.343 2433.88 949.407 2424.91 947.479 cv
2414.32 945.206 2413.84 955.997 2407.61 953.818 cv
2406.38 917.89 li
cp
f
2523.15 986.538 mo
2515.41 993.353 2513.66 1004.01 2519.24 1010.34 cv
2524.82 1016.67 2535.61 1016.28 2543.35 1009.46 cv
2551.08 1002.64 2552.83 991.987 2547.25 985.656 cv
2541.67 979.327 2530.88 979.722 2523.15 986.538 cv
cp
.952941 .478431 .313726 rgb
f
2529.09 1007.8 mo
2528.78 1007.67 2528.49 1007.46 2528.26 1007.19 cv
2524.88 1003.23 2524.3 998.584 2526.71 994.765 cv
2529.17 990.852 2534.06 988.833 2538.34 989.96 cv
2539.54 990.279 2540.26 991.512 2539.94 992.715 cv
2539.62 993.919 2538.39 994.637 2537.19 994.32 cv
2534.84 993.701 2531.92 994.952 2530.52 997.165 cv
2529.19 999.292 2529.6 1001.81 2531.69 1004.26 cv
2532.5 1005.21 2532.38 1006.63 2531.43 1007.44 cv
2530.76 1008.01 2529.85 1008.12 2529.09 1007.8 cv
cp
.870588 .384314 .235294 rgb
f
2449.39 1034.76 mo
2448.52 1039.59 2443.53 1042.73 2438.25 1041.78 cv
2432.97 1040.82 2429.4 1036.13 2430.28 1031.3 cv
2431.16 1026.46 2436.15 1023.32 2441.43 1024.28 cv
2446.7 1025.24 2450.27 1029.93 2449.39 1034.76 cv
cp
1 1 1 rgb
f
2527.9 1109.67 mo
2508.68 1103.19 2488.46 1100.17 2468.19 1100.77 cv
2399.52 1100.77 2389 1118.12 2389 1117.71 cv
2439.96 1257.66 li
2468.19 1271.59 li
2499.08 1262.43 li
2499.08 1262.43 2539.12 1113.84 2527.9 1109.67 cv
cp
1 .815686 .717647 rgb
f
2579.24 1387.93 mo
2579.24 1387.93 2523.32 1402.25 2471.42 1402.59 cv
2419.53 1402.21 2364.67 1383.54 2364.67 1383.54 cv
2364.67 1383.54 2371.64 1288.23 2370.93 1251.62 cv
2369.92 1209.59 2373.63 1153.86 2373.63 1098.32 cv
2373.63 1098.32 2410.44 1092.39 2431.21 1089.83 cv
2434.58 1089.41 2437.53 1089.09 2439.84 1088.89 cv
2439.84 1088.89 2451.67 1113.71 2503.22 1088.89 cv
2505.93 1088.62 2509.29 1088.63 2513.04 1088.85 cv
2534.69 1090.15 2569.57 1098.32 2569.57 1098.32 cv
2569.57 1153.71 2571.81 1208 2571.06 1250.04 cv
2573.37 1287.53 2579.24 1387.93 2579.24 1387.93 cv
cp
.960784 .639216 .717647 rgb
f
2442.69 1218.39 mo
2430.13 1211.11 li
2430.13 1211.11 2426.65 1193.29 2406.47 1192.86 cv
2408.78 1200.34 2412.11 1211.11 2412.11 1211.11 cv
2412.11 1211.11 2402.18 1218.82 2378.63 1205.63 cv
2355.6 1200.45 2365.44 1217.24 2357.8 1218.45 cv
2346.54 1220.22 2366.01 1242.35 2389 1245.74 cv
2418.75 1250.12 2422.28 1244.03 2422.28 1244.03 cv
2439.12 1249.91 li
2442.69 1218.39 li
cp
.952941 .478431 .313726 rgb
f
2558.96 1237.43 mo
2516.97 1234.5 2445.32 1213.75 2445.32 1213.75 cv
2433.86 1231.34 2437.03 1254.7 2437.03 1254.7 cv
2502.25 1311.88 2600.41 1330.36 2630.52 1316.6 cv
2658.02 1304.03 2638.61 1136.66 2569.57 1098.32 cv
2567.18 1098.54 li
2543.51 1138.59 2558.96 1237.43 2558.96 1237.43 cv
cp
.909804 .4 .52549 rgb
f
2229.33 1434.09 mo
2229.72 1433.48 2229.96 1432.83 2230.14 1432.15 cv
2230.24 1432.22 2230.33 1432.29 2230.44 1432.36 cv
2236.52 1436.24 2243.7 1435.85 2246.49 1431.49 cv
2246.94 1430.77 2247.24 1429.99 2247.41 1429.17 cv
2251.88 1430.22 2256.12 1429.14 2258.1 1426.02 cv
2258.89 1424.79 2259.23 1423.36 2259.19 1421.87 cv
2263.59 1423.2 2268.16 1422 2270.38 1418.51 cv
2273.17 1414.15 2271.22 1407.93 2266.03 1404.61 cv
2260.83 1401.3 2254.37 1402.15 2251.59 1406.51 cv
2250.88 1407.62 2250.48 1408.84 2250.36 1410.11 cv
2244.71 1407.33 2238.6 1408.02 2236.08 1411.96 cv
2235.63 1412.68 2235.33 1413.46 2235.16 1414.28 cv
2230.68 1413.23 2226.45 1414.31 2224.46 1417.43 cv
2223.73 1418.58 2223.38 1419.89 2223.37 1421.27 cv
2219.52 1419.91 2215.41 1420.88 2213.46 1423.95 cv
2211.11 1427.64 2212.75 1432.89 2217.14 1435.69 cv
2221.52 1438.49 2226.98 1437.77 2229.33 1434.09 cv
cp
.952941 .478431 .313726 rgb
f
2513.04 1088.85 mo
2513.04 1088.86 li
2509.45 1094.85 2504.38 1099.37 2497.22 1102.97 cv
2485.89 1108.69 2470.49 1111.11 2461.01 1110.37 cv
2453.5 1109.78 2445.17 1106.72 2439.84 1102.49 cv
2434.17 1097.99 2431.71 1092.26 2431.21 1089.83 cv
2434.58 1089.41 2438.05 1088.89 2440.35 1088.69 cv
2440.35 1088.69 2451.67 1113.71 2503.22 1088.89 cv
2505.93 1088.62 2509.29 1088.63 2513.04 1088.85 cv
cp
.909804 .4 .52549 rgb
f
2801.92 1665.97 mo
2471.11 1665.97 li
2448.85 1665.97 2430.8 1647.92 2430.8 1625.66 cv
2430.8 1372.93 li
2430.8 1355.62 2444.84 1341.59 2462.14 1341.59 cv
2810.88 1341.59 li
2828.19 1341.59 2842.22 1355.62 2842.22 1372.93 cv
2842.22 1625.66 li
2842.22 1647.92 2824.18 1665.97 2801.92 1665.97 cv
cp
.462745 .560784 .858824 rgb
f
2859.36 1669.88 mo
2565.2 1669.88 li
2545.13 1669.88 2528.86 1653.61 2528.86 1633.53 cv
2528.86 1369.85 li
2528.86 1354.24 2541.51 1341.59 2557.12 1341.59 cv
2859.36 1341.59 li
2859.36 1669.88 li
cp
.262745 .392157 .8 rgb
f
1536.52 620.91 mo
1845.64 620.91 li
1883.91 620.91 1914.93 651.929 1914.93 690.192 cv
1914.93 834.295 li
1914.93 872.558 1883.91 903.576 1845.64 903.576 cv
1843.35 903.576 li
1868.16 986.693 li
1869.25 990.349 1865.03 993.268 1862 990.953 cv
1747.46 903.576 li
1536.52 903.576 li
1498.26 903.576 1467.24 872.558 1467.24 834.295 cv
1467.24 690.192 li
1467.24 651.929 1498.26 620.91 1536.52 620.91 cv
cp
.901961 .145098 .321569 rgb
f
1845.5 741.913 mo
1548.72 741.913 li
1529.78 741.913 1514.42 726.559 1514.42 707.621 cv
1514.42 707.621 li
1514.42 688.681 1529.78 673.327 1548.72 673.327 cv
1845.5 673.327 li
1864.44 673.327 1879.79 688.681 1879.79 707.621 cv
1879.79 707.621 li
1879.79 726.559 1864.44 741.913 1845.5 741.913 cv
cp
1 1 1 rgb
f
1845.5 846.643 mo
1548.72 846.643 li
1529.78 846.643 1514.42 831.289 1514.42 812.35 cv
1514.42 812.35 li
1514.42 793.412 1529.78 778.057 1548.72 778.057 cv
1845.5 778.057 li
1864.44 778.057 1879.79 793.412 1879.79 812.35 cv
1879.79 812.35 li
1879.79 831.289 1864.44 846.643 1845.5 846.643 cv
cp
f
2901.82 640.933 mo
2616.06 640.933 li
2580.69 640.933 2552.02 669.607 2552.02 704.979 cv
2552.02 838.188 li
2552.02 873.56 2580.69 902.233 2616.06 902.233 cv
2618.18 902.233 li
2595.25 979.068 li
2594.24 982.447 2598.14 985.145 2600.95 983.005 cv
2706.82 902.233 li
2901.82 902.233 li
2937.19 902.233 2965.86 873.56 2965.86 838.188 cv
2965.86 704.979 li
2965.86 669.607 2937.19 640.933 2901.82 640.933 cv
cp
.584314 .678431 .960784 rgb
f
2899.41 753.519 mo
2611.69 753.519 li
2597.42 753.519 2585.85 741.952 2585.85 727.682 cv
2585.85 721.221 li
2585.85 706.951 2597.42 695.383 2611.69 695.383 cv
2899.41 695.383 li
2913.68 695.383 2925.24 706.951 2925.24 721.221 cv
2925.24 727.682 li
2925.24 741.952 2913.68 753.519 2899.41 753.519 cv
cp
1 1 1 rgb
f
2758.96 841.419 mo
2624.23 841.419 li
2608.18 841.419 2595.16 828.404 2595.16 812.35 cv
2595.16 812.35 li
2595.16 796.295 2608.18 783.282 2624.23 783.282 cv
2758.96 783.282 li
2775.01 783.282 2788.03 796.295 2788.03 812.35 cv
2788.03 812.35 li
2788.03 828.404 2775.01 841.419 2758.96 841.419 cv
cp
f
2100.48 219.344 mo
1814.73 219.344 li
1779.36 219.344 1750.68 248.017 1750.68 283.389 cv
1750.68 416.6 li
1750.68 451.97 1779.36 480.644 1814.73 480.644 cv
1816.85 480.644 li
1793.91 557.479 li
1792.9 560.858 1796.81 563.556 1799.61 561.416 cv
1905.49 480.644 li
2100.48 480.644 li
2135.86 480.644 2164.53 451.97 2164.53 416.6 cv
2164.53 283.389 li
2164.53 248.017 2135.86 219.344 2100.48 219.344 cv
cp
.584314 .678431 .960784 rgb
f
2008.66 331.931 mo
1813.59 331.931 li
1797.53 331.931 1784.52 318.916 1784.52 302.863 cv
1784.52 302.863 li
1784.52 286.808 1797.53 273.793 1813.59 273.793 cv
2008.66 273.793 li
2024.72 273.793 2037.73 286.808 2037.73 302.863 cv
2037.73 302.863 li
2037.73 318.916 2024.72 331.931 2008.66 331.931 cv
cp
1 1 1 rgb
f
2106.32 419.83 mo
1822.9 419.83 li
1806.84 419.83 1793.83 406.816 1793.83 390.762 cv
1793.83 390.762 li
1793.83 374.707 1806.84 361.693 1822.9 361.693 cv
2106.32 361.693 li
2122.38 361.693 2135.39 374.707 2135.39 390.762 cv
2135.39 390.762 li
2135.39 406.816 2122.38 419.83 2106.32 419.83 cv
cp
f
1337.29 925.104 mo
1324.82 925.104 1316.44 915.701 1316.44 904.254 cv
1316.44 894.442 1324.82 885.04 1337.29 885.04 cv
1348.12 885.04 1356.5 894.442 1356.5 904.254 cv
1356.5 915.497 1348.53 925.104 1337.29 925.104 cv
cp
1309.29 788.766 mo
1318.49 781.816 1329.52 778.341 1342.4 778.341 cv
1370.2 778.341 1384.92 793.467 1384.92 814.725 cv
1384.92 826.989 1378.99 839.458 1366.93 851.926 cv
1351.6 868.074 1340.56 876.047 1333.61 876.047 cv
1326.87 876.047 1321.96 870.731 1321.96 864.396 cv
1321.96 858.672 1327.27 852.949 1336.47 844.568 cv
1337.09 843.955 1337.7 843.342 1338.11 843.137 cv
1348.53 833.53 1351.8 828.216 1351.8 821.675 cv
1351.8 813.499 1346.28 809.001 1338.31 809.001 cv
1334.63 809.001 1330.34 809.82 1325.23 811.455 cv
1320.12 813.09 1316.44 813.907 1314.19 813.907 cv
1308.47 813.907 1301.93 809.001 1301.93 800.826 cv
1301.93 796.533 1304.38 792.445 1309.29 788.766 cv
cp
f
2459.5 458.766 mo
2432.58 458.766 2410.68 480.666 2410.68 507.587 cv
2410.68 534.507 2432.58 556.408 2459.5 556.408 cv
2486.42 556.408 2508.32 534.507 2508.32 507.587 cv
2508.32 480.666 2486.42 458.766 2459.5 458.766 cv
cp
2459.5 574.967 mo
2422.35 574.967 2392.12 544.74 2392.12 507.587 cv
2392.12 470.434 2422.35 440.207 2459.5 440.207 cv
2496.65 440.207 2526.88 470.434 2526.88 507.587 cv
2526.88 544.74 2496.65 574.967 2459.5 574.967 cv
cp
f
1098.19 419.83 mo
1080.48 419.83 1066.08 434.233 1066.08 451.938 cv
1066.08 469.643 1080.48 484.046 1098.19 484.046 cv
1115.89 484.046 1130.29 469.643 1130.29 451.938 cv
1130.29 434.233 1115.89 419.83 1098.19 419.83 cv
cp
1098.19 496.251 mo
1073.75 496.251 1053.87 476.372 1053.87 451.938 cv
1053.87 427.504 1073.75 407.624 1098.19 407.624 cv
1122.62 407.624 1142.5 427.504 1142.5 451.938 cv
1142.5 476.372 1122.62 496.251 1098.19 496.251 cv
cp
f
917.407 157.195 mo
903.557 157.195 892.288 168.463 892.288 182.313 cv
892.288 196.164 903.557 207.433 917.407 207.433 cv
931.258 207.433 942.526 196.164 942.526 182.313 cv
942.526 168.463 931.258 157.195 917.407 157.195 cv
cp
917.407 216.981 mo
898.291 216.981 882.739 201.43 882.739 182.313 cv
882.739 163.198 898.291 147.646 917.407 147.646 cv
936.523 147.646 952.074 163.198 952.074 182.313 cv
952.074 201.43 936.523 216.981 917.407 216.981 cv
cp
f
1604.07 172.667 mo
1604.07 198.848 1582.85 220.072 1556.67 220.072 cv
1530.49 220.072 1509.26 198.848 1509.26 172.667 cv
1509.26 146.487 1530.49 125.264 1556.67 125.264 cv
1582.85 125.264 1604.07 146.487 1604.07 172.667 cv
cp
.890196 .917647 1 rgb
f
2574.28 356.872 mo
2574.28 383.054 2553.06 404.276 2526.88 404.276 cv
2500.7 404.276 2479.47 383.054 2479.47 356.872 cv
2479.47 330.693 2500.7 309.47 2526.88 309.47 cv
2553.06 309.47 2574.28 330.693 2574.28 356.872 cv
cp
1 1 1 rgb
f
874.746 255.458 mo
874.746 281.639 853.522 302.863 827.342 302.863 cv
801.162 302.863 779.938 281.639 779.938 255.458 cv
779.938 229.279 801.162 208.054 827.342 208.054 cv
853.522 208.054 874.746 229.279 874.746 255.458 cv
cp
f
598.242 713.52 mo
582.562 729.201 557.139 729.201 541.458 713.52 cv
525.777 697.84 525.777 672.416 541.458 656.736 cv
557.139 641.055 582.562 641.055 598.242 656.736 cv
613.923 672.416 613.923 697.84 598.242 713.52 cv
cp
f
278.835 905.135 mo
278.835 926.379 261.612 943.602 240.366 943.602 cv
219.121 943.602 201.898 926.379 201.898 905.135 cv
201.898 883.889 219.121 866.667 240.366 866.667 cv
261.612 866.667 278.835 883.889 278.835 905.135 cv
cp
.890196 .917647 1 rgb
f
527.441 958.699 mo
527.473 958.699 li
554.069 958.796 li
560.093 1021.62 li
529.045 1038.01 li
495.937 1021.8 li
501.287 958.796 li
527.441 958.699 li
cp
.952941 .478431 .313726 rgb
f
448.27 923.164 mo
466.48 968.668 510.215 993.963 545.955 979.66 cv
581.694 965.359 595.905 916.875 577.694 871.37 cv
559.484 825.866 515.749 800.571 480.009 814.873 cv
444.27 829.175 430.06 877.66 448.27 923.164 cv
cp
f
562.152 886.304 mo
564.264 889.339 568.437 890.089 571.472 887.978 cv
574.507 885.867 575.256 881.695 573.145 878.659 cv
571.034 875.625 566.86 874.875 563.826 876.986 cv
560.791 879.097 560.042 883.269 562.152 886.304 cv
cp
0 0 0 rgb
f
512.01 906.771 mo
514.296 910.056 518.812 910.867 522.098 908.583 cv
525.384 906.296 526.194 901.78 523.908 898.495 cv
521.623 895.208 517.107 894.397 513.821 896.684 cv
510.535 898.969 509.724 903.485 512.01 906.771 cv
cp
f
551.986 896.989 mo
561.037 904.123 572.355 912.732 572.355 912.732 cv
572.355 912.732 572.47 923.642 559.72 928.374 cv
564.335 924.189 568.382 918.62 563.582 912.191 cv
558.782 905.762 551.986 896.989 551.986 896.989 cv
cp
.870588 .384314 .235294 rgb
f
498.817 902.411 mo
498.561 902.411 498.299 902.382 498.039 902.319 cv
496.244 901.891 495.138 900.089 495.565 898.294 cv
496.733 893.393 501.636 884.118 511.824 884.068 cv
513.684 884.086 515.171 885.548 515.181 887.393 cv
515.189 889.237 513.701 890.74 511.855 890.749 cv
504.313 890.785 502.084 899.755 502.063 899.845 cv
501.697 901.379 500.328 902.411 498.817 902.411 cv
cp
.12549 .113725 .25098 rgb
f
555.143 872.144 mo
554.664 872.144 554.179 872.02 553.737 871.762 cv
552.41 870.984 551.966 869.279 552.742 867.953 cv
552.865 867.745 555.793 862.845 561.321 861.823 cv
565.096 861.125 569 862.361 572.922 865.5 cv
574.122 866.459 574.317 868.212 573.357 869.412 cv
572.396 870.611 570.645 870.808 569.443 869.846 cv
566.841 867.764 564.447 866.906 562.334 867.297 cv
559.329 867.854 557.564 870.739 557.546 870.768 cv
557.028 871.651 556.098 872.144 555.143 872.144 cv
cp
f
408.009 905.119 mo
396.614 860.061 434.626 824.833 434.626 824.833 cv
434.626 824.833 429.697 824.34 424.432 822.091 cv
417.346 819.062 419.669 808.459 427.375 808.554 cv
436.707 808.669 447.831 806.966 456.007 800.835 cv
507.51 762.207 549.382 782.925 549.382 804.327 cv
549.382 811.942 596.506 816.979 579.355 875.787 cv
580.37 872.309 560.748 837.06 549.596 834.959 cv
538.403 832.852 548.513 847.762 525.206 850.962 cv
501.691 854.192 484.4 848.483 470.036 861.742 cv
443.352 889.177 469.49 955.156 471.198 958.699 cv
467.279 950.576 420.663 955.155 408.009 905.119 cv
cp
f
466.55 913.484 mo
476.599 919.128 481 930.371 476.381 938.593 cv
471.761 946.819 459.871 948.91 449.823 943.264 cv
439.773 937.621 435.372 926.377 439.991 918.155 cv
444.609 909.931 456.501 907.841 466.55 913.484 cv
cp
.952941 .478431 .313726 rgb
f
465.021 938.119 mo
465.331 937.9 465.597 937.609 465.789 937.254 cv
468.552 932.138 468.099 926.925 464.578 923.312 cv
460.975 919.609 455.155 918.544 450.744 920.776 cv
449.501 921.406 449.005 922.92 449.634 924.162 cv
450.262 925.405 451.778 925.9 453.02 925.273 cv
455.438 924.05 458.929 924.732 460.968 926.826 cv
462.929 928.84 463.065 931.692 461.354 934.859 cv
460.693 936.083 461.15 937.612 462.375 938.274 cv
463.244 938.742 464.265 938.649 465.021 938.119 cv
cp
.870588 .384314 .235294 rgb
f
543.426 951.697 mo
539.566 950.776 535.543 949.2 531.374 946.972 cv
530.289 946.393 529.879 945.042 530.459 943.958 cv
531.038 942.874 532.387 942.464 533.473 943.043 cv
542.717 947.984 551.002 949.39 558.103 947.224 cv
566.879 944.547 570.886 937.153 570.926 937.079 cv
571.501 935.994 572.846 935.577 573.932 936.148 cv
575.019 936.719 575.439 938.057 574.871 939.145 cv
574.679 939.514 570.041 948.201 559.483 951.46 cv
554.528 952.988 549.156 953.065 543.426 951.697 cv
cp
f
575.978 1780.56 mo
599.494 1813.01 657.246 1793.1 655.335 1836.98 cv
567.51 1836.42 531.011 1836.98 531.011 1836.98 cv
531.126 1826.9 532.861 1802.98 534.888 1793.62 cv
575.978 1780.56 li
cp
0 0 0 rgb
f
437.481 1780.56 mo
460.998 1813.01 518.75 1793.1 516.84 1836.98 cv
429.014 1836.42 392.514 1836.98 392.514 1836.98 cv
392.63 1826.9 394.365 1802.98 396.392 1793.62 cv
437.481 1780.56 li
cp
f
615.964 1284.5 mo
615.964 1284.5 641.432 1499.96 635.64 1546.2 cv
629.846 1592.43 598.124 1644.21 600.45 1797.15 cv
571.819 1804.31 530.341 1797.15 530.341 1797.15 cv
530.341 1797.15 524.191 1624.22 554.457 1546.98 cv
542.149 1471.96 502.658 1300.12 502.658 1300.12 cv
615.964 1284.5 li
cp
.12549 .113725 .25098 rgb
f
562.442 1290.88 mo
562.442 1290.88 533.649 1524.35 519.555 1568.64 cv
505.461 1612.92 484.06 1645.62 458.542 1796.28 cv
429.121 1797.75 395.637 1801.02 395.637 1801.02 cv
395.637 1801.02 399.608 1609.92 445.431 1566.46 cv
446.982 1490.38 438.021 1292.37 438.021 1292.37 cv
562.442 1290.88 li
cp
.172549 .156863 .345098 rgb
f
423.766 1017.89 mo
423.766 1017.89 481.354 1015.96 497.553 1016.97 cv
531.359 1047.48 560.093 1016.42 560.093 1016.42 cv
578.269 1012.38 621.198 1012.38 621.198 1012.38 cv
626.633 1084.91 635.64 1316.85 635.64 1316.85 cv
635.64 1316.85 580.506 1331.31 528.35 1331.68 cv
476.193 1331.34 405.877 1319.27 405.877 1319.27 cv
405.877 1319.27 416.119 1217.31 418.436 1179.63 cv
417.682 1137.39 423.766 1073.56 423.766 1017.89 cv
cp
.247059 .588235 .309804 rgb
f
836.049 1048.99 mo
835.178 1044.62 833.313 1040.73 830.815 1037.35 cv
811.614 1002.07 757.339 1015.74 678.993 1029.43 cv
665.895 1031.72 670.3 1014.91 668.176 980.356 cv
666.795 957.88 645.931 927.102 622.108 931.846 cv
582.83 939.669 626.76 962.989 607.221 1046.18 cv
596.782 1090.64 550.756 1076.07 558.91 1117.01 cv
577.469 1210.2 li
580.643 1226.13 585.265 1241.14 608.278 1239.17 cv
630.588 1237.27 628.765 1253.73 660.245 1247.46 cv
817.813 1216.08 li
833.863 1212.89 844.328 1197.28 841.145 1181.3 cv
839.826 1174.68 836.292 1169.11 831.556 1164.97 cv
839.474 1158.23 843.72 1147.64 841.556 1136.78 cv
840.24 1130.17 836.715 1124.6 831.989 1120.47 cv
839.937 1113.73 844.197 1103.13 842.029 1092.25 cv
840.456 1084.34 835.814 1077.82 829.593 1073.61 cv
835.146 1066.98 837.859 1058.09 836.049 1048.99 cv
836.049 1048.99 li
cp
.976471 .976471 .227451 rgb
f
737.59 1098.73 mo
812.723 1083.77 li
822.94 1081.73 831.444 1074.38 834.923 1064.59 cv
836.353 1060.55 834.227 1056.12 830.166 1054.69 cv
826.115 1053.27 821.665 1055.41 820.227 1059.45 cv
818.586 1064.11 814.531 1067.59 809.686 1068.55 cv
732.751 1083.88 li
725.128 1085.4 717.699 1080.46 716.188 1072.87 cv
714.676 1065.28 719.646 1057.87 727.27 1056.35 cv
778.678 1046.11 li
782.896 1045.27 785.641 1041.18 784.804 1036.98 cv
783.968 1032.79 779.865 1030.06 775.648 1030.9 cv
724.231 1041.14 li
708.182 1044.34 697.715 1059.93 700.897 1075.91 cv
702.672 1084.82 708.39 1091.88 715.824 1095.93 cv
711.502 1102.26 709.611 1110.23 711.219 1118.3 cv
712.999 1127.24 718.748 1134.32 726.215 1138.35 cv
721.926 1144.66 720.064 1152.6 721.668 1160.65 cv
723.607 1170.39 730.201 1178.01 738.67 1181.79 cv
735.113 1187.82 733.577 1195.06 735.046 1202.43 cv
738.228 1218.41 753.872 1228.81 769.922 1225.61 cv
817.812 1216.07 li
828.027 1214.04 836.542 1206.69 840.021 1196.9 cv
841.46 1192.86 839.333 1188.43 835.281 1187 cv
831.225 1185.6 826.768 1187.71 825.339 1191.74 cv
823.68 1196.4 819.627 1199.89 814.78 1200.86 cv
766.892 1210.4 li
759.268 1211.91 751.84 1206.98 750.327 1199.39 cv
748.816 1191.8 753.786 1184.39 761.411 1182.87 cv
818.224 1171.56 li
828.44 1169.52 836.963 1162.17 840.432 1152.37 cv
841.869 1148.33 839.742 1143.9 835.692 1142.48 cv
831.599 1141.03 827.171 1143.18 825.75 1147.22 cv
824.069 1151.96 820.118 1155.36 815.193 1156.34 cv
753.517 1168.63 li
745.893 1170.15 738.462 1165.2 736.95 1157.61 cv
735.438 1150.02 740.409 1142.61 748.033 1141.09 cv
818.687 1127.02 li
828.904 1124.99 837.418 1117.64 840.897 1107.85 cv
842.336 1103.81 840.209 1099.38 836.158 1097.95 cv
832.091 1096.54 827.645 1098.65 826.216 1102.69 cv
824.533 1107.42 820.582 1110.83 815.657 1111.81 cv
743.073 1126.26 li
735.45 1127.78 728.02 1122.84 726.51 1115.25 cv
724.997 1107.66 729.958 1100.25 737.59 1098.73 cv
737.59 1098.73 li
cp
.968627 .827451 .235294 rgb
f
587.948 1250.54 mo
538.887 1260.31 li
532.091 1261.66 525.485 1257.25 524.132 1250.46 cv
495.098 1104.66 li
493.743 1097.87 498.154 1091.26 504.95 1089.91 cv
554.011 1080.14 li
560.807 1078.79 567.412 1083.2 568.765 1089.99 cv
597.801 1235.78 li
599.154 1242.58 594.743 1249.19 587.948 1250.54 cv
cp
.498039 .6 .921569 rgb
f
630.448 1268.07 mo
620.019 1267.25 608.437 1262.17 600.518 1268.75 cv
585.444 1245.52 li
606.935 1219.88 649.51 1216.15 653.796 1216.38 cv
664.927 1216.96 670.193 1216.54 670.845 1218.13 cv
671.498 1219.72 672.814 1229.89 656.588 1229.56 cv
636.225 1229.15 647.267 1247.03 690.034 1237.51 cv
700.742 1235.12 719.189 1242.77 711.219 1249.23 cv
702.438 1256.34 677.906 1271.82 630.448 1268.07 cv
cp
.952941 .478431 .313726 rgb
f
416.432 1220.64 mo
400.779 1227.24 395.027 1278.35 399.784 1281.91 cv
470.338 1304.49 603.751 1267.89 603.751 1267.89 cv
613.631 1242.03 li
613.631 1242.03 508.475 1239.69 416.432 1220.64 cv
cp
f
381.771 1071.42 mo
374.534 1117.67 388.04 1269.72 399.784 1281.91 cv
452.076 1240.7 li
452.076 1240.7 457.391 1086.7 457.33 1060.53 cv
457.331 1015.23 393.44 995.89 381.771 1071.42 cv
cp
f
808.27 1028.88 mo
807.631 1028.19 807.17 1027.39 806.788 1026.56 cv
806.672 1026.67 806.567 1026.79 806.448 1026.9 cv
799.471 1033.32 790.078 1034.47 785.474 1029.46 cv
784.718 1028.64 784.154 1027.7 783.744 1026.68 cv
778.196 1029.06 772.47 1028.64 769.181 1025.06 cv
767.876 1023.64 767.112 1021.87 766.822 1019.93 cv
761.436 1022.67 755.241 1022.17 751.559 1018.16 cv
746.953 1013.16 748.049 1004.65 754.005 999.167 cv
759.961 993.684 768.525 993.299 773.132 998.308 cv
774.298 999.575 775.095 1001.07 775.544 1002.68 cv
782.212 997.788 790.286 997.268 794.45 1001.8 cv
795.207 1002.62 795.77 1003.56 796.182 1004.58 cv
801.728 1002.2 807.456 1002.63 810.745 1006.2 cv
811.958 1007.52 812.706 1009.14 813.039 1010.92 cv
817.712 1008.27 823.252 1008.59 826.489 1012.11 cv
830.379 1016.34 829.454 1023.52 824.423 1028.15 cv
819.393 1032.79 812.16 1033.11 808.27 1028.88 cv
cp
f
416.432 1220.64 mo
400.779 1227.24 395.027 1278.35 399.784 1281.91 cv
470.338 1304.49 596.373 1270.04 596.373 1270.04 cv
587.322 1234.06 li
587.322 1234.06 508.475 1239.69 416.432 1220.64 cv
cp
.054902 .415686 .254902 rgb
f
380.605 1070.42 mo
372.918 1117.69 379.045 1271.24 399.784 1281.91 cv
452.495 1241.67 li
452.495 1241.67 458.683 1084.61 458.739 1057.94 cv
458.945 1011.76 393.006 993.224 380.605 1070.42 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (People discussing media ratings.eps)
%%CreationDate: 7/1/2020 10:29 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6bH>5EFr`JZT`<t;!.h$*^,kdF&^`KFgdb\."t:2@UdRQ_$H];Y1Td\"6?\VBHK<,fO9&,cGiXEGT#rg%=HGuO6M;LHYI4(a
%F3`%3mcs)3#BnWdA`h\?][)TYqm#jPht`i?2d_"4am79&IfJP;rT*+]1So@qHce93hR@pglogUUrnr!Lk9%G;l)S1(\*LOEXYfHq
%46OsFP3jl;3;W0ia'X8glLQ\/q!FQ3?iAt#%rXX[oC`tb\U!u9Q_315iQIkJDdM;ukH@)JoZ^b!gjf1kj*tLXh#2^!kiqc<YFaU`
%rTrX42g2KddZcu-s6B9TTDYIf55XqQDguf6O%aipLhH\8?eFW0bkO-YrM/9MbX=[Bp#VN`kB9^mk'):NHhZ]M0e%U$oM=BC0CSo6
%h7nC4J%b`K?iG9<roW$dGkZ^%qjW*7]5`P6Dnc#5jkG:TMf8OcIc-j2qWs,9?[hfC0<VceD@:W'fWF/[pLS?C]`UK8Fut&f0"%P1
%1.O31hFooPIa_o4[r%/d#9N@3e\?M1lE>YWo+,3Ar8cC4J$jK=^\ldNs3fb'Wcd(gVuQ%[?[_e9m@Sk,qFc1ZS[,5=qhK)RH1e-W
%ELc%Qe!GHYr(4r$^;lkYI/EM:?^fueq=L^@?bcF7-T>O@`P14O]_q(s:kRgFq4fTLIJtU4r\8?ba"ulun$6bW^Y<V]m7uiWRAo&=
%_<WtjAErIrdda5B#\V+:j(]Uls,Tl#roib8T>1C'-QBeSk.:,1DdS!7W(PAp6\"U)DTD#A)?9TYgT1,?b?(=Ve!QRfr8C63[bF%E
%)(tjHo1pFaI"q+\$Z+\7Z<K"Wr:J7[rO9fOIqP\Sl3i(S$9n;VDsW#+TB!jSr4tVGn&@kIr97;VbMR[Dk,U.as7=!Mo>;[JkjFWn
%J,\`QDX6\j)u]JSDgoW!qti&9p[-/U?i9>q3WAR!?e>?@:@QTPQN(*%m@TYYs7]7fDYQ<LfH8ZChsHd(pKm4Dp4'8)3nK;9s5g:W
%hgC"@a$4KKIf@I65C*(uMf3VhJ,JQScX4E"i@fZ'>PWVhE3a>EmIp9l-edt'CB+$G#M6*f*/$+K>U`&6p[$%PnG6MGh7U+Un;V>?
%eF&5r++MCb\BfJS?b=5?=5W(:s4DLCo@CqS-T?PIkPp6Qn29=Ve+%.9*XX[:U%N@`rj:L2OcBP0Y4iq)\9C%/msk2u=24P$m7Y(T
%mAka0lIWb,QXB`g)>I:*J+ANTrqiOp"*oOo]>ad8'BrEPjMh)aY<VpU2kRh``FliejS*[q%GjE7hSGf^Kl64JFXm89?f0,mh'Lkq
%O(nAX\iDqVc^M6H*jWAYD0@`$`kIS4_$%IMr/X%nMgkQR0E1P):Yrb[oXB>'\K"eh\)H?lh?!okFJs&sC[:m22GNCirr;KkCZk0Y
%mZW^OSm;H)DNH7DrpKaQ+'sEml0FtVIJLih^Ado>I=Q^6%Ur$Y-`^GLhSU\:Yc,>-iP+H'^QHA/Qm:_g;l7q2PNCeIf+VZ2dh@MQ
%WF<".Q2#aR_`25@"dl%Y0)>OH)g0VNoAYtc2P#9@9`6L9q:T,gr:8m_]_R33J,]0'gXiWXc,9^\reoC#RnJ5%Z`d\bq+=S.]"XIK
%^5'H9boZPRJZa^?XN/A<T2$atDPMVj%d)Gqr:,ht[;.d@mQWr)nU#1]Ie)3?f:UjrkYFGCr8hSRBDgOR2p&5m+fTb4q<%[?+9(2j
%rpU0maU`m*l+aUeX_`,qp9S[c)r%`l]Bt&ofH.L<BhKo:<)ZG:l=m&^ma?N08<<"(HHKGe(*8]FZ\=`kcTR>*Nqe*M^4NM=X5H%h
%YG3W,3k>t'\*Im,G"#]Cf[&Zj5Q$(<RFhEq=8;:6>gH^Sgm@3`(&2UX_T%Kr4[$K'H@1$`\pq;<RSVtC5OD86WBQTFr03e](Jc\j
%]QehonDaGdh2Cft^Xuo#(\L4BO^Fn#gZ-cCMoWlYLWB;4]>s_,*\H`(g`P9\I4Xn*^X3ea?Hcc#'t]''#?U^Y=89@BI,G@`CY0B!
%Y/)X<S)=&*r[g"NJhi%/4!R'"C$euX\3>6=2tn)6SOCN$(ErL`Ilt_Fkl*L^&,jBJ_YiP<)%lSu+7/m^R4\pFl-t`.\rod#[d=Ci
%_"?jIoEe\Y9YYac>,C@m;_J%c0E$OdM)1^K2>g]@ch6X@Vt9/uFM9`po6WRem!?,'kEBdJ51uJPqng=dFLCSNgNOb5rU3Dj*_[Y^
%QsMm<fuPm".Ae]AoVS,W9[faue#!B!.bc+adBqr][,cVc&"`B.cM7D7m_?RU^ZkPH>&%*2P^]spDKD7pZ[]bIbb=r$Y;YRshe(9[
%db@"?(qH*D\5lARjYkjb\%eF(6.`SE%OE.->_^\Yn+,4nQMeS8P+U&AB!u-,o6n0Qp=&GRqs!jmIcgU"rS69pf[&UV$i:.*Qk/F)
%gJ>)HqU"SAJ*7F'@G9$JG5U;0*Zc@D+7*ds(W03[KCLZ\(,M0)N+FeTf$3+]1HTe[$<)jZ')Uh5L1.MTF0!RJkdK7Gh>SDf;J3VJ
%$f9p<Fs>BVdu\+X_hQR1pUXSEargQ5pUQ>,ra<LYj6UrQqr@Zdg9u,CG2<)Y?Fuc<GN8c$Sc.>f]<V>L@qppa2';@)e)&*WS+pnq
%4(d4Bm>e4FPaUpZ7^S.V;qLO@:H.X2fK6aPT/lD5?"NB"/S<*p*Q<JDL,H#`1&f[>)"@),FrU1!1R#:*m.Td;qQI7)hq7Xljo:be
%bW\lZ]CTR*mEn,U]m\+=O3m:=2>bb>5'\oaoQ:,m"7sIFc\,.mBA^aKQ*sDHNU>;Ob%:b>_^"*o*R=1tCBn_rL1*ZQoR.`pG'+o(
%Gsn2VpmW8r>E?YkiF+^;cWT]7r#.5KT$Q*U3W-CBM][06ippBh[itX9?^P-TbS`56AtElr%sO7@mVF:9Q5=.Q2`k`V(:)K(p,YmV
%n'!%>g3iJ`StC2]CNsX>J)[WW?K(/:q#lQGS]uI=(PZk<0E2JWFEd:Ncd0RCZQD;64<:#S:\Xs/17^PM_l)9cSh'7"Nd$A+=82N8
%^!h+jpqQ]Si^\21n"61.IX&'-hmhG9(3[IMeg(.$hVu!`cXtlQbfJ\0JK&3KG+/Q59a:DW4gR34q`Nd#q-MBkHbSD/*LegTmeSR6
%:JMDcc7ep@^AIO#o*I$n)/o+mT?lrtftGD;e_S7B24sm-0?5)gmF4;>gV2P;oD>sXJ'VkYGiJb2Sj?JmZC*Tc3%'.3#0J8N#L7aa
%+e(?_Qt)G'DAdqbc"<rY1Vgd(\UIa5=[$LEbB%%P*2T5seA].m/_j)?-S'E@^7DS`;JS?s44q.M=ZeKOM1.uM:ScDP0mDSc@?Oi^
%Y_DU[p-85R]^/Erb2PX`D*)7@r3Z-04'>V;XW9UCa\RJ7I3(l8B)"S0r:W.7KeuR@V*<a!QlC9o2pI]RGPb[Pf2TuX-4>'iCm704
%3P&G40WcMl["d6YLRJEOKYDL:]"SATF(<#eBZ&/FC`"K.6Q$E*m.$4UnR2ku)%mEQhFW%UUQh2PI#0GE;`/(%LF,Bd8*sNM?gFM;
%X.qOI;f42)\M5\8frM+g2>CRJEc&P1;>Ct4s0a0B_]a4'<]R(U;i^!cf'/]KZLMa@>9iumDrj*EkHe#j:?2(0G"lm7E]%_H3SYik
%@'l"I;Q(?YR($d9r#OgM7oR2N\-*QfA;^s0*UMp;%s,Z$)a&4hWMZUik--5Em`!uVC(C2[Iek`GJ"!EfDmoYmPT!EbAr[;D;m?l7
%_96^[4a*;17Ne)&!Qj7$!s(,/S<*kd`^X$\.C,)eCqT-@:(TqJ#fI8Q@pip/npu\E!Q?I9@m$ZF:/P;/A61n)6[[KJ`^?!B4jl^!
%(I*-0L]?$F+8k<LIs`*j5O%>MA-r!q,n/USSft3(km2<SLR*>/npd3;HYCSYX)Bm>rsG;g3-=E/E36\FB_,q,RaN7qR#!Gi6$Fj!
%Hi\0G4Y7"(E_W:MP9qSj;K5Dd?*`thcmJ#+Thuo[WP8">;F+Qs?jrl9VIcH,l(hb9YsZ^1B@=/nY2,X*c@:<<"7"b=kOJE?)sP<>
%-+\rc+S=W%243,+]5cDX%s\66a:BtqG[D[^+0t4M<?n.ILIOfV66grM:4uZ$FU@pXHLZ+)$X"=B%!Es/#'JtQN#*;T84u#SrRbC?
%Y1iD:b9QsFXO"?Ij*_AN-TsJ3jeOW.'8PFLFltBak.MW&48J@FeMF)Oce5ch2#A1s]#D!3^2NO*:l00R#G$U/P<M@'V9@4rc%>Wm
%b6spETtAZV=L';XZ-&$Y*AnQlZGP:4RRTK0-6iJdbh#43@G4aUa821#AImgTBi6\1l)$*Eo7c"L2@\=+Hf!MeIPS67bTq@1UO12f
%(,0Cm-]nL1rf=TSB)TlIc0@2`qC1#4$/h*Jr=0KFQf<s0q:ke`*sdQTZi2<.Ybqem+tQCuDOqbG>&Xt`7o'Fl-3KGZ!gNo$@fd5+
%^Lm0@q9!6.s-)-!8$aZ=2?]pP(Yrn&A*,Ql'5B_WPM)d&AkDI8!"A!b)fr""Wc%LOCtk_!b.[&_1p-#>43d,aH+9_ES&NH%bW7qT
%L>A8hffbecgeI7;BjWbMh"$Znj.g>M]kQXd*URHeRqZ\Ic=8[)s2Ci6nuV[s,N7lic(o]?_eURUlbrNYn\%\FY7oea-S@]6D]?UU
%h;7?Dr5Y*@U<bFYeMCrI'B=S#K7?=Pmi*VEIY1Jqh>d-8Dr:NjGCTM5s5r.Pq;qWqoBuYXjhH9=msk/j,@:D]?eIm52166X1]CI%
%)@gjP-)m/1+8fYjV:UbR45B-lAnGB%),[Ei4RI=i,lXE\HMq"A^](;5Vgb(iD#Dc38DtNe?d=4J$erc(Jh&K5*_q)d+^HA`*_m4C
%o+\tBgidbc2nJB+'Ah+gHEg^s"`8;(l'-P9?Tcu%5lV!.Dn+PFh]CXl_1%=Ge@4sje(=N-YA%W3H^r]f`fVK.4A]U"_@KYB(%F54
%36oAo>q,f=M2OK$MCdQ*_*+q@h#0k+.l!&HA0f27lb;ikPpF\W#B-1`O(:9;mDDPahm&WoZoNW#oS3mYX?4<4gRD"?J/3Fl+FXts
%rCuXcQ[eJ=M4OWX<r.S938<]=ieA<Q3(,'s."\G:'L*,okAgI5Gje-k-u)Ae(n1X^"`OO9nV?@aiSWJTbN.R0fZVd6Tr4<6OZ*s"
%;-@Sd?i2f#r[\#tqma&c\Ws/bq[5lkM(r^U%,)S3hD#+em+7H#[I=RKYm]$#$\;JP6nHiC<ChTtK(@OmI,0$ps/o.in68*S;>o$Y
%?6e+JW"H,9)rjqDOqr%J4IbMA*iRcdN5#scGNsBprQ`Rs\S&D^m;CEkdr!QM%-)\L[@(IPl9YL#PNh\PkqY*+RLX9.1Z2i'^GD/M
%V?-\<7==Z0i!Z_m_I7i]]&5aA:6RoB%n;6aDIc]Qo23L]@sF4m*\IVTEKi*8l8H!W;`p3'M=f[c!Vi?&i7B6<mH))BV>c_3ffc0Q
%Ve")#nI8DI?`2*iS8(gJc1@Q?e,B0(=AF%ONi6VV<,B%u54Wm",MIgCB0Ek+F..(/P>Co,SS(r1b)QSj:"MQ)c=gU)QC_<OkG-(H
%CBJ<Vb:qi=%(cErblcpaDWYDO4Tm<,5G)L_F6@&d1u.hKS?+Sp$gDalhp(uPFU`9@MbN8FnXh9^X[ehhbrgob:\u(Pq3sFWs7<k;
%H2#(eqjUslfC/^V]>+=7]Dil]mP"TE'E.=1In,k"=71%1<c,;T)6g)TWI7GJ6],emS''4*)5hB^TpC!$VG2Sg>SLA>i.onjpeMoZ
%'1^ru_-\!fr&/2M14@n5Hl%"sRt&BVe\9@ZV=.odb.c3:p5esa?[Q3ir4^,EI>RLk''&^4`pZQZhj51p0/7o_@f3r^n9m=]H_'q<
%-be2hmn8Uh(F@)YY]lW`=Q3C[f03[As7+qFna>;IqfhN./Hbl[l_\i9)O`h.]\UcdDc1BES6N\KC#5;A(#A_Wrq`t9_V\^7,P_H?
%fjAOl5I5k>(FK)2458"%hYbiP^>42-6QYo!lk#M@'An2WhW*eN]D7);Ghq!oSBp_6l1GbSi;`!_gqE[Wnb'q1iHk=nYA\laG3=?o
%s5qS(2a=nNI=F[-M:ga]qj/E)$[\!]+8b9"j:V6LE5[6b5Lu%urNC=/7m6PfGmj;IKc]B4+\P`g^6!@SVVk)+jQMf.C=W*cQTV@V
%gC5,4]`KT'mfZMr,At*kD8Y`F!ZS9[!Xq[.pnSVbEq;#HX5c*thB:(<S!r`6T75SH1oCZH%CJ<\rNn!7k(/<Tl.-Q]hi)Ym0@nET
%pY1ih43t:?n&6p2DgQC!bp^&**Q'OC;L@f!dYXPX'/\LR$$*?--l<]RV<mf$fLDjZ<(U^m.b4a)F9tG$;hC0nVe`9tm'YPbXl#uY
%T!J='fj4'c5(UD*.;h./>MF(/.ga)72pgo"laWA]2A]mnZ-BZKQJ"R^(H[Q@SoeA>;j,/(@Zn=WI8aSjqDbk@bU2H;JY6p1CVNo^
%,YdG[@iWPN>Pi(?RISt7e'@-D_`lVrDeV*E^U7-JrKt:P40_Ro<lj.6N\B1u>M=s?!Y#[PIHj^LQhtX/E$LCud6M5\E>uB!e=eGd
%2U-,pVX68VHUgnkIAEEsQL#!/*;ZDMJ=%Ep:]?MNJf)EP3(H=+rO?3jLW"87Kf`I3@Rm59]<P99=1)rn8[`X+LZ[?/nN4]=qtJ*7
%jEAS-g2Q#o^k$4>J_dK5A_gVI9L2@/DHksJ?\qKFK9F=]f[B/c.C@,bK\`-3E#HPg4du=u`s]'rkHj\jC9\5^7t,>]']O\ILtA->
%c5k[%n!erN?l\N9P'u/hM><PfDVWK'_kIMq]GF,_6_L4iqhH7QDY&SnM,1<*fQ6acW#^:BqiM*("mu2SqX=+tnX'D:.mpd,8(OcN
%2S!u:#'<%IBXrolfoW8Hh^YEAk9f"sn(]L=;k[p/P9'B/5RU:ohFBaM=7"NcmInPEp0pC-_C?"4Dl3NfY46ngCgF;IDc61Gm#=d;
%Yg`$cmag.p4InXUYW'@)`(.1YU:5fV_2+N6EEb-Dls#ddR3:lP#5e4E;Mp?g8Z<sHCcJO'Cj=ktS"qUNVdN:HNb`rTOP7=^G.5rk
%4OAK`n="@-AN"S/p/Q=jlEV/;b[JNBm]tQUK:0*UCid\5D8RLk_jN64m[-j.Vl9,6mU`<La+OGH2Z$"b929Ia8F7uqb#&C0_&'Bp
%@Xqo$!Z4OGn*?O30]b#</Ul?,^8g4t@FiV>2bs9jHiqY>*EL3%$D2Q]p<@E2aW8se5%6J.(BRc[J%VTCFYhW,6WHed5_I`EB5Mld
%2HT:C6tQlf\C^D821sCP6d]e=dS.HEP]qco6#]#(l]ijPpb5Fk13P.B;ZI44cWf#=A[>=3ifQ`&pej!MU#5RN>D6D;]iAn'NqSaT
%0%j@N\FXTV%+Bjn"/\A*IJ+/GAA@&&c+c9,1J$n<2Fm@mA"-PT@"VH;b>-[2"GeH9Hf)I"32?YrA(P,+@2KEA-VSAO0[VYbX=i[1
%qqE*"41dX$SH[Iqo40<m0#PKB17AZ77DX1+7ic=n;alDnq0?2"%CXGkHu>DT]9t[OXh-*E9bWo+CeDq0o%;d,VJ99qD+;D>a,"la
%^naEV[[=g`D%riB)>cr=Cm\/+#L(h@.->K>J5N'AP7l0tqN)h.Um_BqDsb'i2U)fdHt1GuiTZ+d9c+"]dqqnY_B*2GJ'T4^?EDYp
%V"h#,52#I(Mh\2B?64j&3J0Djk)YibLkk2u"+tr?QKrEAhX_n9fO)][I9^)FVLs8S!7&8OPM2+eOLD1b+!&AR`8B@iI"J-Yb_O5i
%W!uYY$OSF=Jj:@l"<:lBp=bRCCe?U6Z#@Tq*ch`2aSsIfSq+GF&pt[MJ7dZjc!E#0?Z*0hWL9)d0&o[2k>*h/E=cP2RCX97(*030
%R0[ln^?H^W&!Z'jS!4h)dVqu?f]^emC&H8Od[GL@6"AcpiBis*?nc3JooOrnCZftYBebpu`T%A+n-Db9(S+5uNQ/Sjm@c2CS6Ch%
%g.d8KRc0+WYO*:b'RO"&]_%2`"oENlVIn"k/)&mV>D&\]JfX_U:cM-c]PdF@EL^1Kj1)YQY^s0**QM:&"LP0k%UZ27c'A9QG$?j\
%_k_,D64chsFZ9$')kAN1JcQ?omP$[AQuJ<ElliSE%tZMj;KqoYK6->5=$Qg9mbYsW5>KcT#XP4!D/X5+mBIZQH^Bb\9p427a"!tH
%VP5(hN<:/,U##GQ?$Q]GT5V>er+)Lh%9:ks"Jdkp'fOXEB=/mn&RZT6[Ua`qN$sS-9EUcjNKKAY7`o\n!(XK<k::R$+RF>6gGXDQ
%]c'@l#neW99gR)dCpVa1km>;V'#59P<s[Z(*etWR"T'nfm%ucW3)P3Wg)Z;fn]=$qB^3XiKFp5f139<"D-"oT0MckZhrWK%-/&oD
%c*SYt\seUsc@TgjF!N640q+p^#Fi<QcFtPZ!S*Fq`]au)%."+/rn;aK9UIn8H0t=KEb$<[fh>iI:JG#6NjL;!&;"U+'*K%FhE#O`
%@$sud(kUSF.,PMHEL`t'$/gO7EUKaX\**.UP^1$N*3cjhEMf93[Mj<]0@O1OI09/Q4ltI@Fu(ri.`Rk/]H^tf0TR;Ve"jVrU`?%Q
%BEj)s@#iB#$1ql:4bWUkG4pU4C9L;sc;4S4-^"A`>j_2Bc)B(G6'2bLiZ%=l+\fr?nJhVZNd]0f90,1s[*s)h,1qSi/Xs@hg3/0n
%pM0)K0ZSoBj9#lX[K0RKMM2bt%0lALl/WQ[,,V0_b_drZ&*o>$.=ng,2pL4c0*)rAq45Vpk^f]A0*NH:2011-1TC3+$Kr>15QH"Z
%.R#o\"^g.JY&q?cKFQ^+iXm79^+]_H6/`V$7P#iG_WD>mNM"AKM4/8knE>a$,E,$$AH4uBLi:R)?f8.]_f@XEc0ithKJCN_ABqb+
%`a(L_JSYfi*!Aqr5sY/ZZ,5:<3B[!rDM&+I1ummfYa\+MTZjFk*^=0!3oPCt50TG'O%.<Rq^`bJ8FnB+7Ztp^e!0BY"RsqV!VGmG
%P0uko2C`_d'gAM>/bV,AbcM_Z&j17B;\&,-F(b1d(UUDUjHuDmlWH.ufV5E(W1-4_`O:-4lc!:OW&)*%D'"J[1SaOF*Q*$idW-U,
%T_-U5b\Tb9BXnG[aEFB5F>*=pB#[5EO]lGj"1H+IKJXpJ7!\t,']**c:WI[4]=!DG/#QfR.[3Nj:-Uh^SPJ"#-j9;Z?,>2T9[b5@
%-TnT$Uq\8'XGlBUBK$2,%BK!]OE+2lQ;$+K/.t8TpZcsKSlmf/RU%d#m9Y)XbbH>uX2rH2n]]&jXmHiE+Vm._6:bOkd4Iu^F)>EH
%$5c;uaG!0odS7"@aU*C,Y!%!A&(`quoZ56S.T3n),de.Di.@bql)!1nKM1&M-J_@2!Y`bDjma+^$3oFS,Q,m<;_Tm-K<Aq[4@1*e
%$mNVOjq$/H]Iuh"H'"g<;as<.bE?Coa+lW!^q:YU@od@Ad%ODBc6R1mn/=u@g8ip>-t]D5E_)Q73TXfkl+MGLT<j.k[GYNLdGpK!
%rZdB0N-SjLOf"cXlAHV!\TC\N(jL%H$r[a/EiL`8Nj>0e5%Yu::nK'`7L#Fs%P^'q["&e-8X_L1dmY.`@#foja*r(+GeXRJZ6q*j
%W%\4l>ka^_^5:)?2Mg_[@c5$kj+%Qu#KP7Z1/k`KDP9ASF(M=_[],6e*Oikt8a\bmR%6IIX;UHEU]K26lF.&H//h!+g#NV*![Z*]
%58bU?h/8gmKbt"/&nPnL+E.W9_/5I5W.,gZ%h[fU^maFqLg9F90H&i<aFR/sMB0014le8!KalO^\iVN8X_/%U9Qk[8"4$S^[V8uT
%Z=+4UBej36;j6bp[78Inm4,\p*!nRW8;R#2]/@/Z9FnQa$1AW)6&`X&A0%/X9W<$PN8td2Jm$^\3QIVBj'q,HoU3s-fW:0Z]8`:"
%JN<O:KL*EfGl"N=d'2?NN7eRBllJ_"UqR(VBdPb=GQZ^#%j6X2>mbcY!p.Re.HEl[PL?%mqIcG@Om]HCQnIoN7uMFO1;9"Bl>Z%O
%Ra4fq5n]9E&Nhc=Mg\[oKYKhh[SE^1Bq3'BiXN\Bg)FR+JKL*Y1pY<GdkRP3mso\k,C=&54/Eg__F2R/&ORo&*i>KL0YQsqj<\G/
%K&#\sm53,*,W!XKm"5TW.O!7ML9'.-AF+,Q.l.%uWZhrX%gFim<.5oK%XP^V2:^YoQudjc1LcrsO)0%oS#1`#lNaO"G,2tt9q7&:
%Ts<Q=4_USj.9R<@bd6WF*I/,/dh#.B7.A2i;"e'@@+Lm#F;e5U,p&D8m_K!'>Gg!T@@J*Mg5XDkq&0ZG"IX?&4E'(5*60BNO8!*b
%m6:AooJ_JI-A=b&2Xm9m7d1>5;/JijJ>'L`;lEjk.P.l&I\NTL"s(T&(2H6U8q*87)<PD%:<G742AA)/4R3'$c08gU`Uj)r9G)8)
%,Y/LaAt$95'P_?NYF;W%8gFu,)N_h*cf&Ns*[`mLhS\f'3?:Nn"Oa_[m`(3_$.br72!a97ju")&D$1Nf4>jJWSe[Nk0IFkscX>.4
%O]SX%O:A2cZs942!h(hW0PsEJ6[`Ps,999/\=-D$8=g%BK*gb]nS1Tj72<t+_lldC9lDfB!o,%7GcVl!H9A8\5gt&?at.M<(M%8D
%1%-9jLS0_NBt1(j9P[bLR]8%<jcIc*1^gFZ*(*-2@$-C:.dTF>Sk>q'LLE0:Ls&p(B-1H4j$X$lcBKTt>fZF^YO.erBP'F>^bdl:
%=HkE_i&!g%$<U9ri;9Jl=FC*^7G!96A`:GKJka$dYoGQ8]&]G-)1d.Pi'`#fPM)i2-7)OUAW^pPWd;".R0Vlr=N5lNiu>j8RJ_a!
%\11B!]KM!k)!ocn$FAqoM+BkVTnK7hIa(O>S&[TM&06cP,LbQ:T%\kp5F/uPD-bg;)a6f'5fk@2_5XG^S9L%1k^h$H#U+)<?<C7M
%.Pkk_6@"kM6>%@r(F4Fn63%W@APJ2JjL;t2fm@/C.7/PNY7W4Q4tAsM@fSA@^#$3#C19KGXLVhR&'bK.8%N2;p,pHT6S_GL5A?@T
%0!tLqS?R1g\old4(Br7JdgUcC4M:gGc"gke.E92D$o3q5_/+e9+;LnW\RDQ>U?Vf0IUBKd:[hCD3*BBlZaB9^30ZcQT4)9;7?qAl
%?M-YYN?K>-CeXaa'Z!jO'N,<0+JnM"&7nJO"<DRm72]2uC?p<g`#5=eSg6,ndrE)<CO33'39pTNkU8of_h#6[k*%O#<TV&b_&A-*
%bVo7)4$uFH9^FTEOdJ"tgO<r`+C$QEA4]%Z1jtOqR"O6(YQNDK&GS=<nlh(0Z;SVPW3Wf6'rg;?]Qsl=l,10dF)6J9&*4,Iiu-J#
%H.5q>"?Zmok!f/q[s*\'?0BDHZsls`S``*FUaURb:E/7LJ>?SQJmL`>V@G[6Yt#NS!)hDC"r>3l8tZgTdub&)5/<(#as$g?2=4>m
%#kKGuX+f=8b?Q'sB?gad4IEST;mWU65roi?R=P*HZTq4GVs_k;_=G&XAaMF'4O^3cHCV+#DK@#dK#>%i"].kI.P!fs1,4cl*l02P
%]OOm:#6#?,pHp?>Kj'is[d.t'nkKIc3*W'j@$;)Xb!KK4Qmh#hbJR/c1-sdmE1>9_&BrU3SCis-BBfOp"J>e"=48K/6TFJ4@(=,K
%R)m&l8VQa1^alOe2=]5V*TIgB<VZa,#BLb5;TpnAPQ_kZE=;1>G?`=I+"OtBRkf+RH+!"=FONach&Om#<G[8q03_."VDIg1'_O`l
%f<nL2lhNr.';&XX.u5T-+umU&YfO0lp0\8YcDJCeh.e@8`lb@.b[[Zs*!/&&<MAF+c%7GME!)1A<*8',+f$Tp@J)<9bi'8HJD@U/
%_-Wik;q!67S:am;*6YiYJ!fUSgl%#pK'Wa)A,+!0&.51dA`JlpDOiF$)PPg:>\@.DH:oDH?)Oln/VMSmNJsLnJpYeajpK@7DFAo!
%fi6^\IudBY+L,,^M;>gV>m268Z4]psMJ?5p;p#Q=6rl!mM(109=$i4Db,1PoKkLk'-3^!ICEB.AE/rAX[XMI^L)RT>jX(<ql8^nj
%,9t"G?<]_;]X?ea7V<02Kl%6_WkJ2l!.9qo=G4*PYU6?2%OpO1#Sa:aYXQ>A6;-[-Qc"]V-3C\.rS_WNOiXm@=-XdKM;gNZVB<:h
%:G&%eGE*l6q0,f#pH5('jV7[l5NSLR">4)OSa>OoAn)uk(Q(1("#Kh7'"jmH>eK'J?tM;.^**iBE$.>K;O0Ii#?3EHR(/X6cUduM
%]a_f8(2;Y,j$YM[T9Z>+:uPK0H;mY.Og9PU<TL89\6@9pbPL@?NgUBZQXm0h3Pe_V)\AVX0A"d?T<(YTek:=p.f3^B->e!N5RAQ@
%]cg#E'T>tFOVg!HSbTICC(k2'Uk%EnUUUItYtRF`+(@pj3J1gmS"`L^]YU!=g7\r,]KM58=c.KYgIUl;hP&H_-C#q7,H'QUU6`)t
%HlugE!s)YO$=HGej[>X;EF^;Ib=I(_,j:?4/4IZ)HmXSW2C-`Q/g0%`s(5ROTdDIffI;"jo=(UX*2"fPaq^R*HIBbqHA$,h'?CAn
%J8>QY#dLA,>Z.K[XrK>i%5V@/'Y"7OK:?W,a'hBS3OCSfhA1$k<X2^d0\hmfpUcq`,NFdS&J/qjHDLV%3pLKAB&+V<ViAi-i?t._
%fb@ZOk)ggm=1m^qn#>Phictbn-AuL:ZD(HlG9JEoeP/AsasiMZ.@K)`,)K\/FE4Q9&5AGr#6kLb76/&(>Uqi#"(^hR%Ms$3gd4ge
%^CXcF3c),.MdMgmFoX=rq5>Tb$p*;j2WA=^^E;$HLhfVCl(QS(0$,9ah,B(GRp.tj"n>e,=LeCeo9'sRSFX7<L9U\f\P\IJAH4$b
%.F)?:\[^1@JE_@e<^!O.qN30D1C67,-+(e1C`V[QKFD6569r<eVe6+S$Sqo\7Q8"tRL;r68)59;3*+FXZ%JUojWK7Q!h^Q,*[o_c
%h*kFYeSuH%fE"1n3fNP28EoP#3.G5D:R:&aJD3fRkAk*;(CI2X6/.3<K9q5_!Rhqm+rr>Q!Ul(.<!G[>_e:6EJIODWG$kqlIXp'H
%W3WMKiLV#s%De8oQlMc1?j@hl9>u^#bQC`ie.Rn#JD6ZUUYXpt&(K_o'4:iR_qch<!0/<[5.t`HDJmK9,+RTa>'9iPi)6?o;3tgm
%F)ME4!H)d*/r$_H#H\EWmW0-TcLe!lbk!sW>kQ*R_KbK@!FVAt_Ld,$d"TYLrWCu#U:%gdK%b#_o'2U`A'fjuT6W\=.bWdpVH5Nr
%:L_1'1Znh,/df`((F'AmKeIEjemr8u?!+krR][/G"Qb2b)/oj^P'I-he:o?(bZ/MOfuJB*YifhqX2+sFAsP;H!7Y*nLr'3K=:nM.
%Jju1MhbE6.f<bU[;H/]b!<r!<dU8SVTO;W.MWJdhV*:#Rh\;n>^iT4H'RTu+cQ>Y;Jl2(+fFbUq)iuieaCQp(Na[:n%j>J*#q9L8
%'/2'G`Bh5/JuTKfUrGIIY*L&4]cmQa_]i.3r0SDZ2l1[\n%LG<OW2Psnt]H"`<KU$\Xd^Fo^>WQJ<ZrbSD'EE!o@u3O-JIU]$5]r
%A"\aDIJVj7q$0.]o'PbhIt%!aqtn!d5Q9rST>(-l-$FaoB'-U/\eBa*,k%f//AqT=5V-9C.l*rS(mrR!<6WZ@C_=!mKQ'0b4%%-X
%f-$$<P0LUf=C=4*O9?8jd`1W;YKA%=,0T427#$17EL1/O)!9Ih;Y<oJg(edV)/NC7f0^OTO;!%@N)1(1Z!M?9Qg#5s44P\aF@]^=
%>B18h?K!5\9gB0oP"PofIs0nMBbb(YI4/MO:QI]$V"PKnBWkIHVuEeA]u0ftWBih7&0Tj7@NP5SH,Q5*:dni@OW<V<Jm@ncaZK`q
%G#mf8.7;tF"[%Hga`7ZMIp1iRE#`-SFW?>0Z`DqQ!W2$Gq1,ZETQ?TDYs07\6$n1#CM]Dp7PbcBP1qZraR!@c47FPcpLF?BbO1_A
%4`*lD)#G$*"DI:.kns8d\9UWAj5)cr9J9]G9naGNY\$)=]U1FBA(eJON9H,VeR:P&b%R=0*``Q*=,/mGMnV3P4(J?]%#nh(el6U+
%$AI)O%(:nW1`-u_2pUDo#&"A[BA^upp#9BDI</n$]GcR]paKAG."jb3V-gJGD)iq,[`fAFh<5n&8]UF1]&.oSpVSn=iQYl!J?X1S
%(u`9Iqo2i,dLffQ5MT*7Q*^(H*E5XY.c[/%O/3D4Xei)P^NRMJMttbj$.Y3tZp7R:_Q]Q$bjTI6"qpb\-?f5"W1%b\D+,=9G1NdN
%CYgj.@W92\iumYo(Itup5\G0fi]<)0,4a]_+!ElL4M#,[*liH)?,=FY?IAoq8Q/B%;__&)*5P]NJ.q=@Gr*-,eGP-H[V+?QC36Q;
%,8`ZM-mSPEmK`LpAVK<TpuSN[cOd#]XNK0l!/DP3_uTk<?8b9g6b!bQRhY?2o#rpP<TsfSY0kggKsGBhnI$R#%e$#i,MtEJO^>^C
%j?cW^i_^Qmp*Af\'1jfmpX)G4+;`kB[9I@F]6-UI++gJjh2cXAB[Y5NRY76'huSdhcq@>&AmM695eR3j8.H<feW"tZGEL-d#W?(3
%(_A;mKE>PDH`'`#qB&$F'/44B+s)+]#*/:s*9/`CNVdZOi/;+T$G]7&fad>%nIG"+"l:))8eQ')$\6QT%lft=Iu(:&0+3+M\nt7n
%GjFR*jl!u-C+?ctpAkATa$t?G:LP"W)N8OE_ebsf][Y>>Sf(,!>0fMb[Q+juq/R/\(/P`TX@Hd]JX03t*t!WOOI-P$L`.E/m+QtS
%h2Vo/K;^Ke'DMYoN_ZUfV1N.q/0$$J,f8M8\G_ktjNZX.*2#*Q`R1N7[p-N8(1m#U3(_1cZ*amIBkI".,]Rs!67a8ejX\^<);0<D
%7nd%'+_@@#cWRn`LQW>%:DMr-G_QU2&E2!mk=&2hSt?\q!gf-:6TKOITU=`0fD:NHql#@=>kiDsV-?O1)@BU18=oD4O[LE;/RApS
%M<?:D2M:#J$V\-jeWWS?oFV4lcHU/n0J\&AGCgKDV=?g14=P<l!KZ`qN]#>o[?$7e*t&'2Jcl*cgm%k<hms2UoU=/*^>%cuMF?rA
%4\H>Wb]2q6FRedi]26>>1;?fY4V.M'%gLZE_!\1q(SgE3P_>KV92&.bE72rk\R1*3UW(%ckUTJg"uP<tn-u_%GR.P_J'K\@5]]2d
%T/)Sa'D7hhGSVRbT](S^"UPBB2fV6Mj#CYkNoN7'MUP569$uTUnoAPUO9m,tP9n963XY'UM[`fL3B\BjoD!0(&Kd8KA5WX:!.h$X
%:FfaXd`'j!3,qS1ZU\i26lN"C[&_61e`t#MC3>cJ."rrN"R*O,'eHE`NbtZ@0_:7pjcC?uS3FmR!T3IXb9>497dqHG!`)M9!,*!S
%qlBK&U3@0N4b]=I/>sXJPQ[T7,lud,7WP79b3U!R6814[Yn$Ai-)`=4]/6jeE#Td2>dbu=?kQ6T]mJ:\+6ZBpoEKD%k_>50M[g.F
%1s<`@If[KTfiT6>IYD#t-S<PWod&.DZJ3e#LMRrn8jD0/*^uV&-9Cc*4d<U^6@noT/VXYe8Q"nek)QR4%aU/aI3<DCLchqV+"=Tg
%XeA=K-s(W_.)9,_B$f#k39boSb1V^[;V3AZ`dl.eV=R2lNF0'uT1;qr.!`!3Sj]oP;RW0rXO@$:h%`2BL8P94;*";D1b:YZ1O3ID
%:`**]l@G9M:lh]^Oba(SK_)#T!`D9HE`NP_"cXrOL[3tg$oV'VnQ]CcF,`l.?@I-jdp"Pr\#Qs?IYa&_']*fQ)1<B7hO0F6aW6L;
%aet5g-%=&mO:l,!,X>cQVlN8*c$7?&6l[(75l=5T?fc$S09PtqcAth[!]U.&8]fnr.uHGmQ&BNU%AGD8dT+fG<HhqFE6o^JMbq)8
%*D.(^f^LX1#d15ueX,LDhq_or*nG<A'Jt@7m'E=E_h;3j2e;C6XTANS(?f@"[^gWclq!kgT.8;UGg0NUiY=sAb%$BtI3[mt5FrZH
%Ba0aQE&dEWGPqX<Le;1K``4,B]AgR`4Hi]f@92(nX;_3T2Oep,Y/:s5Np&[\8_q`mPN+!ebNA.0IT0CX8okh+RurO*#WQ@;!XgjD
%@^Q$1bNcR<C:`A1R'rBqKfL`Vm;;flk=8AS+Ur=HQEE1U!<RFf6%Ir)"=p_]C"6O1:Q,,.&B*[DbZYhLn`,u_)/Ifs@P$5$UgSh.
%/4<(hTo)cIkV2dJhO)@Z.j]+U-n?J*\;]DrW-'(-gLq_*!)j!rFG)k1bgKqsFLa">KbB54k'_q];r/+rD<g^(^=5<9U-(Zu"R'6E
%a/I+l6u26d0KHpD.k<t7%iKFfFP0$BM1Ad%]i#%8ofL9l=iW8EJB#OmN?PqR\F`eUKEW'.!H\Po8KSP0a;\t+;p*D+Pgs%T-+N'N
%O`H2)842d51uE*rWXeRT#gbe356/8#EoIf^#afC"53l%leR*Rhnl.5]okR5M33(74F>cWNAP\,`V]2Z2l?;F,dGGI^%=?X+/1+?R
%rO6'INrEUqPi/AI"t/iI_HgaG7+jj*#1KW2_on(>ph\J`SN]T2k1QLr$?bPb\*7EtU@t#Wp/&PfY_M*tN5u41AaRd\"@g>!'NA8^
%?1u$cVuT:J.1A^!fu`k[eY#m:pl,FT=`6S:[Q0)NM9<Z4J5&gk'HuGm827unhQ-CamG@,"Nidb>!ojQ<eCcRD9#fOg#[#JiVsjt)
%B9\4h2j=!/$pe"t\Mh%/W)o^*K*I!_NFB)5(Z?>U)Wf'LCV!"\'b[d%?\Z?HIfSEWHL*Q%^D8]UU,9r%"?JVJjBE9Pr.DA$S8b\K
%PT%(seAQq9a,h63M5>>/BAMO;R&iA)e`XPA!)%t9/:[mRGR.Tda-p^'@'k9;3AD++q\$DW1?eP8]l6*V<(%BdVaE0'jY3#&C-dj"
%h6kCSU<\M<J\%bM+9_,qR:^Y>KuIpC5*`,_6J*s-Fon'`l.CEa6K/`IkRehR_l6-q5*q)qCD$q6E<cY4]T+Ot'+-M#EE>B5Ls9Tm
%kULRC2"%6T7pN7\6f?"QAtUpl;BYefp'+:mGR(N\!6BsI0s.AG&q!J#i<i2KkqGLZ,;M/e;q>J+o75gsMSY*e7;Faqg3$IJCbnC7
%_1%?ol+I/SX(Xb/iYf#G%[-'>E&c1[;WSArl:akeK$0.9&+XS-(T.dN-=[go&=P&P!@i`Y,0(T5'Ua"HZBMn`mS(:i'pG`Vn9LYH
%_(6a4O2lj&*olaMnoYpZ25HV\fh7+T+ba7R2BHu4'BL8J4`#ZQ:R]ufX8GK3^a,K/qc2(^i=Gp<cHld#Jtj4")'hbjW@a2pd/+.<
%X]r]@@le/!?r)k"-(MR!]''H`H.:eX?P?([d4,fH\Ymnu<NH)Q7faFia^(>]#V7cfq(NI*n4-0D:Jm`Ga5aV/oi1>h`Z=:L6fNip
%HP!K+7+I$8N4I!fcu`o.34b"R@:u/FU`PK5HVCK@bIEV.YPJA=+%L7W+qRkec1slj/p6WMj?<emW%5!Qcb\gK/;i,mb%!N(]-]k1
%RCsbO>[E%I&+S7b!b7i77]]oG$>>rb2@jcJ0B>MCUo"K>%-14]35LZgqn;jp&PIs5Z`:#u:*SBpk#cC\%d!Fh3+\2CW#<^&C:FXG
%*l&f`#Y#igJP<>;X7rTsJBh6Aec^8tA+n\/O9?;K)*mhl^e_YB^h&="2624B!FX!/,[uk/:3&nh-#=XSOfG*7&ILg=IO%f$><9HI
%[-i_WT_h8t5.e%j^O1$o?$=aaAE9NR2B?N(ghhB4c5e\aPeX9*II5-?5[sZg^\I"'?bZO;UPCd8r:NQurdprc^\@HH='t_o5CCOJ
%?[_J0jd3/7q8b2Zr9En98&'EBBE&,7I%U60>>cM,kD_s*GOFS8J;hmFOKrrC4=k+T\msg&5d^T@X>BfpJ]BS?`I?U*T@q>IiR7k;
%EooPT>X$;4eAhi3mE1@_(blkCG\?#GJ<7ltke+sg`n^jd0t-=]S8"%0OB_jac#Ded*62?0kP:)-(t_ITOg9VAal+Ybis(/SL@9uf
%)!LEfbG%'fa64k3#Vddp+EbidKC/Fb-')tuhZ@!p>fX63a6nZH\-<Uf:`WUskd_[,a0hkHmRhV,*H:=<a2m-rgn^<tS'SGXVISOM
%`@Bq:a"50\F:]H;%4$jNjuGmX,aWo**2>fd-%`'2&Kd+T1Ql7`!E'jAa)Mbgk[HO6pAU$.R)1ioH=NJ"Zl?i!N2sA"4sN"(.(I\&
%Mq])Yc%>^B\;_*QM07fOD&f5"`GE1K!Vdis-:"asUGYNB:`NQUl*Y`/AqSSMo<e6&+9!"Qo6h[=`dOEqUbUf%ZgC@u**lanB8d$T
%g@V$omQk]5@5EX2X;\1()>E)E?Z6nWl94BE.c]s=O'j`O+GQka+>TPFXEWVX7UPBk:5\9]gLbmb=H'MU`g+FYa0>GF'ZST@"e<CG
%hA6%^$\@j#<>#c?@Z5%)Y<cNSHUjlO@4qhP%"Um0(UHsU"sV-H3D#A]mm75l\L/?W`LJ<HKp^r?$he`e0.,tD<.s+M\nS<S[1I-f
%HT<]h@(Sb\i%E%87nP\LM_4(!annb;4<<Vubf(LRTS.IM@a<t(S6_M?-(T/j$q!;C@:+\!Rl^*meA]oVUc=mTQqkpj/k7Y.Gp+f3
%Sk'=I@ZXk,\`>/B1a]SY,qY_R!>!?4Ln94'G^>D86<FX>#$::/,=-mNHI*De5+5F*Y%,%J>UM&A3'bD#cs>T,#g#5,'i.6HXY$DZ
%.ZnGM',>"<Kp-oC.0`KtU9U@?DGue65uZR/!p.9sg`3U:/B-Ol^`X)L@Sf0pabC0nEV$hH:_]\p)-70&@VftW'0S;_;&^AQ-p'^L
%!VBqSIU`'enFY'!`8p/TA$H^9W_`mY0llX-T*mS4qi(7heAQl5q)HaFk<0n'@cHZY90l5[%_8`c"X5bD1UrJr/MTj%<><J1;'8B]
%>@"&Cf^9rr54U_M=;[:@XK;Ko-V!*!eKK5^,VEsoK9$k+DtI<s*AMpo/.6f5,A(%8999`uT9b(eppi2)j?4O3N+m\#rQ7NejpqHR
%`'Xs)%2KH&6M1`=Ei'ui<fLK1AslI(G's6J.-pUt96#$'CJYT&8gO@ZC>jnZIS<IK!b->+b_)d[S]t\W;qE;;k6O>um)*MY7t_lC
%_e<o=gEI+?"gADkj-b2&H2-bp_ml%cL)=fC'qOj13Xh<gj>qp8(u%,TfT]%E2VV6XPf"pLK.AhsLH0+sp`_'$[<^mR7`->qXIpN@
%fSdCL_)C)1.9,?l5rO\%41p7))?uDq0$7Sp1Gj)r>aU9)pV>SnU1)[kQ;3r_(r+,3\BkXCnN6rr0M6M-h1K4ITo1D0/&a2q5-N@/
%@2m3N#_lbflBPWl4rO`2SQm"N6B$u`('Zu4aFc+p_Pi"EL7MHanB.0i+r7>q1rY/MQq3.;/m;\V*h5`bjp<l[0]!UD@B`k.h).0G
%)*6\nSPg:MTH)a"7Ub6;9$N8kR$=5F/OEl^A*JgXT5^BrapU8hX<_;;$0.E$Y#N978@P-](hIM>.>pa,'YTb>O"dSX=lepKia'J(
%M]R,`$JG#C,)keW/kZE,#fFQQ&Dj>lANlk#2XMgRL_te"($\`.?XP[1Xj?3`2m)MQfRjbsD#GIehGd:aEX.6HY4mQ0GS?i@&-m,1
%Ii$gHb[!bd"`#g]S!Z_^CN*jpE8_30o.T6c72`b;H#YPC:U)c_$%l*og\Tn;7NYH4AAQr]KU7N3<E4Fri!SUA,p-+&;fL/8;fJ(_
%>"$3jl9k%V4Me:NTa;3;YQRa5#Ftf1"K[F4cQ'c70Ei=bm"4.]ol]9)f(PLS3/#*YN$]pBGL6N)b$EYN-S*kmOTU5R!"M_B")eUH
%20of"jha=f2_]2!lkU+Li/KG"19TEJ(p>-iG&lL_j0GD_F`u]&9uO#9fn%N_9;"q>"2bX"I;o?F2;QuO)Ao!-i+I(B@+-(K`^L<[
%LqGk1"h)g9&J9+rTH@U%,A;X:24.RXciW6mdW(*bK8oNY_?A4Sh3e%``X492Z?200Dbf"&SA7\QP]<N&7[=rqX'c&7WeXlk+p<WX
%g.Y!hI))+g!,i3*?na=>=XoknOGGCJ8d:f6))(.SB%K!+%>4i!2E]S!'6*ZF>7^h1gb!h!LS-Q%NQsArE88g0)`5?TeO"@.N=Mm4
%dQ86Xi"-(t0Q8RQUr<AY[mKeO',DXn.&]io!!B8%itqp7pcZ1/c31r%F)8\m>J/9Fk^S-`+GT12KL`1_e3fc((F0'Glm%[G;jdR@
%RJIa!#qSn,s2*cH1-.sS)c?u%prrY/B>5EQ<k_AR^Ti2qr`qj'rb\#`l<M9Bce[Bo%n9%Bg!@s^^KTl4/Df8`]pW[KrrOl/"dV.\
%s/+epj[K**rE(]Yia8daVNj1p`4m!"?ln[JOJjWB`4q-<P'_XIr!S_n5K7^(mc,sFIjs@D>^1`s#o;ser=s=Q;l?T]6`:5D<u9_#
%;S``O,i2lJW<u5drfYF4#FFr]_h2&*Yg3-(IgiM6d?ifV=QR-@reg*PQ@nmt%nI+-d/NT;am"s!VQ`1qNA,$q=U!R64D96?JS7S-
%[(e"hW@$c7^N`g0TEOYc<.H:)1[QhgFG."^lS"Z<R3Zh(?S3G9,jC$U(KV.`4'6uP9.JHqlRu&VAFG6G2s$\J%,,(*Zq+4:[(hi%
%k:aK_4B/OBkP_61&B*N*KnS8$=5I9sk.2%ap(r!O[XBae?fi/-0g,(,Z;RT?ji"o-+/p+?,BGaJem=/^_,O8O"bt):1mEZP#44(0
%-duOMB@btnU>aZpJ%8d%#Nma8`*S<Wj"Kshr4kVnbI!W48=]8fO.rr9L%BL`J*B8p4-Lm,K(0XgM<%)%#N7>AOe`3m_Va>!S&P+0
%!P.GJFMB%^(baNj+V6#rPPmu<jN@.R2YP]4VI/KKMQ`N5M0oPK?C?9<g][EWeLs/Gn=6'cOt4\(?C60hHS_5T(RZs(estk=g[LZX
%/AI8]On1?GKbH-VlQ!\#4l+hWi\t`"fG5199[6S?U10,8;*:.WNaLKtdU`[(0Aemuf$<g/Q\F=%3.@:8mq#AoEZ6W@;#F5LeA)=.
%Y=_'^08a,eBP(Qb^T?FF[GaIBMn>kT',82t1r;X%'Yel*EMoBWI^q]Ine/e/$]E>niuGg]0C0W?PPe=9.GdXFfgLjJGED_h_!8mm
%j;68&#2V3;]-aR$q5&UWd[`sYM;AA%-V/]s^e7T9>PJH-(gsMVYl"jSC"E`Y?gbqR:hTSu5tuGEqLt/VN?J',fV`tC'5<QJQ0&lL
%U*PBRQNGCt61[_MfDIZ#r5+bX^t<p][1^C4KBF%NFkX&-cS)(&)M7,g!g9hlcS#IgF?_S[8ntORR!s<)G$mA[0*LWd\M3u&'am,m
%0`A"-"I79t<o6t?\1mkr3OQOOVI-Dm`(<+ZIY$c::<n2?r=\EJ_J`jFW`(Q4d4_u.hIiQi8l]O;f.IZq7<J`Y)`=#_00I"$LhG7"
%LaD#k:@J@;kBEW700I!k!&[NBkSGnp1C6hKMbX<Oj$NAGYqTNNoF$LO?V^5d$1e68U>N<nTQ$K0Sr6R3_=J&is.%pKGOYOi604(0
%cS&pHeVft1%k\DDKbpIjU9fAe$(bKDW6W-8q8LMg'?#Uf(GL:#06WpoW0dRF_=O.bY9SATq.6$lQmG&!Og5Z(a*E-u]T[Bubk"IV
%ID+S7Q,IT.:>^D9s!]4DRGA"$5DXbW/s4m4qM!`OQJ.1EV$;"U')b]8a"<*rEHVDjKBO*Q:0SO/?^C2:\-k^!ZT7,p&H,5Jl]pZM
%f40LrLjh?V7-7(M$Zh(:^)__cPkrah&i@A)PNK53Hsr\f?EQu:0Q(4\U_"e=!4k2:mge*YPq1*4KU_T'%dh.@O%=^#4,0)Ik4n&D
%KM!IFQ+&jLQg]ROg!c5EQYS4STKli(mM*@[gl'.*gVNS6pW(sq>R%,Ogq4d(NU8O4muf]An*o!j8:*X5b:]VI[;YeGlEuiNVM!LP
%2p\S>+`^=b]6WB_SC;[ur9MSj41srE(k'HePnJiS$tl6DnG*R_L(6CSS/:;!T^s1neG-oCgO4@B+S4u\!=g_hE%mBRn4_q:?Ir?r
%P:sCD>suCtG/HRMG^LZfdKbab[\5FlieraTBn"AR^4#UqW0@!##EEP$E;219T$rtAGB[sL(jn(;5Zf!7^-,MG3"u(=Q><+(nb6Ka
%,F%bN^3@nT(7a').21#^9A)9/M!X'f"e/E=b'"/L$/Vqm\&I-\ibIc/M0m'!eoSIop(HqPG$_*67CcNY*/aBA[>!&4UqL%/Q4:@`
%lp^ri!&qDdp>S7k<l.!Up@;h2C$()^]>olHf1QH/@%bee]khkEH#g?"[_tJXS?2HEabd'BX^13k]s4=,[YD4(on)%Qq&`tiJQ%j*
%muCKQjil-\/=N"sIAa';.l_jG;XD9I9Bm$AprQoR'CKWIoEKlfKqEQK)0#*:!o2+&/uRk9i@qA.Kq3E;Qb:Cb&\<#E%W@r!m5$Wg
%OuY<Opi8npHQ_=9O?_4b:++d&<aN^cc9L7B<.oF1JZscl(K,g]Pn5/IV&cYM$ria7pU$;:32bES&O$Ki@Ti'3@V<_&K[cSrGqm^o
%1^>NaSC&N!7lF?WYKpQ8GnG%i=;[R@]VeJNq*JFk4\-Aa?MYI_i8E[]CEYlO#D2ai_\Z))j]r!:0*EhW"Xbr,D"g,7o$Ttebr[:+
%BdgK1S9+88kG13ks5i^4PF%[uR#MJ$0;U5s4"%6&GGQr"?=r<?e:6WAA^1H3:N5lf21qeC-gu/WKF9(Z*h@;#;"CdA1-/R#?=Rer
%U#ab(R.>8[Ms(V'Fla*W3=b_F3csMFT]D*n>qkiTm1FPd@H;"r$MkX!]Z_uNC^W^=Ak,rt5;Vj_\'c.>WK7s,_8pu)HZ<ZY4\M'S
%o%ZPcnrb5mod_1=+nep$AT;pU'KPnVaF!E,S-aHIHc1jaKY/L=CL[tIi_)%=\e+G,5m;7B0_1sYMF;K"rgd4Qj[-uq<0]7ke+gbO
%bpq`JaN2(`d@#r[aV6Y(3#f&oZs$`s$/Ut^SM"Hc&s=_HpdC]DXD$"ZR=.*@1E3O'JS^&1m\qe(CD.^Ado\V9q08%c61be3]Yj,@
%Yjo#?,gRtYYHr4/'5nu/%4(i#e[0MYiJ"A3AWsX:mZ"Wj_V9K@>Y')?YTq&M1(i=K9S7r+a4b9@#2\bUpB1M8n(t;7b(:<;.Hf%L
%]3'snp,:QIG;tso>3rk3#G(aWHkuo]j=#$=>qeOoee\!4)56nlH$><,2+5*h1S5>^]=Sjs0;Q2_UPObneU8uGP1B90<NMYAFtT#k
%>e:pI3bR5ZK6eGoE47mNlb^,(/AUV1DAUJd!`BYI]:]aQq&.p>!`>36Jnu58_*7#@g;Ptsl5-I+!+<<WJMZ\6IAA\8d4U5`l]l#t
%h4^dD#0CaMF6R/d"UkX7pC"eiKY?c2?Pi4&f(u,_"hY(+c%TH40q1!9\SflBUShVg`lF?I(ObqoW&sk]]lul"cDukh)WJ0N[(9Z3
%i9Dr?WnVo0i#pQ=3tR4D0:]Tb,*`q6]'uba+PspCTTbl`Fb+]@\CV%0Rl<,-8.gL^718<!lo01G3U<Eg7=56O%5qM!e=rIQ+k)u'
%*sJ#!oVIt-8f)GXdd*I'FFf*6^-7p+JZhO.+%3]U?R*g>k0XX2G0oGJc^b<!0"0e,Ma`s9!BabokXO\u89BW>pb*VuBO53hlQ!Lb
%fbB'*GBs>d_Oug%">OA4,dG&14^bdX3pXYU9.:'o0^'i]S*%6uFI>PC;LjBdQcl0Lbnq/+R.cs<$OY](X%o06FH;XQdEUi40fX:.
%Z%/Y9KgV1H%*Z7ALG"Lk>_LonFB'ioou`t$#EA%qoV2YQF%SMGRsK)@NdTK'bb@0^m;OB!SZuG4;s5FY><L5'LBR3tE_>-iJ2<`E
%DXlo8)/FU[I4gOi($EH*bI5ZqKHSBXVt]T`-*FOomT^g_\S@"8q6V@^mUC/paE*CDe!W@c*kXQYl4cXr`:Yg"0^f0lc%Q1b$,aRT
%GL$DP,"C@Q)AMMjHO";FV4c+6?dMJ*M`[7<dK*X`F*Rlm8T<k`\`$:EGOF2!E9B!;9YLVlc;cCdR#=%m[BqD=gCk1Gk##i3k<].c
%e`+lNY:NH(;tD<*/3&MQSVuPnQNdn,0m4sSl92(eGuLOlk1gZo63M?^)\ugj0?gtkEi?21Z+6iRk$4?8N33P0/q$+WjEA*4m\g>0
%/d/i!$ZdpF;r"u`k7W2o:bntjBei/l1?UDh`JY,d>UVS0cX>$u[Bn(-F"Rb[nG.\s=4R&8(3_B'"+7'amTd&nYcGUNF!4os(u2YO
%.CB&rSP-$fdSRcN90j.kmT."6dB:^(W9NQ#\#@;B79m[!M`mN<iZHCT5\2XG(sKNArS])U&f7dCEamJiil+aUI-h(jK52bmE@tuZ
%<0Rc1/u1&]a]/T3')h9,c:+.WRAUF6/pZ=cZNbJ'"O(E]F"RXc="__-A4!:g=UX[`C*YbGcCE)<f^3`lc:u5gf<Ucbd10F;iR"S*
%>Qu8&bS,'#Wb>U>bdkCT-Ef^N-PbfI].iD7WlmDDDCWnXOIS=t!^q8Lk$1F`ZjZ#$m`)`obdfiWE^&-."pgk`-E`oT%%iosfAOq[
%JdZkl+a*K`S=[9NTZ'Vn:R?*5cUBFP8[Gg/p?3mVEt?*T4a0JM4Z<O5>-R1EDI1D*;r&7.0"\1s"U/fs.r&80i.)/439AD!5bjj(
%E$f7>=VE=.?lkjZ<;NU*d+#jjgmupVo!`Ql0>+ik'Z9DJhHZ?O[H_L[mFf+o:;"-5BA>I>O>duU-%nbWk&P-\@Jd]b8>Yq9`4=MG
%KjYJT69q1,6C\E4Ts;G(97\a(.gQjm/@;%;F8<E+!'50RX1j_RPUB:N?YK>RS;U1FHrVl`Op.Op!EjuAZ8X7>Que*qaC;I,&C8W)
%]VonFIU)g:8t??0MqLIR^uD3)7@d'X$fi,h>b7(2PX1j5`#fBJ6(JC??u-'h/j3+`A=Y`I4tE%0JiT1-33iOSQueU51$<SSR_GZ$
%4s\u$l/+,;\I_EGS2hAeQ;eZA/p@mZl^9c"@Xb:ac5$$+E%YE.>%F&;.s3IAJ?/hXFY9=:,0>_4=c+Q&.sEVP_L2$mS]g_'6Dp=f
%QQq%,Icepe`01\i%+9u?@pFTnEUFum/gDuDi_/Km_YCZ;rcd<!ZRq*r*@KQGFl]I>RL:L8;-K(D,$g.LpOtDI<t8_;k3`;40?2e@
%rr4KWXpM`(EMY/cH*Aj[FL`W^WB@NK+r]7_a)j4C"]__c=0GT6k`S>8KYoCGKSh0aHkiW^HKTu1(U.pV'KArBdV@tu%L-*5!!BKH
%Tui!"GkGId71O8UM^'#i"DAR^:uh\0?FY<W(illE\LaNnEj:VTZ3rrNWJ58+"@"M(p-;i`]*!5DEQ3jZNF`q.NjT/PmN(rVk6?gZ
%8Rh*$3A(k1=En*%[NND;AijYF/N[$;5L\W/e]<P&S/%A`nSMj"idtUCDW;T^DCGW</4s.ihEcCjg-?cGId5(3$RohQ6&:Hj!7/@b
%ED+[lZr]HHJcuFcfPj]V72o?B%#X!*M-d`3.n@E\<4GW,c*E^U&c@jCi(Sf^Hq->5E7&?o$!Lm@d(O?CC,rO163u;*i5!;tPH6=,
%ZIlPNl%K-S?(:b4:4Q!?"N31CIg]Wg<:!;.$]%L=;F,&`#AO?tYTU]71W_N8c^\E7\$Es7e@4Xo?*q)sHQOoB\#@PE`gEP`$V!tL
%iYYR?S1/B-bK9#Y<L5$Jl.gUsh?$04`<^h[h;T#<Y3U2=GQf'USc_E=12/J[,KN;[:[F@J&?pgoa.g.VBn*K?dk-7BCkCk/R]1r&
%Q5+nN3Hq@2j\ckj/sb8B&aL^O`S7mU,e$#[B$jrmrd_tV=q-?nA:%a*0+>>Nj@F>(gi<i7!+7qa_KHmY8oG(\3gPES().d&YR,>S
%>U_\dmIJD^[0B5GW,:L6j\Zf"/R#sT1L=9p,(QS1>$Fgq?kbW%/`$PJTbgU2#Z5CD:0Wfh,$?"P[NGY?4^BLRK;0b1D6XP1(MC+o
%-En+!6<h)8po;/C>B\%V3)9p..;6B?Cpn#'@KW,=8[)!.H#_N3W<rat6=n>`#GgU2/H-iDILt2,;S)TQN@jF`YjXkfMes$1"H+k?
%d9Uf:Z-?:ng5EkW\cR`*[aG"8A$AC-`I#[rJ3D<;%fTW[/l<0mqH=Of&<&M+babc$3dE;4:2oGMjL&0R3??n_Q+a+$FY/R*(seRb
%S+qXPEGb7aeTkr('K'01CBmpK:Q)W(:n&!D>0NC^j>1F#a<nuPn!(4N:'O!9f8&4re9[ji("?m$eTM2]3*C+lL8ZV*XXP-43u1o"
%j'W['/Vsq.1Y$O5c$BrOC0k%"[C/Z:`.b'(RI5?0WJ02L70k9?-,uiFj/=R#EIsoCqqN2#[;:;0oh&$gnAjB%4Y:-(VA502:5_<7
%/NmaE(&M[+dl&iYR=^nDF!<[k0ANp$:a"P7DH\;6IG&MS>;l0VbPaQEBp$(Fg%Pcdrj4,WEWW'2*96MEpP)D]JA.,o!j)G;$?"Rj
%WX<KEPgDn#=(YV=p2I6fQkh:5E+X`h[Wqu7KpEJYC'l*Kj9_"b6gpAXG1WpYfV<$J1'JsUlBHgM"sY^V=n[.fUi"u9)+eO];SaO]
%cRa<?]Lm@Od>fI^Q4P84L=b?gZs`oR\Ca)9$R$jVTVA!kJq>f+K!uDJo0Pj'bW192i1WR]&G'LJ/VD!;k(SM4$oN#.$gmFc1[&D^
%<uWe4Zq0+LokdO8_^Jr+VkB%:$Nk5OK7LBl<GE)gG%ZQ?d*DbNb/B/F8!<HVjKiY!bWQo^TUtPB[L20MmS"<2i`Y2OX4V*Ni,/$`
%Jp+RaeG$g@gO1s>+J%m0aU*i-W-ZiW8!Y$oX^#5_)/"_gZNoG?TR+GV\gV3R]dm8MMCB$QMc34u+]Y5C/pt"CR='U(G5-Y^5rUlQ
%$1SDXm-mR!a_"&Y31XhClEY'&fcWinVV*\O/YF5T*KL'-o#qRsO9Wtr/8Fe`Q<CHGB'#p$P$&-5=WFb1B]MT:M^BGQOUK(n4I2.?
%!g<JpI1Ld0p:97-V3_?1'@KRj/j$apDir66D>F;m#Ij&=Y0::>7283RT2$qqHf9:r(LGc;&72`L\0puB#-0;$DqLn2@?j7gP/QCK
%mn7L8_'s`$j%Lm`U87%4Z9r2pTT>'EJ"`&0MGnW)U6?Tp%geEO?C_Gk67*(((%Mcf'ZHYh0ZaqMh<-R<=YPbMHTHC^8N"r95pP,)
%0lg]bmCnDO,*@SI!ha%CaI5A!Hl!.C*?""2%LQ?,XlM/E%bW-fPK4e3Z,l@YJ$V[>HOaT=R7!8G)t)jn"PRYbj;d_9(n.1G\T5am
%>i56W?ONJ'F?W#=O@9G=4XGB<0Mu:O`D=L[O.\j^WY,Ti)gu.U"d^R?4c;E<eMYd/4*PKO!ojZ4/..hNK?^B*)-:tJKdL!O;\md)
%/]\/8Ul)nf@bPQ4qJ$V_,&0tAm`ZVSO^(TUGiK@"XA?VT$:3F3r`n"].jHg!(8S4rjHsLu`]j-/*kl]Fl$L_.hi'@WlZ9?)#GZ(s
%fO;V8#r`KB#C"_nKHQ%\W`YXR>'9J(Qa_Q+'D#?R3V!rP(^f(aQ`ONbkl=0`Eh'!5PhNfb)&`PS3UaeS+eHnQ"&DVKWFX(DD;Zj8
%!%4Xb5Z';,#p.LVkt#H5=),;tG+Trm*h+F_gjgagf9<N7Od?'';$p3k7"rZl"]SRs`Q,fS']H#E-BZCWMcW7-kJ>-Veb%QXSV&e_
%%rg]'S<Z'+br\]E+e&JT_-@?SP*/Rq2D-qYh;Fu&7gkY+jMf?r[-AqMi+"@Vd!XemXrE=u)Rj(OQ:3DFF8]cBeO%,u!<p98`#ofF
%.8g_]]1WMQHaXQ,/Jj#qO+o8>Ae.*8CKVHWd+sQ3YhV)r@_!ZrUK<O)Xk68s2hBg;45hi,W^0>a#ulr>GggqJCZINOUbIT`g%p4T
%m=5]L#M`c#.'CVsaW>kM>",OVP%)/@8&oD@!'+r:<4VmgX%jJU03g$A(+hPo6u93a:dJGAg1#=(8@OYQoYML[KOOFM+frR*'?Yc5
%Q@buB!="8:.%mqIE[)u`]Jr8Lj@!WTYIehndTtV8QoM#'FX2O$3@Z_E0X&>dYil5s;j7T3i4R\GFVCD(YHb-V#hm,i!4;Ql5d;$a
%$/`Tb$L@(uF__Dlk],b-erpJbqk@L94s["&@LH9`_O<D2>GS'=m0Lig$6$bA];eEBObLR-j]1@a7%a[N`k;+NWKO?+q<:VY&.@_m
%)Hn1Z^!RnI`7?ahMW1]-*f0RI]Y/l3F_X2Kf]fK6c\:]Mk8-fHgKT1YLZVEe=?AnncLi2DVa4X9m'B-PK<)*f1#J8eif73]!S?8P
%G,3ch3rNJb\4/ID_BY5.oJD`F&_%D.@gJM,l3/"4J(11r+1^G:qGqR2Fr\fMa3VrZJIiHrC_OdQ9gqu*PFB>!1B8?I-=@@RBt^6X
%Wa@-938'?k:N7B;"9n,8+3/";8qUU^+*t$hJpR[L3O,1t7@Z)4@.:'fIRurOUsB,(`_=)b+Ob?.ekd$um<+["+m/'E*L,QQ1fUe)
%cu)tCKf@#8FkE@#,j%.iJ0.Y4iXMQg6utVF6pDqalTo'EOi=$IR7VoU,PMK'-aH0nEL7JgEZS&?<((kE#0&,V8,)j'HP$M-?U=Z%
%p0T[doF`0f&7X4r8B-Zah#jMl'%#tTDl0>3\Jl!L+E<_bMS4p)RV-)!OqZ'hPf9&&fkch_-T^"$@U^?E0$Alg%Sp"hDopZ]CP6j<
%Z7R4^k$TABnubc\=o8@YR(AAJ#iKcQGNC#95$*6T;*&k&%D\A?.paRX!;A;]\ELgdG79$V_iUNt`<?=r5Qs`[-Z;]E54HH7Wdob<
%8)P"FX&D@Q#q01F8-cfb+G%_'7EZV)7N`mnrWI&.92(tsPG/:J8sGjtUcS(;Y68DS\s((#%dt&1Gkmn>/$$BTEUgRq&L8,bb$J?(
%,OOb]A\&pfVjT%kn$1=0*X,>q_((cE@),)i&2+_!q7FH(T7*,\hA1u?qZ$s"j$3c7Nsu_Ja@-MaEG2_l1)*MfUJ#Db(9DSV:Tb#4
%3<9pBmWgZsZt8W\XK>;7eVV7S+\WM,[(\XrE(]RC0r)#3;CQ.IkK7bs="n,7ALZX:oc)am;$!$Da4c.\kU]:^#!@!%o46>:3[<6;
%jg&I?M%j;j#Q)<pit3-FIN0uF=P0lD6L.Ab5o"(Y\9a;HnanDO>!*oE:n2r;/.@OU]Q,=Dieq&mb%*'5gE$aP@,^k%Fk2F')cM0u
%/@onMK/dt4/G:)-i'u4cVN,1L"poX*GU1$Gf)T-8W8[0;>$=jYnC/U8#M6nZiQ;Y=lsB9H%%#!*:j&6?7cJipc%R[XC&tZ7fOc/(
%`ulo1VJE-nP:HVB/cMcX_'!G^jNqE,TKPtMd'`RLDZRk/DVXY[YD3BE`:ZK/X'0F2F?ir6L\?m([sH9)_<:MZ2ZX\nOJle?ikff\
%`GP^S@b!,I^=q=.4r3>:`u;UD\Y0qb6J6o5%8&20Xlf_sM\UAhVrB"rIG^:/iLpC2+c1Z,S!q3@fKCdc:>2>m)M\U(Aq+`GVFbua
%=a\aT:=pOeNdHEcAR,^00jbFC-!h1aWlcAE@L5IuQ9Fk[>KbZjIGBNm95XP#6DB?$#Ebc,Ca'3QA2n@hU](Fm3pCBUegA/'#%i!n
%SK^3dP+/4s2]P[cNZ:A%^#heLdcqu#6K"kG_%.!9OWYR__"!7I+[K_2m%'lt%n<(8]nE*pjW1l/!M;WuBjc1@&si`gd[)pE0[cW,
%.)aA5nUqO0NreZgYncuq/k00*9(,q9:]"]p`]ce8=@<8Qi%@69GFM1nJj=nh+qpEk]3(4?^.^b3M7nP'R9o#AYS]a-R]kM+FGVMs
%pj'o?]3%qoB;*7mOpDZ[7u"B2-TC8sGmTFY`m.5(5m@Fp_nTn%PXZ$<CN5]T%s\q+SM9"Qn^cF1+lJo@I!*'aGhpc:"?Bm1&EO9k
%4kP&0bf/%*?SP4>F5oW1?Va+q$bkh5"i7c>8"I0gT`tg16>ei2/!=?][ic9cCYc`F]kKaOBrDJJcDE;f@#kQu%etj@S.3Id+h::C
%-IG\i&l4?+au2U.>1]L`#]=>!CKG^/,s0Tc/Ye!kiD:l&8Ek.'[3W=bd=j=J4c%@EhmRg\714Nr%qgSJ"Ak"ZC_-7q3>rs`%#njR
%423)i9kF"t+^7YL3>P!1`.6>sL)B_c=\:+E*KoW,*"`)n:32;h]Y;01F`A]&/o,_sQI"0VlC!/18.*W$RRH%qRD\#%5tLM<gtmtQ
%?Y_o.J_g]ni/$#W.NW-!F=*;>>%1Ap&0sn"Rua'TD_4RVI3igI=@A.$GfsQ<'8[P,TWgeF34T&7b]T]_*&a>)8<U8rQUK:egI;HU
%4>6V#I4+0fHaO-Mct\M)*9,q4fHPj+=\O9HPtk;QS(MU4U9sVm's%u<T]QUuXN3$Fk4@CsjeikB]&,+?/og=&rsWW7neft+.B6?=
%*T%56Np%YT,&GDP)+$!)"gq&-,<:*)R@VGOA'uJ$Z$Hd!G2WS,n@q#r?7l^majh1ob3XgJY/QW[5!gm^aIPZ/MeiOI$#)p1k=E["
%AAB<qs!%\)?3/!g`*JBKigs4Bg<PB93,i7G8.(AN4=.->"UAU(c5rqD3ESsD*gZDUSeI&nSNDF8LekFX6S9$lKrYtrj.:Hl"8<,,
%BIromjBLlKmSSRh&1$8SkB[SQ)7\ZGqE3fVhqes7l(IP\]DA5sW%Cgt]I9DV1eeb<dB=Um3`XN\4>O6?I\\q#iR;jNR#EX?+JnRg
%5sB:qgPMb8MYLD2P#Il0Q)'p1=!sdDqQUO$9M%]o]WH<#U,nbMX@>B+qbggijPrA'GhF2V2'<-c.VB4\i4IZ)?&`uMn0AS'">hA[
%*=(!nKp_[*SdM/=,^K^*,T<O+#maZ\i"j5*qT<-gg,IVB19PgYQ/c^;3PVkV0s%mPNtQt6^68Me)6ZB`8dK`fq[g&c&^g^#)\P&D
%EBenJ89h?%Em429OoR+*R473G^_/pW_Y_To/X3>J*qHbL3/SKH@!RE87;L!jT;q[SHQWuagtnfj_9Q19@a3[WW2kH.jV"m>rT("c
%$VMbI-3PKlW*E/ejA(eU4pQIl*)Z4*bMp>BJ-iHB9L#)i=SL/bnS4C8rZKmT28VoN;Psj2XG;mrR)K*(1rFaJ(F=iZes#(s1`a[a
%-M][.^F?`e>afje9)^S;Eb$>m-sZ`]p4R2cX5^JgKs-c$X)bZ9(tfIEQ3N(i??n0be-G.@<oWDkOa61&fCj`DCe`1[hb<\e(Q8iH
%A9tM\D#m;OfkKPMk!GXJYCS8537l13M:1N"!Ea+!14E?q0JU!$`5.jW,%=eqM@V.$],Y0X$GnEQ8'uc)U0!q%FR@/FG36r(,J,4n
%7N(IMpo["o1IOlq*EanH:5_/HCK_"Z^Zb<TP,Ds!;+"h`ig=WYnWKp#VfZJ),W$#WO]BXiU=I+D*#-Q3b@T7]!F.->JBCOdY4lbn
%m)p(4)FQSq+#5`^c-IWn&"#J9!+r=2"1SimS+j9$D"4YS=,N<7n8C@A5Xt=2hEiQoHM@>Vn!_UlY'?1jMA+hr7uhd8X*7B<aA1mR
%(R-Hn0uWW^L(HJ8@!$m`l\[7W!,f9LGoM;+k)5Q^;3Bgr%:ALld7/$!%SD@T_kKCi5RYOV:BI3s.@FQK_>?QUp=NFoJ:q4JOl0!+
%$BuTn^]ELB>F%^KVb:%kLJ\FhJcL#</0lK@c@[b^M#6@!mS+.mn]ohl9:[ZTJiUaIWtn)mLhp*U#\)4q;p>%KZ)S#KoPu#Hd3tB^
%-6.eUjdmn^TY+<!gSVK=+PF^W2:X2DLH80E@UDpTJP`^`1dYG$G"/knMOs;W<CP.rIj*?/pBehCV3AOs^D04L5*hITrZ$g'_Jf.i
%&CW=75hWhP!KqNA5ur`-ok5a2:PNl)Ek3#QEHDg>a&SUm&"m=03N9SS''nT==ItIp(Kjr9*M)X'dfmW;\hpeQ>iLRb2+a`cab./d
%2b0mb=;@W1TQ1^ZOH?^9Sp(_5@&-H&o0>nV0`>0M.nog!202!K#RI%CqQp_IScbNUe@=>V.6.pgY)?V\Lf8hTH(_=-gb`4I#$\c!
%V5(Q#+=':Ln)51Zrm/MOhpit9ei`bsY^Q6P,<=:upQ^%IiIo6WHCr6?>BYf')bi;#W8>*9O[+cgLANE%_P+^+<7,fBDn<H^"h,V#
%%InQ5c5_%XHs&G*n6+ji//]'-$84dQrfG2/!=Th<qd[ZQirrj#V4s-@pQP_UYS+MY@gcb^#f1XVHm&fB2G$;-!3"=d-6O)_rU0%g
%._q<qm)UXpqnMl"?doU'Nq*:bSf'/$qg+-,q6eVE7rOn2ERP4WNu_jHCCD=7PrL$*J.j=_#.u7)nm"k8ZuPHPmoei_0mADk?`t-E
%ST`5KoWHU/\Kjkl0@GPA>QmA=*HU8SOl$N[VNM:'S;Pgsc5MV469rH.@RstUI!Druc#\aK@[;qMkHtS>*nlZJ4:sn691W*<IT4-9
%-tY=N<I!Y1cl9M-682@H6ZSY2+f-qjDp^U7OkZR_<<(g97U,se69l29"t`@Rd80K38ejraBm(VV0M/+KhD>$>(G./hL":^QqgofA
%V,(!g(#?%HTQ%'F=K8S<.<AB8M/eLZ<cOVWF\H##c-$4MSW(U*!du;mQ$(2CbUG)]Y^"l-!VhC=?DD*''G1&_2jU0sLS85Kg86Xu
%b0rXScA26G#,n%$mO,pVcD?-fVA;<ccGe=>Xt:9&b+s%9DJ$u&UH#AeZ`sR*?HhZiM]iZ/NZS'pK)TTCR*aJcgkP-Dj`3Z2!ZmNe
%ZlkI7m<tT3fhYgBm]jh68hJOh84jF<:jLCM8uMFL/!b4Ho\?8P._3q=8S=5"&j7^;>e:d68_PnGOd1<p`3uVlmZ=qUEOt1?`u-Ee
%WN/%8&0?F18BKBl46ERd'NHh9+m0"-`_2[rdYYMa*EenP=0"=)''fg7YCiSfJMRl3=b[@N;_WsaL["6IVA/>RSHY\R?&R4)`7%#P
%>\%GmcC(L[d'aL._'\%&c,34&V@M\Z!:4?G]-f2P-)=:>Hk3hETdpo-b"A6`KYY\SI/RDCkgXRDHGXK4amL/:'dTSgk#un\"pRgH
%K/tUp>\d..8?rs"f.el'8X=TYY)7e[:b3Q?k9LnN<ei7NP2tA0DOH=$jGRX.SX!:lT&SupGYZ8HjK?BHM><G_d%<)fbD1g:8Tp=B
%h4e;'g:\(1QQ>KdF@'j1U0F_dZ,OS0;$TJnPebB'mb#Etec%2#R$lqZD[dMh%7Uea<A*,K!QWDsg)X'j4NC"n5Y+qS/'&O2ZPsLP
%3N`CqF&Pt13Wi9N*34).%kR--$'_qdD@kVo2H9!r[S*d6Gaf?SQ':PN;=SNS"^@OpY$Fu1<@KQ;U:>q'Y!L89R[$<q)\aufm+WtO
%.P)cj\Wa[;E<:^nTN)/KJdru<SB%sj>9+)+94Ju+6]7><0/]?R%%kP5:+dTV\gV!0!tZD@CY>3="M-&\3)h^j`Nrf;)09d4;FM+M
%>d?S1aWJ^TSq2bj)Gih2MS1Nu6%aGBFqQ%W\tC6<1m3]0o3aSgnd'MR).RGWH&Rf(A=ETA;unOs1kP4c[Y5\'S$G`sTnIlPO,B?>
%;u[M4;rRf+.WfQ"\-i`cq9d53rMHURk(qmTM//EX"]sR9j?q?sj@KcaY.uS=o6"kTL'6'BD^%7LdZGs5']23V"Xp9)RcA5jWAIh\
%U#ue%Bf;O0%TQu'Ts4t+:jctgofi.k4%EU5OYEn1]G#0PZIS7/RWVW=%cYBgDIPhjUp8B-.;I(7-ARq\fcH_LiN1K<;OcsF$5YMS
%*Q^=p9#!CM$)lCV$-]cBM8Xt(c>%A&4HRKUPs^,`]B<'HH3ie>JJ0h@>Q=lPgHAaKM<<7S=\?sdH22LmF"XTFT+dQaP1COh:R$n`
%3NA<LX<jrK&e-T9VN9`:O8rqsm8NdON__ed&:,meihDA[&41Bh2())U5Ni:ri+pM9JXAU[h3U*5Kp)hXmN#MnBI27ScJWi@clb_^
%Ag%eU<ccMl]d/OoU<E^JN`\_5njOBaU))usOiAKZ7]uhkEM=J'eDVoe,!9?<[!Si.q\TU1"&Os+=$<+,V`e]n_37A/4s\T'_FidA
%BMHn.OI$=B:39'ICVnS8iP+oW>#1Qa5ENHO?_5mR3-?rGo45lBF`.pfYp@FY`'Cm`J=14g"L=EZfrinSV,s%E+@psDMa?.1j58g[
%lnKe!s'CATnoKdHS7)(l2raOmp>BIVI*"_NmV6q(fpBIj=@9lQ(qQG?aKYkuRQ(TB";7lM$PD`3mu5bXB6ReML&D!MC1;Kd`.Gqh
%0D?,HU.M8d`Ph$HDh?2CRjnDEVQ/q\=bgag/hHY1[,'m+&am`?#NlmDagcR5D"W,tdUo=%8i2Ch7cs4A>OG6a\1a?lg!?J,NBIbe
%a\)Vs193K6*8&:47"D3#Mfl3a`?q%+!th0=c&&'hp#T=fVciF4(.p4)cA>=JhmKZnPIiA^.AU^?K:%iE16nX_`$MoO25rA/lpiPg
%3+3K24gU76J#E"$?--?6J*p8119XqNHO.R^mocup((HsO1=m_q%dZ6F3T+]ddgOMbY>I,rm[iuohetYUS)5sN1qa\Xm0ur*A:m&R
%0c:4`\X'/F'k^IN=)UCP@c?n]r*kPh]&0C8_]`IB*kCY"h(/-,fdt^7DBS,6dALUZ86=LK'r=WA9Z`WV$&L`%]2gIIp/C]M45LYi
%7\(-L_9M)@mLD9d%j+qZWi1"V94ArN8pFii%Mnc>/&Y(YG)-IRkIpOF?'=;*CA!ErLMgEu9b+\-Ua[,KD+2RYT"s0+e0A2i#^1bX
%q.m+%YphuN,j^j+PV8%2W=!B\%!n)SX]VQnr^FrO/5L-e_4*sYC`'3U[9@R.6.5ZMPHB@jN]eD<P)P@Ze@a#+:/0*=l_;?[`Ak4$
%K,,hTKQF's%Dp!p,lq,X]Qq!2K(KVaQR!k.>G\7R1X]2J-7uD-6/GC-MT-:>m,fTD/QW5bj+kmGfHg,n=eDOJkS/8UR_9uX3[XKA
%'3nC\.cnjJr5/lp$&kLGGjhl3RZ0R]J4W98EEI7cGG@$**NDPSYj)rRAsqrg-SB+`cNlcV9bR#J7n'-T>TR>mf&DUj;Sk*2.T0,M
%P$LU/S5dBX-;TR0#eHoHRAAoS83IF1K1"bD(*B5r4I)[a(m&L./ICLs>=0M'(?DX6WJGnb'1%etoKpDoCJ(bGoH"Vu?M.F;/9XE%
%M=[fo,-'kE,GH*=K&kj@beB#qC*gr\iah[^d&Frd]K%K4i]7Y:;:-l1."90D#2u),A9XgNQ>[t1)bWfa"WD'g1'tmfBH\N6$!*Qa
%1r2Q0l*i1/=g__LS1$nc-+3!2(KN"rRji"aH*4l^g84Pu>'/G+7@C#&W7H"of1.4!?hM\^GTD4o6dUFYMcM\u"(JI'MlpS]Wje05
%Mg&)nI/lh>5!J_1'!U6.PKRK:-!U;gVKKCWhEZ^DDngW\4%jY"NIKWfgk6u5p/aXVRl?3Z!6a^[E01+IT`mQDr55oe#dr2g=Ok*.
%P+X[Z7EnIfRn>3!$Wdu30\+F^<0sGodT/ZHMY.8M&OH<fbnnTk_](+'(So$e)d;H*(1)prP-P3qmO,&BFOPf:DW1;(^Z+0Z9TScg
%JXtJ1dr[(B)ad3FB0'0\[%.aQ!llua,kL6$PVSX-IjdBLN$IU21kET^Wj*o05"UIKR?o--K<[EF@_Er'7<DFX<b).UF)Y,>3;MUH
%o0>C3D&s4V4=SGh!=G^eXlkq>8A]1BQ/pP<WpEM(3A/;!8QIdRn:oIrMO7=K_%&bmoPRKD+Hd1Qe^V9NP\cu2H_$iNFBdN%:1&jY
%]2\j3SR;dn?'.r]e`*ioiSfb2?[!">-Je@;Y^d*M86=A$"C0%H3)iErG^RAo%VZM<^?eZt-53r9>)&W_YitJ#,k68=3'9=X$]3=X
%RZ1Xm1.Fp,*:ZBm;lP4mr2>;E1.bbH]aD;0Z;U0oc:)'&BASr?R-fVsT[8=$Jms0aJ-ZCrXrGn2!l<<H=sLO1T0"KY9<Ae8BY(@U
%MI2N]SjY-rmUJ&9?LtW3-'1CPF.)423"ahV0'Pg+>B,<J,tI6>RjTp64N+^JcJRqZJq\%+b3C&-h0[Fu#>2j181i_W$,6<+K7,#>
%I2Z"*FcLJoU8Cs2;-/:#OR&V`5\+jJTQ?PIm#tJsR]C(:(igflPF^D>jZ%0%g>1j]rssJFem$mOSI*"<d!s\$#-:9bXYm:t7`^2l
%D%!M@-,Hlc$K==DGUSCT0.J"abK<a]BqW&bKl/`o:]8Y"F?fD5P3Q#YEiZrooT+<YDd;F0S)iNhp,V!bb`60TEcA.kk&nmfrJ')J
%XOmWh=it>tRP+a6Oc\P?>>>YNBTV6_&V[k_W6<h"eH/)6%Anq_btQFX.""pf?l;n%>RI":PW:6]4>8#7)0qb5O-.?lNiJb6\YMY8
%@>OLfHH8Oi/Qj_t1,_V[3/[tec+#U)B@e&7lY-B>Gr;T(d>:*C8+@T<lq?F!h\]q5OBD?-*!@L$U=!HZZu1;_,WpfVpX#p!$mH$V
%!"a_lW4Xp'#cDsK+\>31JcE340M;1L9RK-f--F#+%8ru<'ff[g,j;;aj^56IDUaUS8sN!-$YK1&0Ii=#J??nn)Q?)7R$GdU5f+='
%LjI>9_2bEA[BWA:A4`)7RBYYu(Bb;A&V5OuF+^g0H&N%0#V]m*CBnK.j`7U:<]1jG`5g*Nh4urP&]pG]aR"[6'(BR3E^6Tb(]<P*
%]RHr:9qZ-O$p,W_!7Wb^M"1TN*Ms,@d<DcL7Qfok)FM<C!+PJWrA"[m.`JNM(5e9L/p12_)^hdq9"]f&4j!qaZV)Z=/?qK9LDM?T
%(jTO<,Yo9S'm+RIAY<0R.B=1RR`LV`j(rLq@cXa/A0-9JdUS(ApGjpF-#L*+ihis!BIgD&!A4C-:'N=9"8<M-EHfr9,UYQd<g0ca
%"'nl$l_5'3\.DOA.u8Tk&J)+?#M857Co)i4f!0.Kj"\LJ"Xc$[NhD\nA+N8JVP9^c!6tXqKCb]D""amo$n0q,)TDVK@*MG5:*dg8
%Z22KYb7h&n3A5WQ5tZWW8KaCVb+$0u999FS,gQ!u5e5*I#$Zb458"]r[+It^N>%?q!',iE\@n:Ff)_fioE?iK<!4+qEq#4$$q`&C
%+rNC/*lfDN2S`/rik<;MP6?gfY#!VJbOm'teMD4[+4R+M()6'A(Or/Q_8]T?kbaT5L#gjI,f0i/>-q>kY^tCfF)75W.6;P$%(=)6
%01e9p+E6k-bdJ@61CIY#Ka'S4i<0sR$@NX'dY3jm8:Q^YeTrK<'"7:;&jJsL<,J0#P^B#-q,F%r&K)1$?=Q7!]*Q^!5tCEPB#fV=
%)WWp(kkA93L<<Tf-]tM65crOR6btiqW0+nf8X.!ub2Gg#>QYKFK$qN>P$*\V6*l5.NKPuJaTH@uW$*o^N,/,:(ST7#<=YXY9T`"c
%ch6`TPdgO'(A&.Fpnk/$/,(1NOFmg.KC4&=)iIDO`T)Nt>6n[W6pM#a1XHeJ,*5m]CeQ7Q!fmAEJIFi!=?[b#3#G.O?c&'e["0R+
%ju"p.1)cY#6g=tGLJuI<,S\Fr+\;[]CQrq+mB29cFi,&/:3%0$Iqd=U@l>LPX`3\hE,lO=6[PBlD7EfDI+bnspGD5)?N##V\KsHZ
%7UN%^75DkHl'P-<6(aS?cKA+kg'?QJ"q=f.Ct5e1Z@GH!7Gr+T.[M9Oc@?]4Ze\2//f9fu1;Y,2iIR.!(/E7X$mQ[Q*sTc7]7Z59
%jV_EZ]se\p"ulcYpOFeVLrou8[L%"c5b=dk3Pt,+rc8e(`%hcM"6\sI(8>F2---0.3):Q.lO8rFR5.hihLN1h85lc0A4]mW',\?@
%!pS&H`>^(PTKr#V)JC-.^-o,fTuC(hdK"i:5h\^c1s`lo^,Lns0K09h"[Wlb'dSNL-rFJC5kW&3)EJ=f^;7W,A/R`K;iihK.PmY.
%k;l4(&?;+3_+X89-NS[dKL7e>@k+WPiYUQu+T,7Gi\DMW8R<J`:h$">amk*+$t5oB@(!qCX_dSMjSGV6Yij-BM>2uQ.+"VDR=kp4
%NY:Eu+",)\Rks.l:r&[$GmeZ/1a"bGFCQ4A].YPJC`6.pYiJ7c6"j_1bFV'1E?m:SM2EuZ$*uRSB'Tm-M*uUO;-^e>U5$)ir0U(g
%3HO1[CCe:?+?l>5qVR&\:sd9#0WmTs=@XJs`JQtdS.q!]\DHa>.9mCG.I@0N>dK-'\0aro6`(9o5VGo[&Kf)gT&`2WlmPc/"^fNW
%UWBK6(E-g^Xsk_3U'=c!SUcGaln:=PGhX!*:kA!OTN27q9u*W&,ABZ#MZMDc/pUQcl&8:>EQ,T^Gs/j6O`IN4&_b>2^*uAM$6)Yn
%U[[CYV/SCHa#h\<*@@:K7V-&m,T7(Y*0(BO<TL)?'Uu<<,4ZL;A>S@QaGIPoA7CNPJ<"@G(?_K@FVJ8qLff40&beYbGMEslX$sf8
%lqP:/_l8b+kE0`q$#3j@g*BS&d!ABVUY!=G86'al+#kqq&=K?p[).@!7>!B2T,HTt&NS*=['q5_,Z<NpTKOJpOj%=$+MbZ8?R.,p
%'Fop!M?ogFk_;IaU=3RVp*N0.+sYk^'VoA=aXp/je[?fohQa"<4:D9l<5]B)Ci7=Ob#40B,9:286In2hUJm)<;bFQQ9LT*bi7Utb
%Y`p]s[Ita!5&_j1m-4b-&t1.&-XB(U/8W!dqBXp^iZ1R[P\:qc"3@h(JuO;&YW>0'&cQe""Hi`ocB@p#+/5%RUVQ2Y3Dg%$E7\!5
%1-5oV1`Rg%*-R7A!r/Q])%a[TUXoXX343uW+Rm/m%Wnb)\lke_*(@sqKe[g'>r\2O2[$sQ+jH$%D?E8A1<r`'@Rj1'HdtPV;:eSt
%d&n&7-9U8fFPn%3bcYc*&WBUK$K+MV.3N%,[ljf^3-)>OR#IR4_H<]KM8ic/E:Q1[+ZiGAC_90623Xn=6foc+0I4SpJdK(%;QfO\
%*XkMVi,YN."lc17(0OCTPgE]h8/UfJHC3@Ac1cbb,a!b;YeDt,m,58ZGrn^k=2QlHe;62]3Eb5fD:0!?a`-YV^Dp5ifmkiq1\ZSd
%dKX>Zq#0!ZTUD!o%/A$aQoS`U:7_VL_D9_@@g6L>l5mPoHb2H&@PR/H!1<pt-Vl810dd$\-9[ALhA\Hk#6mD-4r\,0`)Z>brbdPj
%MNY(Qk%&@]iDgK6WNu$Sq&X5Mk#ucGnB6GD5n(Lj8.=f(^:[;hEuWgo!m1\ZSBr>YWADFE-U]?iq)@[2i3er;fPd]Xgc4j<%D+_n
%fX*r2P8PO<T)r:>oh+YGb://^n-<]%7gqamk9'''89bC[k%%Qt;8&W[>>D`hE9Slh3MJ%Z["_bEC4(#9T]K-UcZt3qa)>Z%=:SL`
%%Bl;U!1&S\Q.)WB!B!4pNrmpH@-(qMnnDoJjeP"N_00K/^$n[MYsFX&Jb_7#EjCd"[W026V`I:RU=aG\&iMEnSgm>m?/l#_=d-aB
%fdB(_5aBI>&E*WrW!SZ/KQ>?01OsKg4U]I?:m$Q1jEh>!RhFu<)(k(5M"5\Y^johC*#(Z3a!T,AGqj"'WXlr3B#s&[(*_dp2dg[S
%1F@Zp7dN>',E+h'YiPGg!'E2^M5"rMMFgR&@hU=;H''#pF%#RJM1\n2aU(OkFC`96VfAB0gC0+T9O%t[d)_>ck9X12L1Cu(@Bdik
%h"r3OH45cQF[?pC>gUQK_Ch)k)YjZ\HdmjRdSg?!r1dZ\+E0%$1rII/U.m-T3U,M<6ru'_;OQGESRIWsWHN2VjA]'3T2R.Y<&B/3
%D[&YUA,pf\?oV"CJKYE(h]N5t1G!Pj"2[R%aAM:M:&SjDO.@GV(FeBX5ic)j8o_p$&LE<PD^a[gQ-cuSK3XZsK-2h27bRG?j@"\8
%<WU:`7$8i(*Z@"\-RpaVATh!dE4,iTqDd$>#*,a=>*gesNZ%OM.El`Z.J3BL)4&:(a!l][Z%"RfnKbNP%!OfLQ-9ATgeu@/YiAT4
%8d0C.!)-e.;Uf[f0]CG"4m7,i_k1Cu8&=@Gb]+gT?tI4X,u5)M'FWp1(514+G_BbIP0i6K_^.'1$7qT[PIPNGCn+2tfO$G=EUlL@
%DaCYJ.:g\`N7:m>=6g9/4D9nI,)lg^6Q+61V1_;E1i554j:_ip7akEs8*D%"^Htc:M3&J6hMb-A%4Nr^0b.i<icBk,A`Nm.$IU)V
%PA5o];LicXB6%%;i/<e<#DDXc]XUTd<Jj.KjK^R\nJecDZe7r]3lqTI0:tOg;]a<(N`u@Gi+:QE._t$h$@moWE5`Pa`aHdE6ZnPY
%LEa4mKUdUNPKj;!?c<_Wmm1MaUi;Q>*9%m23;HpcI?]TtXhpZ'i/)6kiAmDfH$iEh8(#6W91t!c:(BQXZHSu[UR2&j2k53E,E%bM
%*!@:p_2(U4:brf*,*8C4+Q>dsR"?AHSDkul!-KM#K8'co]HW.j64Y3Aae4A1*nB8LnDQ*B#gs\U4DJ:["V2u.ng"M!0LeM\LcC"s
%7nsH]63TB>F@p]p$#hl^QO>H5_[WMM7FtAR$&A[+#mqRlK6YXQR,LH`q\)9W6l6*m!_-5M9mhXR\8^B92usW3:kE*S.p+bS3AIg-
%NtkD"@ru"M_LmFA.oLU/'n3k%$4e&YUH%5nNFRKGJI2's(XGpp.5V$T_$Uer,[T:\_S)\acQL*<L;,-)3#/DEEr>t]**$c#,,,*k
%43FuLq)sJHiGsp4%Sj4Ljk>m\BYWRM-o<oOPS+VP"<!_QG*/;1!sU,<!N4HeJ.H#oVMb)<\<-G)'g.?E9o/s/<Q@&2kh!1?Uf^'@
%#n@t/2G!>53K+@P5)A*8NX%0S\d]-s&>,>`JIgapSqDS)%%PtS^]sm`;'^)n_o=PRE4RAVPtPN#"02*9>X'Tb#50Ci5en`a]fG#B
%0u+%9Q8Js;+qC/(!dG<$U]Q'6!G^iUoIJoSB",I;aE@[c`a]&l__-\\&]&80hdR-RjR:$4oaU]N#W(7SUFPVS&S$TJH,CO\k!n9H
%7^;U>@j4_gjEDhjLu1[$^i*l-YDW(VgN!Mm>n@b_<f6TFaqc2\'^U0sh,@.`>6$7__;Si3p<@gl_)8Ic!TCD7=p+XC!/l^''LDWQ
%,JTk$:CGr:TfMTg4G3MX0dR,[!!fV4dY<=$4%0^Q@==?b%O[*"I2Bu7*%46g#c7d?=p+VuS>/AI]gmTD81eVrq50[.#0!"hI$4]P
%C6.A%%m]=0E!q^neX8c*Ah`*`YbN2Za)$LmCQrMUJWBq#l/ro@:(S?QinHOicS1#j@V-V[e,t(s=::kL']7Y,EKD]`2rU`W\7^lj
%mBdY&JpTR.(2_^\7"B5>KD'KJS5a$;$6MeWm=5K&-oS@KXuFIc*!%O^1ru/YGeD+M"QjTj<c_5YUFN3$7;O*c>!]hV:Em3SX9`4P
%E1pG.@X1P`1.6&,!\21udG(^U;$"?Z:'17OMW[\9O<C!XjpAEoBl%J>^'O=,0Q.?Bl`n)ONXcIkTtDg9";pZdd7qDM)"%gT)u>E[
%W(HLp'J.f@1FV]]'e&NQ`)<d0hDYT--E7_h&id`LadWYj9b#/_+ausd<$ZD#2^4;lL?)'A(Pg4r]]h`%c;Z'->'DUQeg#HmM?F%#
%j6#/-1hS7+J:-/5er[OY].p1?]pQ=6MZA%_pIW`+LCO_WF)\5^GuH8l;_UQs*[?3XF,k&=nchJd10512)f_Qj*%?t.!0XWQPBR&;
%6tT,*!V45sM;sTe_OSEucZ-T0=T`&A_=9ugbuCQpj,HPu!C-#QqC$srl)KX$NMp'3h[5B&`=+Inj:''J62M)9/3)K2TU(^0+ZS>c
%5oGB$L?"8$D3l3#2\?$*@5-Ps2&47PN;#;(r@ETkVKaP5@Od<q,+i<.T&Fo-RDD'%`uD:(^n2A^D\0/9B0b<u'59<2j:)G6-k+1d
%-ntA@J\5])!8CNoDi-bL\tC3l,D$9*e/l[M'q"YrZ*f,+@dKj(,]Bu/!-,G;ng:[_bf'qM>p9O@)NH`k=6-ZZ*K53!Rb98@hKUNj
%#3&AEP]7/L]-nZ0,'_"q#;`]<Ggf1pX>U=RVBdQ0$H;KeUL9Q@KK%hM"o@!c]ZKRKW..8*VP"o(neM4D7-Ss!YhANXWQ7/AQkd?)
%#`OipkhYl;&:j3RhG$JUaM&B;9X$Q%pd1[d;';H=>'oIN%,6UtKq2\*PQ3N+DTW#UdB2QXh8OG!S3T6#9ojjF"h,HDiY+Q(@(V9\
%"`#'#%;LVlcOANe3q<@?A!l's![gH4;j1ZW$:Ckeh0dC6G18@qD?eke;O\H@m/Td&W(;lf6JrL7q(pB8,'.)#@!7/fja%WI)[&V,
%DOB6&,9oi9]C?&h-W&$)U&[H)NnI.(D+I9Rfo>V5J/ftL2[r>4NdJufjGY38>=#kM$\O#X'XSgC`#5I9C,a4:,,s5A0kLa=<Rbn3
%E'WWSTlqZ?`W3bV9ZWA_V5W4CE*:F,[2VE>-kW;Sh'`j=pcjK"VX'-B8S53_*+hiN<S21O(^42EC=.qiBo^sXiJ5T]$?EVpj!o",
%&V@f:2r&;FEo<tUG(Y=0)o_1KKklS=^tg^70g*!JYZ8r\;rDO1Y/'L<^thhf&Ak0Wh*_S9MA"ib:`+_VL[Jb0JrBiD)i\i(010ps
%JLb]`TY"(X#14.mh9Ch0J9_Op<,Otq%D&%p5:.g@ar*lZA-%DPL7Y/*gC:_5iTJ(%JD?+iFZq"$g^OU_Kc[cDA9#m`2@F+,d5Bj"
%I$6i<HJiZNqKJH'.u$Q7-q_ke:1)@]r]+pVj@;]1(Z]J&2IJBZE]9IV,UKl,E?aEKk8P4kK+;r#.<7A:8s5j<(io@a"_e+LRggt+
%2rJQjB8V;3[#`e3Z8AJph%1@Tf<,H6?+rkgSKW3@!l<R#>5sC8-VfI$E&Z_C7WC=Fi,2Y_\N#?EGLM;!7FZk"a/DFkHf/e;N?L&J
%J\+bkP2hu6\/V/,WZ'*3]0V1MW5.4_).E^9^8Wu3)?hkX6$!qQ\XQidS6`)7h':iE:gHqp6,Hn1T&'md)ruh!Uh&']LX[hp2c2R$
%IYQWPj>719#3/#Z;M2iJ]9r_u>E@Q6+6Be<MVLoi;Drt0E&Y<A'dBpAG/GV`'J7;k-BJK%;2+'Xrhk4T#2MuX7s5FOQ&r@4JP:U+
%;p[@t*k.W;K35j,pCMmAMZgFLKbhhfFFke;*lI>>b*qt-,Zn,h`,:g:0+8U#pf)jH)oT;tgDEq"O$/"Pb?.V6UFLE/S0r2fh+!d*
%FZ6=nF\d&L)[87;@rVi[O4BerA:N6AN&GT>h>7!WVV?n8d[cRidOIdH+`Y$%RR;0!Z!;6+iBJV%2tT[1kU$?I.dR2Ikrj3k$:$PX
%NZ8VLkFMn2qD3BaXQ@nFSXWGp\6,PWEtd[D"+p7!gd#?ZCqkUN"pA$?"dqH5Jm[15Et]/+;K97(&0smLNWLsa.roi$jj$4$r.C&p
%&8'iV<)@HV+O"eZadkh30h?2fYl]ni+h=qNiXV*?+R9"dY(5;!.junh2hA=[j'`/4%B@42,?03M6YO/bEE<42eRhq=8MpU$i[28j
%=)J[f%)X9]!HB>@'h/*)LRXh'C]t@eDOOiFFI]%DUI9>U%>6fW.^WZ(;hpHS1kX^U[tn`J!]Nh2\:F^#'*3]5O2%dsJHilKXNHVD
%qKCak"5gO*cAK<+eVU+fgVt7GaP-htaa)/5]Ubm&KY_@u=t4Rt]0.GH\[TTdCPi>-:#Um_cQTau0<,=Ti$gt@`!(.-dSQ8Ji:`r`
%h[6kfBcZ[S.c*)BMW<EX_/5N)%$$4R9mSbRklS;1^X'-m)c`Q>#p2\':a:O.''%4FB=fSkPeq7#:21s\Vh?1A?O@W.Qu+%R%\uQW
%`!XHnAfDYS_Ip>%cP2BCZnI-d-;&F_g!,3kka@V4$tc!s=h[$5B"J0HDGZR7;N.h;Ag#iNOFV"!ODT(JPH5n]J3]J9'"d8NOMH^X
%/''V&&154DkGj]?en^n/Ch$J-)^6EZfH0Mu.`aLrN"t-#Cnjn,Ne38V,U7?O9*X(`.6/E9<:qS([UFUfRb/$Z)e9(\.*+<9-%0Zm
%g+YI+iK#$j)tksR2CZ^*/[Kgl5dgt.',tP<Yt];TR?rf9h%XD=f]Jr8Un0u\!]u5g2N2KL0S4!#dA4YJgcR(=2MSJ2'S_GZLi)5)
%K!3B@[V;NW@Aa[kZjdlg9-L`8,34iq)8p]^Ik@[Pp+%tLL"L!>O,89q%:Zpo$cFqQ4N#RE&DKT=K\HoD)fQ\AbnXZ6"T5g'%PTdB
%71+\7bRh3s#BM#P,&AL:OAgf9@@NRN1Uh!&gQ\`Dn2,jOVPH)(\X.^9_H!,gpt?E(Vo8\016;e0`4mU2aK_<m6e@(k#i&\D[:)9d
%OG:VfK+ce`[@%s/9n]@;/S((r]JdLG"c7SND)R4\g_J,L)[<`.)SUB_'F2;RfVWI/(oe9WHciEU)n\)7M]BWJ2fro:oY\C@gdDhZ
%$?)1rCM1bBS,mC=&R87S[BjIj/$*pF;q.RWPA8%Di5OK7'l6u,[0a)LfB`oD4%k\j6e'Ca;of,=RfM,L"7#B_W?fh9WSqeP,P5IW
%1CC6&Tq&ARUIWc[82T7).%5>MC:t04D1JRiVn,0.-`cJV8D;Qg#G[j>7ls)c"r<)(CEo2JiJN4pJTOa-7MltKU1%_6&-\#N$DC2n
%65WuB5s&c(h@)Xg(itDK&E2q#oEB2FL!L6sA"r,TfbE_jH,5*(9nE76r`8OTTV2oQltd#)!\0*pB;<,/oFlfuiAu`OfPJ]+As<Zh
%c&N2NUla9*<[#Y0L6t\7c2a%2I#>7^Bhgst.2%Q4?[B6K./>6FQ5uh$Eq^L12Wmoi<cCWmZCu5&o+dp7$@RJhF,#lQKA\La!g=Y4
%[(;uB;h>l']BV\fUS:[882f]4UXQI63ZZ]pDQ&?3VOId5&Ojd$RR=-\WDTtjjoF'[ntUfCiaYp]Yeq1sRmOD-5bN5_fL==Q"ii5m
%lRrT'G"E;PggahmO>N\V'cNS20O`%!A8FMCH6l6:qKYK!OlBgdEBk?l2A,S&%2Klm(;OT3/@PC?$l,65dpRKlJRVDXX'l8^G#=c.
%`PaBDH1)o]ai2.'.*9+%$Itehg/+?Q<1.K_fHA)oTodnOY_aZ0:aF:.GVCpICa'[g,Uautn@*p(U6sT.e[ClS@WsC2-oOp>(J@'!
%a&*HLkFgH-)St,V-oV"\6%GN9`&o.b6<F?/L:@M?6UA!9FN/I$Yh1l\c"8n^c*5hGEXYh_\=mAu!f.3$`$V,X'OXs4Cm$JA_8pNA
%;</:?hb!pSM;TZJ#^G"o*kZ#>3,GB#MmX=6fL6pb(#tbMQ6ED>@07(Y,Mc<@,R@-F4"D4mkJ?KCYb>'MWM*`fV5)rM"iH'T<RYb'
%U,@n0$kFsuf]\h9%1=,lH'$ICo/G?&WE@fG0QLjXX;3/i2a&!9;HUHYY^g.lj;Fde"Us-61GEWkPAt%G%%E8+atjkO2T]<WPBD1*
%Ca*rbB*H1"$AH'n$k+(!]0KVF8\cUu!OYh1YR0<@CF_1T2P._$c*4G"2_[LJ_B,htN'^qtr<4a_LVa6Q821PX3$Sd?O[*?-*?kZ"
%#)*M+<,o*E$Q1t<h2njt_GLau-uA+pW.q-NfHYD<4bkM.08Q;qD@HplMR<hk6",s4b_[t[L!=LI'IN.>Y[N=ghMFR-6aPdX*s.0+
%0Y/CYD.hq-=9_N`&MS$Od7o<ld!188,-K2+YS$I.gRE_%KAZq03cT/PaGAV7'K3KtAJ#%PRj(nC9UA(Sdka+#1FR'I>Jbc^:tY9D
%U:6#!9esENZ*D7e1eC`14\+*CQWatHCsk=h(X8&G@EiBm?pVXVR?SEeKu,/e"P_O?:tU^G<Et0n7dM<@8:eV^"ds$[-u=nKc+ZJP
%1RK$+Nft70M6_J@:tW"o.l)E:C=+G5P!WSE$Y?F6*X\AWQ%O!OfGFW6=9oU!fu4(\Ukcf6Z@%n1Y[KcVc3Y1C.'PGNTWj9s:l>C/
%NTYOU":?*-O+QTNTWk+,1";1lNDc#",Xk;`m4uNe%D*hm*&`4s%5s)a%20E\(\D\!UhR,cclR;/QRNnt8*T!:)d2.(Tb;AoJ\Y^[
%p77seO+M)_TlG`$J;=C5_M0.28t`PI:Jct*Nm%XINsR\%ENnDZjD;%A#FiX#AOQ`+1Q%f#ENnsA<9>&02TJou+^kPkAm:+VY$ejD
%ftA^]'Ae8D!MMQi%4sitE'=:V6\2I](,ag=03&]g1f5N7+s]-k'aYhF1'!Q_OK`/+!bd3Q@=uEU*(+.e^ekY+'K/tmIWU:\L'sU=
%>mh?)R1hQhFU!O/#dGLcd%'SmcJ^;XFBD1UP%6Y0_FEmKdg?q"$VhkZ'akuC(Y!u-@:9fe3:;NT%13kDZ*6M[Gi]>A)_E7c8?oC-
%KL(lF`PRA#B#naafT:WSe-$@n)sLc[2(39c/K!iKLVdq>Ku1k&=&Na/fU0.iV_ol=,4hC)-u>VsBU;%oiu*Mdc(M:,`f_bb2PV3d
%A&H/Q$m_0Nl-oVCgGoPJ\**WL0q0mOCj:W'Lt3"D)l@UaGm9"_gh)48.`O>;*'j4gK4..7)EV]]L_7Tr28Tb.]28au$WW7`>WF_(
%%5$KIkSoob+g0refH0WHXpbN(Q5^R7$jA^aOh!IXFqV->@:1If8/h^*,WHT]"RJ^=NeV!pM>[n`HI=B)K>4!cjm-8`b[SK(Sg9q?
%NdXWIF,8H]ltbsSkS3l^!aK+BT-7Pl&@!Bc;pZDLSUsEp8I_9M?5&H`2?ifC4AWlE5d0.a.Xhiug.B#?6!b4u89%m(#U(?s%.=XS
%%Tq_ds"N@g'feQ\\Fm,*%c-/N;i1c5HPPsP!N6Fpg1u9/);6qOI$)N:Z*"]/9L=P%>n]EP)U>aO.Wl*B[FYc2MK00PehF4W>a&fj
%*Fj\@9mI6tX0!5j?8,/e&D'='VcOJ5]nS!d_DQVV:sXImE)#R]`AMmUnnPC0+Bs\cCf%lo#&YH=^o8im22m:/2e_NQTr9bXC[r<r
%%bI/DA,rU,YgueL!PP"s=sq]'%+La&"%'D)>#W>Cqop7c.Fb't3'8FV;"C/-%FCOF#dFDCGh,jT&:7aBX=;?tpSFTeP:mp8kmYcS
%9%q'@32AiQK"Ou$C\e3'Lh8?lUbiDj+P'@5l&[BL28+`*2_tkX1>l8l#Ejmq`$-[_28oe].4![KXD,<URP"<b#bm/l[tjbei?9Vb
%g;?ub`ghT],EO(Q>7&#FKN_(I7"_Wh.Pa(#\_;Q8'Y$1Q-K,BB)PqF9lQ4DE>:-hP<dR7bR%[PZbUK\_"g'*[A`+pcAp"eYTc%Au
%0Pa4#&]Et50OP5i9a!3hc1.fjM@=ldX!Sr.=T&r9R_CZuI'mafLFkuQ<D=YXTP5.@)K,1iTPAM8^tttKeH?P=6`2Wg?:'>-.+R13
%2[W)5AYLlUWF/[-3t>+u4[uiQ4=NZU&boNDQQQkOc8%bcp0&(o!NHIQ&%k0tW=>JJ##@rBFe!\*8P&Ij/h@4)G"E24%%GsbfUtQ0
%P?U#h@pI540e2GsQ^W<@\2"bbRKt<m^p)<`CSf<QWN.#S5Qh9`*HZc;-?TIk>)/o6i0#*)2-h3k5V!s7m;I5#B6_pgErCa>ngfQb
%Z9qgBW6&3H_tje$]"f1FXpg7M80)rmU<]8A]*:]0DppJHNksS.;/U4SU6_2"3=b]b*DEDRV/c-8>T!nA"R+ri&8K'm6*1R7TUnO^
%<!6sDaKOPu9?`^<:M27=+m@BMe*Z;]dttD&)YgZB<>tQf>Ri]cVr;=:r(K0,Eb--V2!p?$;YM*t1hFQ*MaCjMBlf1:_hSF9OgUke
%3pfAG;TrjQ;M%51,ElK=[LI5F1B%pLSjK"mI4.]nGraQ#]qiSh%lZ*!lA@J?@;?]!f^s^lJ`,+pVE(k,qZ\rQk#m_D<Np0?U^g#%
%pacQ\l@[0B+:;1E<4(nZ!rM:b$A^PqSna$=*Q5F"@+0uBB3<X1$!d<8C7=K$%*'efdf^H'<Mfq53bf`&$tl"O6QjDtbVWaZYk(jk
%VMUDrM5D=_-Ur'kQmTj,,.\ItRbX`CTW!S47*RS)4$A;3JtiZl1_m)mpS,Js:SU/m#n[HWd5>n-19s2TN\*t)jG>:nFOAMf$8"t+
%]?$P2+\S/!.SD7q1o6tPD,;:K5JSX+K9`#T.AX)MdZ\4!(g8a^HN78Y"tH/IqSK1&nkT]ng'BK*Br)`B1cb#%92oo*.52X.oF+Na
%!fGYt,h-NBe6#2(DSPmQdRlAJBg?*nWBj*g7;&#38Q1:b:jcugW,e,Y2T:e*JlZ:G,[%5bY:.h%K;]J>3_+1fc7l%#iJWUJ1PGCr
%<?)]=Ra.#r,TDL1'I>>&+f%EnW?FgM=?a_^!9m)6Z33C<P+loQ+-$-g.B^KW'.,%fblp8!6;-;/'_#dn+iR^3YbMZ"9VJ54IL14g
%+@f4Z<]p\JVJIh:17KkXOA"CZCc$,N-g(8[)@`_<%5]!l:!PGf$&fhmCbs/rdauYf%L7B!J0GA/1_L@*>f2IH6o<QC'J>h`$TLF@
%d%W8,UL++]ScnUbTq]XUc:Q01'MTU*aj5O4'dDFPU8_'^m8]P;i].9i%MMQL&BTQ^&m[=/83s!IL)NPRV#FeVLn<6^AoQ,>*Tm.D
%'YMU#e:J3*BPfSoLAIEmJ2bd#Td`#'fUth_DgLZ@Tb1=tb8N,m\Zc(s._sF'42<ZV(HN(19sBD,-I:<iWUpTm3=#VPJjPZb%JZ>I
%9^!0NVp@&j8^@V/W.I>T@>5-FVud?t"?Xa[M+KiO/U9rSTrGa,(JbgSL(_,H3&Xb":cODV%LPr*>Yug]r]&>q>\])AUej'+]/F"M
%Bk8R0)'CabDc$iVinP+H!oj\!RQtin195*8K]9qH!X&om.kl5R#+[$XbHRY5jlNaU5m(0=q_]d8LiMJ-OJ#T02C)u"c7,pt6'IlL
%\/Lq0+=Ub("&/n@[Eh[B$)\.7>nmM]O=\@0&En8Ykhrkl?4RhTqDN0Q457OGn.4i'n,M$ip;;fdnjO*6&O-*]o&A[jT^+Y9]fi&R
%3VfuSVYeQkDghC<r\j<(Sm4F.p6E&YrL[G%*1`]a?);c%*`haErRS4LoUE>IHB/#t6UqZfIoCjndn9LL'imP%rUHKgX/GWe:Oi67
%>C6%'XI%?b%/B"U-kk)Y1''0#E1Jt-"eNWblaIMgoaC$78+h?[X+40[JYKUns$59P`P,uBKdEOeb1E[(5sJ<YO[+I$MPB+@0@8J=
%(EAr1XktBG17=lWjB4N3PrNf@M>:O-d[rEU;^$MWUEhDT[g5ln)F`/nD&oPaI)0Y6:A(]<na'"32`_fhnO=[1P,FR-#8=T-=fsfu
%URadN"9HYUJ5P<%6]b**cR88P4U4M4&M_l[,2.`8$7@*TE#9U/B<X;L)%'0I:?$RbkD;nSl3@P=,K,1j#l@(18Gg-/b;Ne)eri`7
%P7F5R\^HmG@kfAZR#-qJARpLp%aIJ&Psl(7EINU:TdEG\B7LUBr>\77$B]ocR-8p5J4q:VeSi:C/[VmrFTh[$jpdsK$A-aM)dYVR
%#4)YAjeY,0PM>4*>j6c_2T_gSS^:i&N6&:l,pO.r5>$)"D?DeB-@.=%glk-H,@>Re`]i?OFgV;f6f=#b135B8G0onB%^M)POZuo&
%KiES]8@:f0-gn;#j;mIi$#rWYA6IO=mFMNa2*(j.n9pqI.1mWZ[<;7E5Xa[iN0:J$\-:;UCn;3)_(Bo$kE2F3AL+kFCH^uFSaD'I
%'\gdIVBT8`E4RE<qd(mA9X8pa@FfRjBc?)9kde"H8]'D7OIbF?*ZT8aM=KlIHUrcESlA8OT^Wo/-lVDZlh2`UF<dRE'^-As\*ZZQ
%M?grRXl!o"8_jtInA`#eZ#P%j;H+GGBcP>m.'lZ^!<:(f7h.*tHK=sU+/V%]<'$aLH"YS<Q<mBu%%g@:Dr99V^=R-B[9a(a6^^0G
%a%K"[hA0R^F[Tj4?%Zk3:0=4QHk>%/R!RH<D4H1CZnN.@Y'"tZ4,k1j4rM5d]UcCQ?s936N>lGhL#=9"^8%khe%QsO3]s77-(ZXC
%'j228r%ed%+4:MGH>.nM#Fc!?TFIQ1%HruqH%@X.DGNqnp47=&*+F78om+%LAC-Mu8Vn*5R\nW;,A8T,\j'U:SLY_h*8/J5OH.*]
%`U*dM?Ih2hKb:bcj\\F8nG?@7I%poOh:f_?,0Vh>[^M^b11S:k:HtJB,[uR_fC6UJh@<_$M+:_j6e_eFqA6`%0Ja'#&>NUgg:+fN
%a8m%'X_jH;576.&dn+4`@Mmis)iG>Ggh\ds7uNOeV+RM#de>,eNNVrUk72eg30*JbmXQ#7G%&MN#O=q&GL)(/*6R"&+o%g+U]B=W
%qp;njg%^:dd1FWhN9CP5&&Y2[,?oq7cTt<<KTQ?nlt>@gNO&Vk8Y.54)m^L>r9HL*m\UJF=SrupcAf)lm?qNhP/`HelAg(Y?GOK=
%W4\1m5'_1qDkd*u_&ZlFm+8N+^4E3Kr9dYIH1H`@NcaX*45/p:,/QO2iD[C>0gr].@%e1pi0d),p9q7-I32JQNFe'[3>#4?D%<Rb
%!>&>Blr9\lF2njnRO/Ke*)\Wq4hZs:D]M/oH;3ip9WAP>Yk8lt10Z"Zbn$CJ^#\)\\TJCK,BlmCF7*WX=erP"_"n6t<"m35$'dn#
%S@2.4,SPO4P38EmPEXk^JiqBq@",]WE1W;"'UCsLN8_eAh<\@\@:2[fD;<7M'EP&$WG8t=.e6U8@CiOnBENq`g*RP"##$CLE*;^E
%&!mjrfeY%!,+m?]1)"_>>#F#-)#?<.cAX*Xfc=6a@h?RO-Gi-h4)YZ:Tl:ba'6@*h$H$:m$P_/CbpJ]2Ta9Q0LP'L<iB6,>.0-=6
%BG8ONN[2R0<W3K][WKro*J/3.#I"U(*U.60*(<?4c#IM8QLkZr*hNM3k8kN@E`u)JB59J26p24ISZ\^@DdITrak%pGE<nHgp@)IZ
%l`TaY$CLRSAEVX.SOA)>*&,],\_e]oR;##+ot`bj?;-dQSo9aq03a(Aq^LdK7Jl;?,B*K'$;6j#Oo39g;Mt74*=(175[k;=-H[WG
%fE]*&_l.DRAdC4f&!CNl&d&iPK;DF;R0=2TQ;#LH`d,j*D`oLT^/imT7\OVCaWprDP_h)qJV`(Ii/Ues1cfh)fFalT3mU;@0Lj0d
%bM-'(Ykr_&kptph8,P?q9uisJ8[E./;\kd[J$Rg2H_aZ%K:G#.@r4MCa,^W^01<Ypi>0L?qD'*UE(mO,V<GM)c%g>l0g?epa_4$$
%I;i]#\<2B'`]:^69j0%o$$mA4NV>^p"Pp,$Y&G9pDf@b-9PgFY11"cR(bgHBW>f(p%ia;<"52A`0Y+1K_N]/=L1:":MS<uf1\q`@
%#'iK*425`ZU9GB11=;XOJ9?(?),hR,Z"`rno\!i(kq+&A*O0rMM=m[Q7Zs3_TWSRJoEJt]\e\FC=io:t\n<TkUsEJEli)()g:$s>
%:lLlJC@$*HWfmb\FuC3eX4TEJ>L7X3\ur#_Lko]7M.Z.u\'.V2()6!p2lBQMFNjV(hK.&7obaD5'*g6Rb8.bXCs?cV_CQt0etd],
%P/G!PY@f[.-R2AQ6mk[7(muZT7WT:_AY_#B@Ld;C6/O\);"tqB&:'tmh*<kll\K<>TufY.W-V.4;JN)1WS(t9_!(E#9p*)(F9nAp
%LNU3t:2T0t&Z1UO.Dh4f<R@V`O*]cH6Io*sV\`32Y)k\%d]"tJN04HmZtA8[!$.If9T5/j5VUYkkB8ILa__Baf*!N;I*%?%\iau&
%A%R..]juC0\6)3*$lsO^>ZZg^cQ,g'7&3sUB)9]Hk%K8Mh9]Lup-7:hh"V@Q#D[N1A+pRm;!<$ld@]SkQFhZVc3G@)#mM*dc?CTa
%_M>TZ@ilhHSA_=/iY9\'T&^9ISHajAO!7#)"q)(gq[G;j$/XC?bo7CC'2rh(!.JfrYr55"l_2a,&4gUW(SY/Tg"^[.)R`F>Jupc^
%c36am8^,kUjTri1dln&L9P?2OO]A:]D.%*o8(['8CY3O4TkGYNm#ZqHBm"4CXOen?4;&$>K]dZ!FP]N=/[.p,,msq[5_]iV4uo#?
%Mo_Xk#L7$r@LtOnC>L[BO&(9iBap^l,<m.6=Z&B7WNfZ_d#UqmWY20SUPn8+8K>EaW:WA$NPo!"g^)oZ5ZAMKZXs"^U!mW02kBM7
%+cfP73m$669(k$j)+EJO(<$?Bq-LbB?2J0j]ZVW.T.:eq>&qq9ghm672)On7)t58P+aJKVn9TWgM8/,;jg(P_R?^,b_AbZ%O.s4T
%>jqP5<!(O2K*^@b&0@Z^7&UI?H41PS^fiWh.g"mfkad#l`aZl3+555(SX0sIg2j)8s,cJSe'Kic,'<BYVVE.IX_5>@W&05YfucFo
%cl"%WQ1gB?D\#WQ@%p[Lole.3EpF9YFCggV-A-Rp#rUm8&,_<0!JDj&Vplq'ifn#$,&?nf=qD10`S:Gs;Wc&Pi@R3scI!L;C5W-G
%b.5r_^;]^V&e5MC,p$Im9N4q<K`2(%IkZ::<-#W9WD9&;'6d([bXP<pkYB#6MY[7M?<'m'&l)1KC?Wd\b49BY*8KCg]8-P.'j0lH
%-hOssUIKbZnTGHu(D22'fO[1_/r7<jlkVmF8`<hG-[=UMghPtUp1>+W4t+GsWBgNJI;X.hqZ?6-6_jP+D@iBQ,&.dZ\_>;O&%X'#
%,!Jo0g)??I$;[\'JU!t2$Ni_[+9D#"gEM09ahpPO(sV!l27qFp^3b[-k/IXI!7<;oAMYTq#]W\u1E;]Ch-:k`m=D$J$O4rrhG9QW
%.=C?tK8CuEAf(=#716+]!jqVQ1`k_kcBHT.9FTrEF,);1GrXJhpJDkMdldpYl_@5K?"C`-H/Il`CEp(.La"p*>T!@KOoZ3@oY<@]
%,)RZsg45%DMHHQ#^ZRj$#\$sLD,#gq+%s7JDsK]Q"!`Fuj71Xs+eT?Cl"n=(&RIY?M89[U(n$p?L9NYA(.8[.*"K*qB)N_,JZ/7b
%eu-I%NsBlNc'V:##g$][R&#[^,m.n6AKTU6Z"]J[!I%oM9p?+,9R1W9h=a/&$6f&iKj?[#Jo;)2oZi`)HE(A`*%F*3$#^f;R8Kr/
%EL(.A[St'f_bqW<_&Zl-U'+!H8`3k\EQEHE[`^^E?4bJ'C^u`%V-RX0#g#*;&/"Z]6m+WHZ*E_e3Q[<%:fn4R;At=e<:*gdA!*]c
%#>P#O\sL>rQ(&('ELj>I41$H!SS\1u5-O3ED<oWJR5PL(58T0#TE^PdgPla)`l/7lU=[BPda=/Vf1lJ]K1/9WY#E6V,V`P<^Df]t
%P=%9GJMZAS8H)q05jUE=)NO'^&LQ)(%[@MP+#smKP/6='fXQq6F&A5U(Z-/)ibPDB96T#%0kSrtFT6Z.KkL,"8.2"f#XP@/I&LS`
%pJ3@?0MsFWZCQhcA_9Mpo94nL8)\Ls3piNf_>1n-S?5q&'u3,DSrMa+VEMbm:dCrDiZggDM/#UV>\qWqTO-p-i:9Rk6]bFP@A<Ue
%1)jT%"fOZ%oI63"Yo<q`4bP4>OkGc86pP)LkaI&RNtu!A\9ptK#?9j&>p/_,W)b;7%MfVC)4?Fj7W&qO+gZe:FW^7olZL,;;<;YF
%$rn2\3uLNTOg&Z=@hl==iX//LAPZ=6(hH4t*oVl_3g(5IZrn,$lE'cSZk`XU.X^,_2UZ,Zpr(3ML_Aa49IM/qY`7+:9kiUGF)F9q
%"mBBm#@9Q^aTBWuqdll1lqP3?U0%dY.tFpDq#/.pp"UsT7N.q?VfMbLq]\qDi7u9/9L9_`=IQ^Y^tZ1N?gLf?\u`T)*"ebdF&qoI
%!)<dnfdWZj<$L?m0N"UJU=tiL[>cj\VC9fdfT+%M;1_nZPaR^-6S9.Wr+$936&hQO`=X(>h2*;jo8>r*-IEFT)fiFDa%NpV?q:b*
%RbE0HdY1j>T3Pd7cWWSf6QTH./![,OJN^<eWe>aip+S>PPIW*^An;;^GTrm[hTLjbHDs<8R%gq1L'`aRZ:UFBa$[;B(++kIM(HVZ
%Z\&lrd:Upd.S4U16BZGJ#RiM'5^/D1<q0G,dhm@3k^'kQB"s8@7MF]@AR6](.rq<;3dR'7l1had+X[3,_<F;\SWJgf/tk@JA1,Z(
%@%q.s',aT1B[(BE*bafYBVr-b5(tgcU)K/g>TH4S._gS%[eIaX'.p"B\^!qU!J-)!3+V%>MoRj]p#9rK0[lHr#OAr4PKqDuLfVrX
%T_\YYU5)4aK5cu)!G""snKTDf/LE6;$-QNNjIjj%Dk;Nn_j!D7(7ShEE0R_e`h@3l#'9=4I<!jcWVXUt(e9!=9"'ReOL>@6<&9]U
%jMkY[]$[U>YuksQlu-:3enhu1.==gBkCt&oefPcS6hZ\LUm*9Q`6:qe*XS9?9EZQS1(dk)IVe".'r;h$Sefc17*1jU73r/ih1Ojb
%#/A)mLPZp$'p48uTN[LJHk6Vohp8R>Q:/h@P/KL0`^DNJ.qCO$!%-i)l-WsNJliZl.oJQs\>7+#99mo'd^\"q#[0!_/22p69o,gd
%3"m[j=9ED9L8%;9#1Gsrq?,BU#SFicdQh2%*d>*Wa/5a#o3%iGKurD3_'3$5krPuhfCZ<.Ajs<6;4pPCLo-\2pg9l(A$AIO;]TC%
%"V-rb1MPe\d@3.!n4sR[*XCNL.f%H/C"2s!UCoG>7@(bnDAuBRi.Q_;ku(tfR7Nf4Agat=ETUP!X:L]MW=19%a6$bZ,#ekF-505r
%RYf.^W]5%q0sg>c,#fOb(RE$N2B)n(E%+I*fuah;#`5'Ya$c/F%%NKt[e7L?\"I/"Mf$/[/`bTp.RqV'2S3UQq,!]%^AEIm[Q'YA
%+gA4FCoeOhERnWt.]m7\!:3?IE`a6U;$dP)ln5aWCE?om0Ka+"Muu@+hnUjT-9@'6UZ?9SX)]kk'>5eU;.6)Y[\>]DSg1_#=A449
%;E(#4?-"/Ff!)/OM+)<Ma?0g!dt!+eQ'[onRnaq+qjie7Qt'"X8&bKNH6X#3f"3b4Xb#oU#`k`1+>KlaSQR(#_2p,&fOn1[6hR*I
%-36e>0cr)bNKgAYB=Z))$&K$9o6+ee)$KT-N##,B:!KNFbu_7$AA2NSJXD_OC>`S5,d5!,(dVhM=nQ%K`>[*N^m5U*87rQ$(>*rZ
%6qH*\<O?.'TNF9Yb!E3+5jClSri8L!C=]F8k`Z0i!*Ds`'Mb-F0&&KX=^g=/-@M7uJq1(I1E[f?h_.F%8(kJ)N==5;F0,Or.LI[u
%P4LsfMe-qOBUS`%iG0th9R1G+"D]/Q6tHYD;^4pjHZ4)BZnCp-`D_P"[Y^pp8AUe=-Wgq0B^(#_MW5%L6Ebtf%M;E?VSTQ@DfrH!
%h6GDOF:h%L/M&1_Z?'&Bj(QTT0\J:Ch5PQ;GXu_sZ08EVY7.Mjo.2eB'L#?YmD,6ZaRst#m7p*`V7N9D5dIKm9f@fn7ReFu$%%J5
%7pB.;<J6"h``e1^E#UZfKI5MEbq/Q?mSN0pLg-XA-)I*L_,>9B,"R>$`YdCme0Z@)3_E-n\^_ufc!0[n0-'-#B:#oeV$hsL1!"40
%Bi0QX-bI9;]hKg`/Q-=?[F:&-S0(KWGS;3nZ^b;]df_Fi2;ST,8.25#=M">SBb@o)^/\V5feV([,Q:mhe6CVFH"XplE<DA2j;D!X
%BiCGRqo[k"GPBJ(-<bh*e:2@'`P#[AEPe,dHI-'F[J=Zp9(Qsa/AC\VG`2p.?5L,B;g@/VL<kZt9O9UhZU/`N7S?299dA/h-oFmS
%k>:Cm*!B#&A`BAsi6KTF.[9*uG\_Pc%XSS.Ue5Yndn5.Ea$fS*H%n^EO/42s#UoSDd3V`,gBe4a-'0jNV)L%2!ouYtSI&@noU<AA
%`Dbao^?ll-E!hS%WtSkBV-BP1/Wp'j7?i*&>33#G/FEDMKt7>mCCa9Zl5=X?MDX\neVAu\BdU7`_WifeER_gd0'rP&>Q\"XPFFCK
%?Xk9oYa00j>F%LuX?gM6$OZ*<i[(AK#>9C\\T4i1ON20'$d#+E/8cJ!%=9aP;brjJVZCJ<QRp*Km&NM^QD!=Xc\u-R[%sdRVBNUI
%>QqT_iUu0O*d76rd[5DaWrL-]c5Ko?(hY-uTXL_96k5r&@PE(h"rqb;&51/6\EJW0N]L`O,*WWBPgjFgf"cW,^PE:Oc86+Qkt#GU
%"+_;*lkQ5WTPLtJWc@6eQdKE=jT-RZg02jfH`<udB_7s'9:@i&(lg$:nbi$TV8m\o`dmj4GmBM+0j\-s!Ma.6d&_"mHeGhgm7<Gh
%!2lZK-u5Qt`5r.ff*>mMLe!aOBicg&7SC.af+*e3`d[RkoeK<djh]n,QatR903C:0?5!/N>L%k2.l^+"KAco#&aF$SBdc+7^J-$W
%S/opE]>]@XKDrr@Eu++!mU<I25f+TYl%bX*Z'N',=V#=ZhIBu#//0<2Yqf0FV3+2\'>'H0/.ikX6e*UcUWdhj7S!Otous)I1)!Mg
%7X2$k=dX_9Pq+n:22;D'j#&NML`1*l\4FFW1cDar4-hp%P>g;fR4"Tu7U&^-ZnSara*!eKKPDj#n(=\I)M.)i/8^HM'2Gm$iGgap
%5T@("^W+YJhD'I$'7l4[/MrqXd=]`*E#PHBJA#GIC2[^1EIBf2*`f_FGW,>cjml)[NYsF>"1!-Wh&*3_UP,*ngPoul_qSX\j^F(J
%FO?hK<R#Z`N=sXn\!i[W/SInS3n5YFfa`ImTHjl+DY\T1L&E:ueL:=9FRbF1QETH'XXcfsZHQM(SCsQ)Nga?b$V0h%2B=*@9%`af
%RGAR(at_V71i'@SMUW1XQdT;c2"`F#>+R*DP5,F,G#17Sl:gZ_8>tg5lP%AG-p?n,5RmNP[UJ=?j:F4q&4E1f9#P8K)kn8cN8t8.
%AQ9^,hAgn7TEn8`JLR]%fr(G?N(d1MMW\sW]pZ]<MJcT"73r>Z5_D(%&r]@VN5![sT?Zuh`l'<@du[.g(^7^t0hX5g]o$.Qd_RAY
%.d2UB'4J1s/`.`N&31RXR7pS>ao&?uW3_2]Gn)62U'e:074Kmu5UOO(hI@@[*)F+-p=LB2mWlhQ7cpLDQjI]#&k*$V)d7grqNKIK
%%&208f"H\`*=%et4@]4^qL'>bU,u0^Rcro3"-\Vb'U*e#IE,K0$QPOL0ke-:6LC1sPe*828&V.;)hXBWQ'P.5)^Xu+GqP:+SJAo2
%2i"V.NlTk*hFf(0R$3PeF(SBa7;<rB,J/&d;`g@+0WOHI"j;*2A_"1OUZbe^MHi*#lFH;dK9A7;AR7MI.p='IZAPM&'!S<J(7o:_
%m*.ZE,[]9M5qN4l#Z7M%(b^.;/Xf#D^SRg$78rsmZ@5Om-chuZPd0K(9I<[7hI2Vh`Mf2.[ct,(1Ytg).&rrd[D7</W=tk7J4$.l
%gQ+f4&HoMn1gSK@.AS8)g)<TJ[8<3_1DsC@C+<M(RBZ83AD%/98C_<(hqL/L=@7(3jXSrH\0sg;/PYNC"&>ttp6)DCa"CXlP8<t&
%]`<a2=?r-@a9>M`.%i%=cD"cC:e6o:H*1<@ZCEU/6(Dq`8'?U"2fg$#R#6a'DZR,F,,sh5-*("C4>8i)0QnEleJ_8cXWY'j/:q!f
%j0pHqDY1r&/C;b50lh)U.DAG@dG0f<Jk@"es.tFB1")(\)O]1IdLd;;`99%b+*A^.!Q@:pk/4*ClI"$t`H=[b3$nd$5.S%^3`To-
%ePE6s1F!D^BBRk<SC@ihROXF'j]^;%dAU6*(%GPL>T1]GcY+1M\TGUiRZU31",+hA02HQTAe:@]TpWoeEW[DhdAKPn1sIKr+FW:U
%M#CeWL(8K@rpmn1o='Y72iZtIn=9%p`2Jt0UmFXTXqS#S:1A6U0l,65i9ch5gK>sQ.@7rE)cE#8VP%#I4KJMlf9S:a%e/o3c@tY$
%U)S8LAk@YhVUXhGR^cP)h:M4D9=Ee_"[k`J)I?i"@5-/@nKS+h0CM[V1<A2q))Ia;A&U-#'ui+N!HR$Ci\)UVpS:s?bt(Bd%Z1XW
%,l!\J$[@pB-%'GW#&<E@c_<9.2<9bH_*]Ma0XNdK(okks#?Ck%M(&@P_+j$G$)W3VR1S2BJEKY]MIHW:U!*'uJQ6D-FQfu[PN'<!
%8J.Pfa,I1S+eEs/';GR_8W#fjQ6S'KIUEUH2'=Al).D&'<g'qVFX!,XFd<5p"kkk?LUo?W`Z\*g1uOTo]@&R0Jqi;>//qcF:^!Zb
%Tg%?fEY)S*`2*.^+Ftqpb-``u7;Y?d@d\>_]of:)D]+e+#ZMI#3G@<3^<g%#PdbEj)%f4oSX.S@<=('ger,0+4\B<%)pIekW:ZrD
%+ktK07IDsMEURJugeDBQ`P,HuK8ej,+tXP$[8"K*.qNDQ%plM)LkoLWEq?7@]*urMi"agoL`1F\7:(f69J>A1OP5:B`(_nf!777X
%@RCJh%!b`u";;N+Y*"6p`Ea\amVK[n_*ldUiV>?J)\5G=@)ZAVL<qIFI/=O2(t;B?"X#jDF8h]%U-;g]MB=hCOGMR4a08L=KkTEQ
%*YnU/Q7Th<N$jXP-X3*]D\)s*E&T&1OGMTNi^'n2ZhZC>(Kch9HH\@Mje:,/?,2gc+e!p'3#K,$[>h7k.a"8QbG@"+8ULjWRlV`Q
%Ed2V>_*/du=N8a-)k>n:(WbM!=I!"BJs\98!C;R/(1NUcNDp$-:*t$QNqQ`bWNhX;`3I4@We;_^LM3GL7Ps:K)10TDC_<<D.CEc1
%i:t0@Ca[1*aR"!qo_553.E2KTN3GQ-Z%Ht.nJVcPoHG]PAH8G1_&u3i]skM+Jf*'1Jfl=2L/W.N&OUZM,+e_J$$mo+=[OpF^i?;]
%P%PM2+A&L4d99uir.(mMb@;BV"W%<B'FgdKN2&._/p%mH512dU].M7e3X\Sco!n)mD`g-2Q>lqKL5%Q])KAA[h)c5]F/X1[WoB.[
%Eb#4CX2Ze^`[Ja%%[uM,m"[u1)'s#m8Kgf#6hV/1ZCqXEg&Mqd]rqJ;q0r*K<$T;t2AhCAB^-d5$oHkeCXIAnS_p-?To&Fj-Ml-\
%S'9;UFKH%738*=gko,4&\2_K<:ihWN@0[\_PNCn^dg8E.NQHPc)Y[,GBi54#1b3TIem-SVZe:WD7<r!U7@;nGW(AF1dhL$MHA+41
%=r9FeEN#sAY;=??-&/UR=BWiLI(`XbM4\7h?IWAN3:??60.uo_7ok),344jY,^bkND7UbtWsa#X8r7=,*@e`k$qiP]&R.eAd66R7
%r0-o5Z'H+b2Xr@DP(=a;-E]8G:TAH$fEPik7E`@6Cj@>$qTb6Rp-dCmouN^XBji]H.^@3DW-$O]iTF,T#tOAW;54b\3)1Ahe8\`V
%Og50l$+drPl3Wq:#ctrg%B'Y2W\B:.=3UH//XrV0A*S#Nd?8)#X.KngYb3idl,::Ig!@[_>5FhfoTdPr>7ioVog".uP1Y$%AF)R]
%;p+igc1R3io_DrNel'5WA1OgFbl:q2R;ESKbaQ0a)r7L'*%a65%8'SUF.0'WaT=gh-WN!afQ'PDp7X=qLt&>fPa9mj$rNKNP#2m/
%jQ7b_68Ctfj]`N8Ot![/[-9$&"VNE\Q;k([VcNm,9&TT4[iL/<RF8!PLU9=1W`u5E(a(t_n+J;U-4^mV$aq=_$He/Z%-X%17Z"TN
%-`ET)N@^4$(dcDTEN2oNHr+:VJ*XorHTrJ1*t=oW`dfQ3U`+!N,sii:gCPo9Bp:1jpk/m4U6[AD/6c&gUMUESqNUWf6_t="<#X?0
%-VJj6rTFt\48"UX<('[?'\?NbLek_>P2sFnDoHdn"=OkQ>unMV?DKo*QCnPb0gD`\(#b5OABVeU>bn_LOGgD5(jq*2r#+FX7Oj[c
%hrF#T:S#<'q[IXAQ7C/k6F&nqQdH.!8.Bi[5ooXO&9^lm;E:?2"-r!Wcb9:8.bk2E6,Wf2+Q*V?8'Oi<,imad"/o+p8:A$'Jq7^E
%n>&WEN\[!EOfY(0cn.*Yl*4\1P*1QnLGl3ONZ2W>nk@#AGD/*uBFC9*0CkO=XK`Ru[</0Z^g?HPVb@Pj3Pc1Mp+_b=;5K>1>-TIH
%:M05;UYaCe_+(:]MmLuJ.]S*#_=\i6jjZQn>G*n-"&3<%&pQ4orR'OMJse`uCu2a63F5\Rd-IiR@a1=H!H6D,(n[S,R<5TN"]I=!
%dSQ#j%#o=]Y(\9ls-]ot0QF<[XM3VLQq13/LG<mO;>&4,klkce6Dh'-,18<,Q3/mEaR,5%`Z`Z($O`e/X-V%b]Eidb'2^"XM<qM\
%i1F0#Z$)7ka0R"Qpf"JS4$#0])N6&-<'%3+dALB-\Z!JLQ&0>8R+/68jm(@b7q$GH%/0tC5FK[HcM5mG]?GFs-E8d\F*/sH3#F:9
%A81b$Z$&bL-`_Mj?>Ih[U7*!n`J:>QIr;_'=lUH!_INrmPLL)('pbuRWp4,<A*h$1&DLN)W!H<0d1KTS3AD5\,$U?LPmK'hBkXLL
%\N>CTZ/u8-9C<BbaB'uhbo.hsJoNXWCqnrrT0h.]@QmV\ktqGaR$'X-lF1I@T$3*jaj0.Xl]"1oSn*poOu.4n\`EfF1?7X)lABYK
%CPaS/>j7^VOpnQCF6%=&j%Rqm0F<?A\bNaX<e7^)/IK#h(>S8mJY<a'$P\N3l-GXOP.qH=YtlI`61_X0RNmHA>.d1!Mi9!B;PQh&
%2p5^Fd0&\S`U$)(mR?@&H)%DRd7\b^0#4+WQkK:d]-oSp7rtCY7plR?e78RJ22G:!M/RQgHT0%*qM+_o:k.XtpM0TT`(gloe"u9\
%6o5FYDrN.lb@J<g60h-k>b>Q6pgi/r(.3es=f#?"J0lT[CuW\_bkH%t?-I>ii^.rg;M/iXCDN3aK,ND;6j$?AUUlG'1s97&b+C`*
%'ZVqq[=pN4!J@C0^L`uK0pJK^8iDLL40T/N%PjH-57'Zh1cnkKo0+/d+Ie+<",$2jUFT^%#Y-(.[JN36rZcdB!"UAR?tqtffiIoL
%kfm=Y@=VOGLGh3BB8bcQ"hN)\+rB`C1)ag=^$aL=--_hp.O>(nJ]T$'`,C(1"79oOc3Xk`SZs?iq(C#9ijkmYA:oK'6m*hN1E\VF
%pRfJd=c,AiK4R_I9geB]dTZbfEjKP`f7VaB"04tp4FjrIK"<<[c!*f!"r7fu:de23"A!X4-m#VB1_B\[8D?Esgo/#===8a_DVj_`
%5M+2<L3AgrM&t0aPANo,7_gge_]G_E8G`06"Gc1V7i8%>#SGT/TF!/$n8mu6$h_s_7:a3496QQlOW47;6ZX$Hn(G6]d*XG78E+81
%OX@#bgN^$1N%!R$mQiep]ACKU6INBATYQ+;\o?!s+APu6,W>;4Cqu)=nEX<OWf_F>+UZlEaNDk\[\+Hc,?s8_NJet!WGQ[h"9"6V
%i*4$8YoPQVg)2k^a%ftDI#n6">\iK+#L6"qr!BWML*Wc"5a'9*=]u0F'fZUnLnd9>\SV(K/OS/J]E(VOZ9E"/34bfOI&$;6>J#(*
%j.FWO[U'2mWc18/0NIcj;"mQYk+!dCC)JFJ=F22GqUDB%[=_UDD]N*CQrXh"][55'6NR<NLg/`*H(eYg5.mY][V3W&@0EY2>j7H3
%hiFn=Ahjj^$;]?S8HJiC*O0Pt)A?>J*.>*!%*Ye)Gg3UKPNCAu[>C;F*u)YRF/<ZNA[KU86nFdgMte_J.Z-OYd/&-B:6C4q_`L'7
%c_)bnK!8cAkfll&nJT'kInGHSk8VF"LaG#Y%3\2npO'kTNX!RNUC.<t5bL(b,3tU]0MT-m;mH!)dB'sEc!O)<YI2hE4=N0j]rNi=
%)$IVWjlAVsU`l_:H%9ofbXtq4Zk5*J_L9DAA>]#N2@@UE(_)3T\ZUWX^^Un]ln]5BG?@2RQ>a#dL4aAgCQ7*<FNpPdPa#S8Uqs9+
%3FjI[!V0_2"=&L(&InEh&6*NdSq'u,/oqYnZ0+a2Qi`G,#*"R<+@<f!ReQ/\4,<NdH6bt>*l?Ji2gVa'3Fss![8_NtbUAG&K(pI\
%9++nk.WksPr1'lWFp<+EECS?dd0Fef_EW'SFRu>(OuAPq.>!s45*uV+*%#82+E)_6Y:n;)9Q7BV^q>Og)>Wo*?D<fBJ<ZA;4.<E-
%9S6fT:<X!iQ)q.=ab&NM_9<T,K,HC@%6IK)=E8$^C;<f<s,@NX8lTr8XM4_[lI16,j6,mEs5W@M+'q'XEqT@`=!&Mi?_:S/J/X:@
%fnYn1+((RF>b>>M\[NsY-RW8m?M&_mqlLCD`o"des7j\XIdj,]ZeEp`DnTpNYC=7cp?>?_5J2AiJtIO3H@1-eH#[s!m6,rFDtX'9
%SY'3;5OR&3?CcQEr;,L-40.8>&&*O9FgV.lnQ2W$:TmMGn:Y#Zqr<V#p.+tOlYjO%_&pEV%`A%t=hX](D=li2q*VnZ3dWJTI<58W
%qPu\!]/Vk7VeQIt\_hb\KDFfnoZOG@(Q:g*gsg<"s7'a:nAFaRH;FOWkO8kOl@6_@fm*N6:S06V+$I!1Yq9+WD\nAkgW^2do(,(/
%3PKr_q>B5dmGa>Q?emr@0>IgAIW9]4Cr+b9:I!oo\ngC*@")ZOgt0l-`ZhUY?[_qOm,[1$jSkS*\*fdqCO@p2\j+.1L[t8gZ]cJ:
%Sc&BJFlZ1jinF!n)B>m1rI_^CH1q/PaW7#bDJD0!rio]j5QBsBqWO7n96a)/n>=3IEV[`Ll1ORP!_#&TB6`iWVe:q-2LB`nZajiS
%j3'o25G(19fmQPhlhJZTi;oRFdu1iHk=j*mV`(s7:+u#W`oYf"=%Cl/<t!$r*o5=r5.Q&iFaWbre^;uUSK9FeU.$T>nagd?H2dKu
%Zd\5Oa5md'!qOq@*I.;`-XWt3gM(gADD5:ufnGu/\'s[bdR$*7c0gLjUFHYDI<^&6m.':_$`l]Wea=TZFpj]9::8iUG!"5lVqUN;
%]:E]gD3R#]iilB/rTPL1gHE/OV9"cC<#$TTNX#JC`qm<JIuKePYs+DlqT$Yq'HYKh@Zk@FLS*pWY)7%j*.N*OIeh.j&pt_cfs3%e
%gSCh/Y%?ogo(;a@.h,9kC)kR65!-G[YUIO^B?*69U]odmO)@_,>r&4Nj5]=ccd.W;>^<Z22`7\3ZYtl<?*N^rb&i&R[8=En-T<oY
%q_#X4\b+&e@K?/+f_kP>NUZ5ola*?4:?eOO:J\/impqNdU"Q1[1LMb9Yg4c:C5LbuTA(21?]FNb@5Z($^Vd)NpV$EErV+#%LXl?u
%`/dQoE.)\HMV-CA02=1gQLJN,jQi#)lQ7[h^:Ir9Wko`]S=VCnjUY2BcV#fD:Od?SbL7^$cQZ:]s7g2KjnI*8rp&_?C<@J5c0&_`
%*f+[?Cb?[PX6<lZZsS3"o_dCKe"_gKGE;#to70oN/+$#[&+me&F?XlLVS8+_ho2LB97F<4L<PFm"Vqp`s6MA)<50:Bd)I?r"_1ZO
%]`)`"]PGVMgbmC1(rh?E%XuM:r74E#&,o<d\iRP(lMT^haVDQjGN5`0.U.$c/iZB$C+m\GF@<e$g2;fRpEq=i?_5VTDUO0\^"E.B
%G<Y*FV%7i;rlr`D]^m<(2C1F,no$Z$nfT#+0T>@Ga?(L7)]7#KLV34%DqKgR0o`ieDKp)naL:[Zn,10e^[^WpqE8e%d`ucYO1r$n
%)uhg?cN50Wr9B1i5C?A*l6W1@r:*KuZYrXbc7ZlBIrK%b,[;GD42*g]A1M#:@:ST[!p/nCM_CYd4#sg`W&"(c''=/nN<_R,An4PY
%jm;4:cMJ[ZN?l-s&RA"e8+aC]V2'474>%"Egf_^A(:'Kbm'ki#$Uge]RI&LumEB+E>GQc;bH$hjMta5"Fn4DR`RE9h0AlZgl/gU?
%om9af:Z&ds3kDiMJ\8=]mHeJhF)B>,6g_uurGA8$XF#,#,1Eo,9LjS]HN&:(U6n*S@5H.=:8,uT/qXZ2]f4UV-lRk]V/GD'+!7Q.
%W*UU-fO4>BN"=7K4uoc$rm_t25'XSM8k/ft?[Z4&Va^<lS$-XEJ.(c[mHlD@/8r8.1VE&_00@(pcLA+q]^-%[42]8-Z9aS?Kaf\E
%Kn926B6`)I??V'iLMh@igthXJid;f+!U17pGdc=Xo[qT4+!">".iDK5-DO:UVB'%JI<q*-'hcR9ciGY_J3?#:^ksH(nB_1dQ3X-I
%r*/^=JlTHL%/14QlIR+"S_e(!hd)6QR%Z\8bAi="oIqo<a+3=EMH\-iJpd>0b1>@-3u"U5L#V_3lafH&g*&FmC7C7R0bnq=1mfjF
%nEPJ]@hO$c`/moN6PWPu@gEK>7JKftn\9`I'a:Zgh^*8Z'CsZ0\>ohG-m3<seR4^qe`3e;]:^A2(5#pU*i%3pp>R-*^I_:DlX;F^
%E.Oo[Y,nN?]X*o_@0nT:qPsjN/06jY]):QGB.);Q)Qli,/rXSu)V2l[HT]O<UR-u'@C*'hc7UcBE]ERWIsuQ_r+GK#Qur/sdIHJo
%\%b/o09U7f?'^bpcY[FS/W>#4RWGiT4POn8IRG,n.o4Q2_QC;_Sabj;d$>`?STM)%Y4h4_USjI9*'>k1[bYp*O#90!S$*T=@r-":
%p(#Mh#O/^k@I,-8?JD%Ccu+L.#a;+_Jh(`nP,2K+'q.jS:CedVl7p*Am%h2ZPia$DAFN.[G$Y30AioO+QB1KA,M^R>.,#0)BI=J,
%p5\JpaR?]NGIIBS#5O",TUi@b2dMlmO<h<Y+Fb5"Ek;bNLNP+2g'"t,(9G-k+Q$IbS%MiEqW561+Fb5pj">t39.n:UQpJHu)]r&]
%q/7$:\pU]!Ea`<,PPh,Vba[Q3gTqr>ZklrW,JLZK3kdd=qsa/uM.4]th7G>Aq/%g95O^aTIotX@qY]R1acET"rr)GPMrQ+oH#(`E
%C2?+]IeEO.ZeC0<>OPGbcS(l^IoMKb0,MI<pCD1W:`#Ij>b>=EhrPlLAPgcq5<D#41q))d)nnr4h2Mr7PFirIjq`J'C]t=k=+gG6
%[\&M!s(Jm=W5>V)_?YR)I8JgMp6(NLXk)ja0!B`pZEs8/fu2nTq04Gghj_rJgZ07+HAmfr"Z#n+#KbVF$n*!3cH<MViI(8Zb(ng6
%l/,s3M;Mih[_Pu8kX+WB62l9$/:h%4[,X\CG^R_C]7UC/r?Wm`gF,h3g90216aRu*E8+.8edKugNF@>5`Q?Yk:9QQhs*/3-I!tY_
%P1A@ql_I`:Yjl5=J%4#+3.#thguLuO091OnQ#,M9D6j,Q)HMoIRshNqAt.Xhj5Xca:Gs+2!YpJgSptp+FRe^U,o%7<i1>G[\GVoJ
%j'`=e>9QN.Y1p$']eb)l[Q4\>HiNGKVr@QNqfN]aq.;rEhbXh)<Uh=KkS^]@jp=q8LPk[S&-a5(h4<GKadR'W=-#'+p\6V4XP6E8
%g_-6rQ3R7.^EMA/0$ngs!du0Wp3Z.nVcP8/QbQe@nEUg5QYaE[':s'(=69ZffB&0RlgfUJr%G3*c^1^<*o#18ia&XY%k1`BU?&41
%22nljMj'n>#aNG#B?*6I>bW'XO)Bua?S"218&rZrc_$gM/[7pl*o>DNNm>@!qKB]`X4"lXdFCRoJtLiJOHp/rrK?Es5K"]4?a]_$
%Ri:D=ak(/q9<oRuSj#<N5/$R5RLRL_h:/Au0:nb_EI+kq^UMM(ajKbl(@f<1fnG$uRk]O8?(@K>@Ld>%&@:b\>!%8S#OY)bUaBo7
%nb1M'$p2r&rOW0/;b*\-l+`Y2VqM*e-cb>l6_r`)Sf^Lpl^H:P_sl?2P`*SbJGp#kco-1-?9&^@GNRcOR9O&CGjK'\_%c7]h!WDB
%IHK`Ajak`])VA=4URf*1_!V+9*O,cHE-:gFo_B,0\N[MP!VkpD9+4)?.b2:"@+gN/B3\bkrRL#_jd-A1J32'Ng,WNoEP;TTYiC*m
%cF;h]&"iHQ@JJ^X)s!L;Vi0gca`Es*p<*[3e]G,&6h]H8L;UJu]oAcHYeAiL7ZhViS3LM[=T=K#B1miN*dU63Sm/Ld9-U&f$+R9S
%&5*R9I^QT#_@D$0)e'AF($OG]KSutYP$\:Co[$I5*WtWU,H5&)E7uDk=l3\MWHjckhd9IoqUtPNb:6cgF.:m)O0rNm,@LmX"_Li]
%HHE>EQ*]<WKqg,'p&FHPUH`*>.=]&th/Q[XN/+P;a$lbJ]fPYPOtf/74Pa#>h??@)3hAhX'Y.=$pt%+XCm#lW2k\*l+D3Wf>sZap
%^(,>jm**K-[t%1i_/8s\MfJ0b<WB,3*4JcOIMGNEeqAP>.WK@rHG%X3m,ES&CWso\$RaU.6nOe%"^-r!:lUH-CqEN'#C4)Q68`q[
%)K/#ohphmWbj*lN.:otOC;E8ARE(aWZ.%5ESZ_[rE]<n@bh\ZPdB=FGE^N\QEPXCnn<fHt\M<"C0@f)X5$<uH]!H'd>h@Y31`iG@
%4?Wb(`f`(C//f%"kM<R&^U%V?//f%9ATeiKSOI$m//lE9Z=kd-bk>0r!4GEh'I3VtIC!si`&L=K^M\_7bs]S>C`V8=le'$i>i,dK
%hUb96>PCmI285b&.Dt0tMaa]>Lf/+,B\C#/=>I>X\lbGdTm(VoDFb_Y'Z/`fS(e^<F&uLQVsj$F]t<pM"iAtghqRCB4+6SjbePGS
%juhu`Ld0`FHk/O%>HgpcKl<mYm1d:*_KY=glkI0`V$c,TQk[9T#WEhCC7^YPqDSN`?`)^&6R)$VU.*fcGn30^gY9\#O8B<J#'RCt
%2@g)c=@0:M:e^"=*R!cOeFf[ad9!DsZt!T-2YI=bb<ooKO3,8I7#g%XYMY>Zn-JSm?F*XD1LjO[Ir<U.Ia-%--4fkeQX4rjDR;ho
%l_0sD@>Vq4V7sakQO(L`_T*FFII'(I1:D=$i.Kj6gN)h#\N=juMTiE'26f&E$u<t^HMIKl7r`[#^0k/^c1SAQ0G!%'o_noIe%o*U
%(DeH3T:DFB*&"W9h0`d4j88'B2pJCan)c,>^28=<qX!OSUZ7R0PDeb!*.>Mc=3gV=D/Op:E%<c9@AX!,h=tu[rHS?mn`(6*:*4l1
%*:^l&;%%2TgN,k:(sKEZe-As(p*VM'&eCJH/ZF`?NIYAop=P!^oa?]^gN2XeF2H*YL8TE=F`R'9$ga`tS=Z9'M`NoRgk%.\cg/b#
%1=>4G`it!lI;sCT^18hbfZ)M%/kN/=\LiB_j/4dmN3gukPG8<6D9#.Za$7+>!bKkE\u@u$>[As@njga@cd/5u,Z(3W<<)HbL37V3
%c-a!.[U$RjY)f_$hGF.2VM;HCdcjh,5Q2hGE;uZWTAS-@Y>1aT0,WTqVl/.E^K`TPHZWbtm=Lo(q8nt]6p>m6URK0L`Td1B?LW;[
%WX"RbOEL"H+L41c8<i/T'T',+0\^'NfL;Ms,l?r&Sb:@UqP2%R4+9ks.,t@bs"5'U`qCNa;3l%5D7Ou$4;MLZBXoFo.#U"6_iI63
%'US"Q@u<]X172>uat=IkGB)C(@Sn26Y&dA=b2\FL=i:mor#PHt@SrF"Am6PG>qF,-ane<AU+G#.&,t'CVHB'/K@uPhs#RhMgDEkq
%BJ!TMFDZ%M\%?V1U'RsY8o,S/`V(k$)stTkHgmt1%=t&4,K$;Z2(u_D10E:UUFi_OD@?0aajo3;G?^bj*c$>J=+d's0tQ8&d4HcS
%rn&+EJgo>,\fIR#0tPNk^A%Vfa5O?H?9C*"#?iD$B-1GdHsBmdXpsdc$2k0!Z1`ZmqlLCDk&ph+nWRn;5JK=]I<k@t^\Ht.s750a
%^%d@!J+Lt?_s730h\oOfIe38;cej3;^O&^#r;fbZUAl+M0`UCHo\7-[5Q,;mIBs9]T</%e:PREKqYmBWV8(Ok\nSQ2Nr-^JY0L[p
%*PVL'hV,/^fQX)fp:OVsQ$kTUP5(AKksLk>#P>*%V>X<7i:p<]U.6TDLM"Q"rjfIE^O[I7^".Wm>l04])N:?6eHWSqeHYkf*:g;e
%7;5'"hi4bPpB=8]SO,PECZkJ0g.u^/.p)#Nak*`e+7%[XIC8rHVJZ#W]pg$Udh(gJE3m[VcX$;0f=q:[h4E/Op?F2:"YbZsa3ad.
%GiLaI^QSG:qemP"VP(ZujE'$[huEKUD>:$008YOXe2-4C_&h>][,4@E$.8c:WS;0K4u7.*CPUBG&d!2!juD^'dDsf$b8@IXT:XA9
%MD'D"@t%KTNdl[74aE;G9uYePYXb9IW<_kSDnf:QoLsJW](nO>q-*.@oBZ6&ch>0.@dVEACUUWgm(<(j?/)4aIlhFm8P/<6bW#.I
%?LETR^)ag7350acq;lt+5*aRMU5j(<pfmK_J*BTih7DbbI;+,U^%=rrnMg2Ih/_EMXBrQkF33EgT+.iFT3P]oXf<X.`fEoFF`R3G
%ajh1Ta4G]_r:&_0o<XWF45l">msPu58uthcO6aK.Ecpp$HIG!g^4HaTB6lXgn$B5jF_7OtD9s!3qpUb(1\P)$+(l%I:X2^r:Hgd&
%3idJW#?Rg!s/g^ph>H%=J+`KreTLV[YoA6WKPl;/r:Hu0*8gXPDV3;!i-kWreYiGM^M`.r]]7lHQP]\oibr3%]&''orpDH)Dh%N@
%DsGYjS,WAd?E!npiZDP*rVDfU>V8r9ja#g-ReC7;!W$0fAC_i@+`rJj^%BojJ&KH+;Q5/3;b'&qa,YW9cQ.JdK;Zt-8,?O5gjSb5
%=#tUZX;[dMmHjTG4XZ<%nWMLOh@I)f^&,Qej6XJW>IU3<\PU8/2U5BM>[Q_7"C(`pdU1UmBXWAr`KeF1pj]b'ei-:;T+5aTYJ%78
%qtf_k6BfI<97EB(1IO$m85i8tZe`cFdqr/5W6hD9l#cW?rK@-UC=5\EV>4_BD%GGOS\4$[];:_g^N>BUEq`598gcjlGiZ*$8uS5Q
%rp*&eEfqC%8F=C<Vigu*rqkpl#nT':Z5b.2oY2KBDtV:J(mr'WLjo9in#Et'H2I'1s0H$$^]*XS?i7h<FYp8Xs&s<9ENsgkjXiFZ
%7mD;sAR*k0`[Z.jH%0pGrB9NY^.KK"rBqTjr]6A=f=gUs]roUiQ8Zdh5D2j6p0R]!>1K81PPRisFYD%0U][_rB2?7Qj"edG=QnGJ
%+*)E"CXjm:of#ZXIgilnR5'Bn*9&BehF$BubSn?IXEuka6qtL.YK?0e<:p8QLN]J2hp!r%cg'<s0<]kOEdW0*[.]dZb-Jb;fW>DI
%s7c[6ld*;T]K4Yh+l6@ElTMrZr8b3YIp>1<SbhFDgU!*i>#49"OJ_6jV`1O(h)DGp==-g3dL?WdM)T"\+3.g_PIL;+Bg5!`Ot3.q
%-.DQ4>)nTL8'C?/ep[sT!l=]S'-Yb(JVI(+iY:[SOnO3[Ok$3l(Rlf+3/'b%q7_d$?8HT9N+AP'6E$N[K]Eb(.Zmt07.MC"LYBmI
%)/CN,3O;ga\S6JdDM9NNI(ioU.E:)<r@&1>l8;[.lLr]fA&02QL:W2+9hqqr]!s6e&((['\6G0C\UVW>Tt]pf1QG-TN3UYt,ns/"
%d`97S^jOKl54K@m#N8s]X50[f9XKRF+*4)*5KN;,BA,#AMDY*QV57#_H(cfL"a\6adnhM;j;^Gk,nIO!;G*Z&eq9E>imfH"$4`J)
%I/OI*=mc!Aeo[GIZF!&+>PNh^#MMo@XQmJsq]7NK;5&H-2I7ECGhZQ#mq0n14oM4Kj(YId:p.r@4ib+YBcbIq*/h)'0&\X5C7t!L
%ak%?o&*$c10O2!,3RZ/]TI[2E>LJW/m_jCi26"dcpBRea3G;?i>rN\(H`CSUKQ3CKH_`Nt^Ulo*`ljm1X&E#2Y/F2h=X:KkI!ps&
%%l'654]SX.KG');#4J*>7*7]-j[2]JbF7`^B]7!p>Tpt;c!PZ]8J@R(lKes?@)]cO,3dL6<YeeO@@R\%fFJ,n+)%GAlO8BP'T&IV
%&(U[K>62<am=1SoQE(rq:O"EFdqKk4A^-!(X"0V&Cee;)p<'+LTPHoKAb_X3S6_BN1=@'VRXO@5+3@rnnd\Ch8-]\=oi/D"[mK[t
%X:>,!N2bW)DG,qLF>U4X;O%Pi5;Zpeg.Q!EPn:`j%[?iaOa'NpCK/qgAMY0%S_=L4<9iG:M("BE'R2niA3]QqWB;pFos8bS,)]rr
%jCtoiUK-EpRPK>!>:VX:Wr_#.*m/UB'*t3*>#i(e\ofN3W1-S+fU0[):"(Zi8PI!D98>c)8r.9gXtA))X'\:slWZ_uoi1#NM7=@*
%W]MFAiiB=pR?+prVaU8F?.!tCEEL48]/J4*lZ$me)R933p:6eOgS)g:0!3lAi!5hCr27:eH`2O#'uf$aFe*-lq*6^J8RhAf9d@jS
%9WRI&=@bKO"?0@f:_hS*PNZ$@5g8m-1@D`%9ZJ37'<Or.U?WHtD$U[2P`W`9adUR\oiM_M(CLJA*D!M064!OmrR9Zi/%&<@dR\gO
%NP9;O\ug@Y.m2DM8/F2SrY1dpj>oMJ7!1"MP'H[i-QK=-o$LO!='*&q.FOjRiJnST?BU5%`\b3I6VJu_jYf%V-BPAE3MGhYFa\:<
%D8kJB<)T9F0U-RoL1]mAOKMG&ZY(m-l]2/A>ZG6h<RnF3l`^:6(HN)FE%4e^#&0QIs(`"F9X#O-nD*k;#`l?La$OSg<45'ia6U3d
%h"c)t;FmSj%qsUJD6t&*hap6`_4gF.-.S^!W\DkeX,OakTcWAPHAmiKCjN'%NEdd$\i+GHF=3B#kU&3u@Lj#OO*"7K-)ig63(%78
%`KO+uJ&!\;)^`K0>QcfUh/%Ot/AL:4<;:SSC[nL8f7eb-6/nLgbPK@%gg&(@je;htastKZ3eVgqe`A".TsCj_g095c\e46#.`-i9
%!k#W).#!C\ea!!@W2H/=LX/Oq<ia!(#(N;?0&=>9DQ+l'i;_uuDCjXU]b>GB\g/u[<[Zm-FlSf<$,fGD"t6RSMG1`*<JQQb9;8RO
%mAkP)jFR+i9b6bc\tj%+%e7A\-XPf@WA8qYb>[LJ"\MVQgE]1NXr#!XZ;u_)!:,df*>5rW1)t"N&!QVdaXb`2P8H'p=<)-(^@#.X
%&UV7K>a]sN\%_7-I0UufXF5/4FAIpHRkI!/r8g&kgD*dGm!b)"[Dca%2&6V$A#cR,r8Qu+fiL[NT<-<kT:X:"0Xmpehn5=_a&e__
%L[Hq/KYTW:KS%csNh]ad945$I_iHUN@:W(>Cq-$)+WSC_'Z!>*<`u2YXSLIX*tk),0oa'2Yt8*o_;.AS@_h)%J#F/+h/;m",[-Tc
%f!3lah<aee)-iF=a;1)A<Wqe:pjoLXotHsc6QH0f^Y4qDUqOSh#3c`ef@rB>Gus^-,2\?TXmM6W$-fM#EiIP?F,Wm!:H'1HrBWKa
%H<$LZO-])(kmNFS[IG`lY]<kaCLrMW1_GACdKno]g:<;QHfbOL0c<Q\JHQ4QeTCom+[V_'nCm(N?Y8u*.57QZ<'Q9>9Zo\f!=a_#
%_uQZ@)+rm_?8!50;]d"^e(ha9(H7LH:e-Z=P_n=r.J'AQGQkn,_oO[GASNk&S4=dM1(u0I@?JJ]b_;ggRFjo384+QrOhY1e``1R"
%&uH98D\XOr1G#@J:GQl0`.YIeTtiuKn3`c#)uKCV?G[+^ZEAS?+,S#a]":O#*t'M42`Vl6qIBZ+>f[^W51]Rmi0e-Z^=hfE&G])"
%Hm[43Y"]OaF1?<_A>m+!duAS;gSKc\[/91DARK#fPN1Q_gJ=,b4''?;8<]tlZCZL-edTPDLTqUk(N&4pN,BeFP006Zq&&r(Y00(V
%""C8l*(("P?n3jiNJ&;PS%""Q6;hZPPiZH;O!/Fp#b0(8[kHENlM^s.TUAAo,]jl4jLmil(0bk.X\#$qK&qcj;/3YkWP3Mer6Eu%
%J@o(c>.E)h7ghG79M^b1;lY^4p]WA`&Z(miP);3.mPPVW+A8mif=a\j9n<ul3XUn,>P1rqH1BJOSucjP4<5<;kdL,Z&rmG0:sT_\
%S%6[CF?nO4i@5Y`@3FOc@3N^c'CL*jMINg]-)LHY'l\+-IcF3g=o@Mdf8Ltu3XQ2:2EqPpD`;@\XTFDi4bcs0<bp#:H*(t-2o*4k
%lLc@4m_$)Wj>Grrd?,6DXrnTBl)(N`9][EV(Qa<;H@iBi7PA?j*'<.6@,I4geZ5%dX?$g.LlKR#=.A=;P]#Q%](KV?>]f(dFQ6DN
%*I&'DdgnZGqI).M#?";r<\$+?[GO<rH8CS\\eF'QOOqpE^EWq2pL>3#[%hA\duLGXV!s5UX8i!^(]Wr^^KH!Z+("mDMgtNi0C-A3
%!YiVRP,=JbW%t6]l'(s48<&>fKEA/#kG*e=AU,,&e_;;(2A@9!#IFI/:k+7cK`15Grna5rL4-D#]!(:2+*WTjU&4dbIjZ[9>J0@t
%pAD7VCd_=K`u+UWZ<;(QZh4:'rJ$E*n,AYRrS_\\[eq'gIeTK&ntEe#XU%"lO4.Ar1;s!KPi(5UXG#8e>l22tJ'3kJ!/RU\1uGs*
%]bStCDp%NcD\<<?pZC2umJ2b.9ug<1OT\\\To:ZHP7=)^fq)LGRtQ)`r3qa5T%F#@kjq$@o1<XFjPsN/\U+8AX4:"+/rmY.\QXE'
%p%7>1SbrDrikHNSSXl=#aa!pXkg/NBhd-2t]AXRO-iQ%bq01bHaaLSnqKi1t[:ZEU;VSp\YqScp;&Z-Xa'Z>BkW-cR6hbg'BVedY
%<rR'52f&F#4o'AUg<^DBkNMZQD_:Pdf)@kU^J6g&f#N3bLpQD.6N?nbK3cN11Xcj[Y..h=cFd`>hu)*>I(t,XFmmq3G5;(2X'>T$
%0"3"-=3g?`76O.Jh:D2j*i?*<=FerYlAi8X>H:%s)<QS$*SpE%pTA[[?Og=(V"<X?#*/*lP=R(nY%a]H<A*M)s20BeG5li5s*qr#
%]_F]&&,VE8lF@/<!aJo?dUVM@jo0T_huE"gNW8ToJ,/)2^AEg)s30*i5>[.#It%@U5?Hk%I.uO5q"8k2EM)I0euP@Q3KOZuc]`^>
%oCUX7f_CBnrp%IP-Gc$XM6$EpLK9^Xi;[`O)1U8o_%Np))SYb`HJN5l2GSeZs516A<J1)75Ln5C-)P8PX7-%C3g@D>%&^SK?a&m_
%Wl+)WQ2ZR$p"^?LPf>W'WtlKF7RgPUD]3OoV5/>8mD\0G(\iucU[S6Q%o0huH@C&9-h".nV<SZ6PPaG5r9L[&HUqDcXiDDT+u3km
%K-Qd@jc\O09mL]<K[QkNVkDJq96DI7=3O([;$+PirV3<$M6bW7?LIXq8?H+H4nVTQS,\9uq-SXG5B$"H?Mn^pr_"9NIspj2T7-3#
%5Do2rW>((Mq!N]X<a(s_pCG!<c*-o)+%[Y!"AsI,pQ/\ULSrHnX.Y8<De\9rl_EK)H_j3'*'HAHT!`N[q.D(YdY,N1c9Ah&=+>-?
%)tc[nik,,]bf8o_Q9ssh4TDIn'&W03ZL#[/EF,N'O05X(*Tb-!`RF"Jf?4Bnntp*eY;G8mSJtLQIfA]pLVGs^pun^8SC2'(N.!P;
%D"$0?8?4t09:DqkoY8;$4N.,bU,9kF'QVt=j\Jo9i[O>arc*A_X]qt_q4!g-nfA8$HmTB]7+OJXUW=\Ph#.p9T"O@I<@al,h>O=+
%EL_]q]\tksq1Lmk41TV4qI])"[.bLZ^MZ`IM3e^P^@T6LSK'klcHJ6qY./d0Fr/s42s&(MB.$\`Aj5_SkK>l7]k[Nb<h"Sbnb:r>
%O".pBaZC@;Vgj`=kgg!qId?%Sg[:R"^\D1%6iZr;s7G<cl8)'d+2%RPeB_+aZ[X(j*=lM.XU-'Jkm(!b,^ba(14Q-<A$Y9-qj%r<
%"0?=3^%l$^dJknI09Hd@XI:<IJ)UF&(Eb!tYJ`.3O3BG$%erq<7bX=_A,Xr9^TIOE2lFcq6l)qqb*X*.lJATE6b6OsQ:lqLh'S"+
%p=@RhHiL4*E.9&247DR(i49jU#`O-XjFtgRm*V?b!/"LQF&%3'UEb9?5XD=llNdE>@QQgL"(,))rZK-;j[4GXYq[jRWN3I';5_L&
%.Guh4g7uA`*]ji'bZJ">:>3"S'D]Hd\>cq';n)b:54,U`dR:fl1cb+B$GrCIF`uVPV1%h<AXG>HYC!'n`aReEYqj94PO+[9mK<;1
%%ssso^\UlEP'T.>s/g,JI@E?]5"pMFAKE:,'Q$U]j,^2-q*KRQIe7a`[*AWC^%Y]J/QW\jkIDf/&#?iaQT+IJNP,#>Eg4KoEJl"i
%P,^Qc+6Et-]jG@mjsMLMUSI;U_O3WWbeu8=Mp%9bdrd^K:Y3;p#UY'iH=R(,:(ug(\Y>NF9LT\-CK@`S(lAJ*6_`(bs,SRh&F0=[
%&</I(;0M[TF"aWkC>%)CO<bJCiF+qaniBOQ(SXG>"5E*lW!]bkUb)^Q$uWd%)iPa&ZqT;q,2`ooZ"tmf"C/3gPLNj!G`^+oA,qoJ
%fYrCg'h1d)aU$<A+,OFT!iaV^@,fOjY./;FaTc@O!>T*m8VZ@X_ob\39jLYRUa2=u@G%etEXH]>k&(DTLmU\u'g,Sg"R8B<OsXil
%gM')A'N+uYkt<(hJG<&KT$`**<Ak:/CWm)10k0UOZV3jK(*m%&<[inG/439R8qJK/1cIkRn[P/&VTpOO"P'p:a_AiCU8kiBd+!nR
%JXijb><JfR'Tr`'.GrQ=?;YQ)$DV(#Rj>Q2B'?6gGZ#h^;&r5p;\WaD>cE\H6_<Ou1/>kD>i_Bi9hYhk$;EjK'pDHG#f+Kj/.pqG
%Oc!fRqK7"/mJ1Gr>+pX"p@Lm/^^^DR&mm,g6pO1G+^rm_$(1h%H%K-""Uhj6*;s>U',)dg`GHrs@L7+"@*u,BL$:<pA+PA(N/P`d
%0L'bs'iS+H-@c.[Es?$&2M%tM37.<=.U*C_Cp+h%dqtd1.PA>aXJ/X0>b*JR6lVkNVB->+W<nf]R=jnU"c$D<PCI?OQYpj'75P^E
%\-NbV.O>O0+sN.$n_g.)c-d1WP)W+5i:XfZV3Y6:UY(Obl4>;,@5Ol!`).[5D2T[N>#W9n%qK]L,/FeI>%%VeDUXQ!>)&2c>tnrE
%4WD<W*7dBF/&[eT<b@#e8d#8*BRtiO``bs@-qHqt<iDr]79LcDei@FoZ`O@HO^.t.B.O=/cQn)1-p(W8a<"mtnc4pqDR.*peQ%f5
%SdGg)S8,8G#(ZkV:>*4a,6P(HOdPdLi#4R`ibD3L:o`bR)M6/Jb(W*Y)N6dU5&m<(_cbED'#.Qtr;dS37SMmc=]n_/e-QFQ1ml4J
%62qNkR>+;ts0c.+0EHiB!'m]5d?)mIdTD7b6ImEME<dgNdFBCtJ;%47*gD5Yif\/LD<W(%iZc(T#tms%U#"03OVLXmC)'Sn>#u"L
%()<LnZ3X1sm2hECR/ibV!a@##cN--q1N8%9N!e4RHobeD>K'bcMkrfoRS?0R6aDV[7G!sse3TL:N(\;Up_HNV8;9_0N('6#"=CB*
%^k?3c"LZKhS!9c:)"R_)cNUP!D3)IK,4)FH%/HG1oRE^-L]><j"q4E05LAN,s1eR[$1O$`HGTWR0J!Wl4pB6KCV(r2,kC\GW43BB
%#Fn*mI"-pPJSHLSmkB;AR-c$N2))U9]EY:u$V1F++Ll>df^>lOC.f9FS]ju#(/3OJLBlj<[n:HfDUUUg$ID1k#"3R>ie7S??6M',
%qGq_(DP!A9'9Qmr83.Do(,Q?\#0c=eQGS,^[K?kdmcTbUA.R6j&f_Xn.#B=EF-3GJi#=E/K<8+7cER^bKemIAf(5YbMUmoI@T7J-
%PGZJ`kscEZiCmhsck_3iA^ck1=nt9aE-7<_k`4kse-FMi<g"r,pqdPD?V?]a5]oK='Oh#e$kW=Q"gZ(/#7)/%.Y4NlQ2c@<+3]tS
%-g1M;_j3jGPBR93\q14Z>A:d.DD4Wl)GjuLKP?M_V`Fd&Ff6ee2)BK^7&UanTGk0"@/$)HUtZRSJ$=Lh9\knpUq<?6[%p/I'[b.S
%l%:Hi:;>ccB+p2rO>2BV#QAjo3C?Y<(1X,(:]-kpZE1hiRE`hQ_(f^.Ep8[m-/Rkh4-2J@P03,$qZDGS'Ue^q3aOAj>RG@+r+eS\
%hK7dP:/i[uOj&9Ve+F]u7%S)a*"MUq^_jk9n*^qbF<q(_^Eq'+o&')+iWc/'H$S7>-N#kTeiY2.Ca$LEI/1cpRYmAJL#%Di2$@0C
%5RlN!QiUQLh_[o]8Ch(1s!f]i)C=`F8iJ1Jn5d\ga6C]8kOJ:=]<`2uT-na#04HSAF_9+mrqUJnW^a<,J"nOdX#FBLWj,XudS0#1
%o7)Z%51^^V0]DeNGG$V9bZV?#8?5=d:qlf\M.1G"6seV/nX'_"29auO`#2-iqL:OLU_aAr^F'g*f_=i#n@6c1mnU@fq)8k7Ijp4,
%Ft/kPJN=M?0KH!//,86Xrl+\_omHbj@cbn]5Q1lZrGNh#4.+e$^WbQXJnjDQ7kFIsg1rY6EHLZ@><W!%P$8P%3qQ9ZfCrUR]tGeV
%02C-6`<m>cPj$E`\-9lY>#1@Wo5Cq9"]N?$KCJlP\:qmc>03Z32d)MHfFb]dk@PM=NW&.gmSUUi(B6>q9r@YTIiFl/KI(sX@M;ZP
%ruOW5kdnOJ4?fh%at$Ru6^Wfmn79OFXcQ*uRcA]mPJaD)p#^=lITgT:f/r[6W`5t:^>>qmX0:^2eg38^pWHJLYi/q6RJX^pKbrIf
%ejd8T@@=JgVM1Yu28#5Aa%J>src,9qkRt%q:VZ5G[YL49;:q)jIi_SC+#`!Tq1&>65QCOD0Uh[\s4].CnAN[/U&c[UB[g>gM`,0-
%03>O4GJ%p190c4u/.(O*nMJA:CAkejb3$_kI,+)<E,G6Te14"re3HF:aP,lp[(FZ/9)I-GBH@@TVqm-tDJt+KnZlc1\5dg&FYV)E
%qQ+d&r.B2sc*"fgV-^L)R;U4(f2aJ9lUIr>V-.`KA@o+1g%atn1T-L5\(\"`7o432R'C?eo?h6cHo/UMRC@A2]+s/2enN\ch.l'i
%1EU%dH[D6M<i&f5B0*HHn%/D10OGN-B"IA%UXQ4CB>=?N_q&.fqgVRn+pU21/6$7gn-N`s%4+Fu69Aa(R%;,TZ$kN`<CadAG&BAb
%._MHS%IYe;F,95,cQTa'3sSX#RnE(NFtgF&C&D<%S9aVGD<5cLg8VN1Y@c(\s6+&eYI/90\Q5nVD*f"D"@-lQ_@3U*G:U",BtSjq
%hQ!"(B$2>4=-<ddUg1soc3@)JNSMct/EI.#>j+J]oBq\k&PhJq$KUp:%?RghK;7mQ$`Gu_-gk885Fop'kuS8-='rOh<=n;X`_/1J
%Q[u')fK4JGB>pt9+`DI18KG;2Q,baH>g(-5oCm"3L!fio!2K)!GcB:uFSAbJq@D6M2jf[)'3Wa@h-/BL[G>Os8KD1JmNX0H/WQEU
%W/d@`6lO_Pe=etUR0r;*e>g0koVAFJS]d:bl:0g9?B+?43jGTl&NZ3#>4iCK9$h-TDJK^2KTs(/=,6e4T62ZESo?SH_9ZF;FhcN$
%pAll!Fd?h,8k?F3^"I5n>8aj;e=#(:fY0qcP<+$!;pmAg2&It6&3jOP0F]b20/q_V3KV5KR=]7!p$a5H@c8=1<;#bXdo2/Gd/+B-
%+8s(*2]+=CD.Cn?V^EilUrP8fg]`qf#L1jC?-BQ3kh19a;9a3]@OFnVfY+mNKn-<Ef<s&jehUVc<,@p/VaN'ZN'dC%]7SHpZX<[E
%>'DkS')eYVF?(:"]Iu"HVt2b%rg+9XA,BbGVu0i(gBbLr&AVlHD4'\_3H8]^qKA\C5DQXHgH3B7`s<(;]AEao7(qXFc1a1f@?*\[
%RcBmuHh%A$0B`#Pflmf-Hma".?3B6OaHl?kpaHV]Kke<HC[+aTLE-c\>P?8oQt:dHlr<ATFI.;5'=r3L$L,N:)%k/lgJ-&2c,MX`
%3YF1UWZ]7&9X)qqp]o(BZI5[ohLS^Pa\.JJ#2XbD$O__S#&R[8P^/'>;A7JSW-F,W+dDsISY;MZFG:/0S3P?t'<<,i"=#r<'_$&s
%7Z]8>#UL%G\u@$p,SEU>7(OH$:?/bYO0e+EZgjLT8**pd'/pI79#QaDrQ\QoTH!7ul?f-D#eeuoj/'/?[[DgU!d8hqJ'(!5&c66r
%D>!@M?#9DI4%3A4s#?skf"O@/lhZ(MA+iP5E&qK&I84XQLPkqC"8.rF7e0HB+;W<0/m(U4WQ,;4l$Ht*b-OphlKNK[W`5P$1Pbf\
%QQgq$S:aOsF!1>U*r-9AG[uZ!dd^HICglclF>9-hn\mQ0,L"mq"CnN36BkUarAYJdpd(\>H:aN.K3c:IWHA=!ZN+0PELh;@_YIQ`
%k?JD`lp2$,2mJs'3-;!'pPBQ5\'@LGoaD6,M!<Lq;le`R2X.B;kcWk)f3NqA^(NLWOCgBDDn+h".jBM"hJGIF1k%>=S.QGc1]dkt
%]mY@jT$_4drqr2]mSq$4+reZGeHq0,r9CW:roi:D=K(+iPm"8Tfa>2YifnaIJ(ArDZ=$(CSnm0.8oJ[dhn.iUf,fGqolfcPisu99
%!=]@RdDaaFe2jh7_\>@W0/h'HH=6L@CC]\c:t_+a:l)mL:QQL`c1ZY>(4Jf`Q5)IRS"RFs^ZF=9FL&5[6m8pA#Mj)!>&;7:@oh</
%C"6SiN8PN'l(ud;K(qEMCNWGJ1LucTAbAYG!BR<B;%"KnWR;MqI\Wp@>K80b%jPNJ`_q7FeqiMt1uGEX>pdG#j25!p[JCP:#(KGj
%3`Qe.ELgFibuS'kPjUC?@<)8"gi[kHj.]cX>\SDV2UEuGl<oi&n(m*W("^"@q,Rg_-o[=m^"o)%kfh?uLl[!C]"-F=N;R1V>4%s,
%7\oOkI\#q?LF;2Vh<Mdrh2"OnC?jlOCYWE:JXbN<26(R0mW:%V(E+U`o#K)gFp-pULk/SC&RNEc(^(L>-eEXIJ.YY<_A;jFFtk]#
%JGHbN#__C,V?b6BJ$a7Qpc(u$W*?n$O1pNe8Ct>BXs"f;"j'3KK(dd_a9$-3>s[F<O,D>lMV$Pll.Kmd6qJB`d>?S+lLF`<GRno2
%SrEF4.4Y7ngrZR2I9&/T(\jWjG1*MmM]Ggob^1>D_.)aHYUMX?Zj_*Sq;$:P+u%TinoGcp$_A7/XY^sA)/)DsVRE5Kpa:!,9m?*$
%N1EiICRd8p#X/AQn?Z/b[hOIR:Zqp>=Hu)d#jc(Dq7M+S)<Du[4e(:%=9jBpVa8N?V`[(B23O@5'VoJ7;DNVb3n*"OpoN_=`,'JB
%[4lVfGGRnqK(l4YBBl%**K:+_;C<./=_BEnlu)LVa>K]1lP90+hFKhgenZg97V6Pa5\\tfa-.`kZGs:hCfASMJU7T,H*bUhn3+dq
%St8>53EU2e\(W3s7_C_mf@@84<7MDL.-o+3!f!@;9UGGH&gG[GP+D"UGpLXF:9("P6S]B4XFi)/<KNK'`&_?HdBF6MXuM2+_""ad
%V#<@dhWru:lOF*LjMUL"i;EP"AHd7PgkcjsnQP>0hAX%\lZMn[m-Yb[R>6.:[!RbX?TDuPGj67Ld60In")%=;]9u:OeN3X&9/Y!)
%Z@B9COf46tq\>q]o_cin(5k/K*fU%K_.X>0H;9(LRt#8+H441`_a1^/<di5sb:tetBUB+I+S_o7H,al<Wd&!]d:uZ3D/WB*ADfp'
%+H&`&U:8Y?M8-cN#8L?W=8q^-)P,>FhhJTi%GpOHJ[$g5&,lL#q)a!&fVuS.aI[pT^E4<7mnS=E9RJ=G4)0b9HD_.ji\qZ)B,eS6
%prHhpAdD2&<IV+mJ-<'`lI?>N-nT<`AC[Ac7E\Hc[&_3BQ\teLR@S[&Rlo/342YUg^Ig^8!fi3#7lregRgGqt!T6;@`=dl>NqX.P
%#M>[ZRZ6IQHb9)V/N3WBYc=06mKmtp;P`T2X@9u4Yl#V+-Z4$eR9>;I3,[;_02Xp+]mqksHW>L66kW6t=c*Q0MeshZMPbD$8bLfs
%XJ=ci.oL0^]iHDZ(P*7PIcE);>#agJn)G:S7Br@kY\AL@,n+(aquZetYodHt*H-8%M$YdD3ndJRkV![qi>qArbTp.+CW=43q(IWB
%!OB'nI1\]Yq2D05/M,>/OaV>>gC1`lSWI>C8udk>$Q4iXR:AKNY[&d6!"nR#j4Kg]_K::Eg)3$!#2:)3>;c$dRA1A5g0g0nK6_66
%SY^&O"J*qS'l71o%dAk_35-n;N7K4XS!n"gR[io:<"</G'C;iA5RH3sTZ9g&=CorL1PE2remh?:r4e[p&,m%"l&":rg>jZ^k;UC(
%;a$NF3'MIC)IY%W&!o\X\Ie:G9:B=to?seL@Y,J@n+1]+FST\R$$Ol']*$PV!l=9M3=4rNcucB7R06o#2L:?Iip*pX4e4NWlTW&[
%H$&u5e+Y]Eh"K%I'8I%KG[RQ>6q<7(Y*@tSkm7QLp-#Ol@K(Y;Y353+-f6jt571HD&I]446m78_:j:'brnTjFCu`(j6oTbYF!8<d
%[Bu.tG-BIf6>p),n\O3JJ,fLqDH(BD(^(J@>]d",esu>E1-n38*fJqrH1IQ%3S\pIkKh&UBS>"4^`0`Hb\ZGWN0)c>>"m]rjOYi0
%dpqekqCMt,Yjj3b$q:1L49eg8DhoYG'W18nq44p^S]2'$b(N"O=L/r"mH/Jd]3kB?)TTKFfp<kW--G]cqI*n=B7drDZG\a^fF&g)
%WdVr+7.S:n^GqDD=QrRq.ncWtN"0e'IWj!OU=a^KoP2[cT4*h%ZdCqTF[r!i3NALa3b@f65\g>HCk%sFT<s=OmPOA,0D(SPV4?tO
%]G_5>o(=N=.plO4Jj1^&Mne569U/"@A\gN[j)g1lWR((c;9CSh2p712JUJQ4e_69QcS63`>N?LLSQh\NZ0gscdNA&OMmO,dGC:D:
%hB/Z$&\L>&N)%eG.I_'9SN[VMs!9VCV9Cdg?o"Y<KNW-E-S?g=SA2ktd4(Ep'c1Q;W7T@q3(VSj5]<0LHW._(=W";th'.S^9`%J1
%PQeeZRkT<!EE:`F1"9YIM`D+7goC4Hc`LJ:kCrih_8>!]HWS3_P-TJ@-p(e+31oDm-$emj]35&GDLH>^SZYqL5D>S,k?DY<j]$TQ
%cH+`jfnK@R.1DE2>Q%[Lc5b]0g%k@\I/!7hQ_""[4Nl"l>Sj^S_LWun=)OmLHo5,q3Dhh8k5]*qr(tt)SlXrI6T2;UmIPLHiMkV^
%Y@QVBrDqR"X;532G'eAnH"4R2\@]IfG#jUijf;XsH)k29g3:"mn[<gd?=);eGnF[JoS,5^4J$G1LbuQSG$E)6?U!ge(Q8MB484n"
%_fZjL<m&]P^8fkSg.+:fe(q+aib%u).J'H(?9()iL1X)f<qA.FLLIE&bM&)D)hju/Ze7?LT<)DfG@2I\(ub<YpNOH![dP\1PaoC)
%I*\p4ALCcrk40O&$\jeXDk<PoAZIGr:>Q\1\4`CYpAI\T!2o+M+J9[&4Emib8rL%F1Qene`/T(mTbZB\@2Rn;lA>Gd%NG)?IK.j2
%#T:&>XIWB-UnCSI"?OPf(q/4:`LPTU#Te,6FL!\[hJ<@TgAZQDNDDd"TAItof%t?J$Y<a`3Fl*+Ctr.hBa0WugtW4to?EJl;.5j;
%BXtN1EE#"Z%9fp=2:gOn*Hc+@?TAD0n4!6B7G>^X0hTlPjO#K'6L@Oa09p.qeh2ud>,*-7:&4K_3S1b*1b(34F3,GffQ4$5hnHjQ
%-JG*V*HgmL]m+tK#EJYbE./WbWh0692FXCX0YW*HCOoPKMfYHI;31ATjnaCT5%rHkeEW#11b&n9"0:lH;k)=>T]P1ah?[[k3"-dL
%[/?e^T70C&6)+eKqti..8eTjm>]"<:UN'*9)mpl+bs,J<O1HWR9NA"`)rIU&9P\jmk1?]rhCM@tQtPe_=h/%;QL6rZSl'EmKmeA8
%`)1/o7bt4*M.L*4(g(_PQb3:X[Lt?q2Ptu:Q63t5/ID`hpSMk.*/4p8o<l+-X*o4239o2FPT2aL?M-u-6:UpY+IkU?N8cOBbMCpU
%*r`[?R1:50EiSXF3pPDqM'\&8;/$k_i%<o.YI,?4lFoB#;-mU9#p-L^3uU0Fjl=p*Qe;Fkb<6K@f(P!;UE6M&*Zn/FmfQ(n5Pj%&
%NQR!\#6&b?^6V,U]eb?=:44:1eAGXqcQgo#"%Rdp=[396]%m"tfj$FGe=-i><;YG[*7[#R(sT5@09fko`@i,EeXA"^^*!#<CXd!B
%`lC1t\,2Fn)HE50S_j(CF^KB^?/34mkBf&3j0(*QAl@E44GSJhg4$TbBhkg5UNY8OHu$uYnt0?cDVg12?D0@9mTci*ERYtfMQ>\^
%eBWZZgd9UOlJ0h]W5_;4'DE8)UT3eS/`lJY7[;"1$[^`-a%6kBSf9Yni*UAKUY<)sGW4rT`p0bH9l&7tPFN0$UWr)Q3R`3&b+n)X
%3RmGSabT#QgVNXOc&)4@)><GZg19),hqEqf"EAE:jQE`XPB2Eale>cHh=n$`Ll_8R4!04WgW'-S[EY:/*VAB_`OjK8%;GP..K%rp
%b/9J@XWM92fS25.q\&bsrOKq:'`RLkdEeY^D].!1Z(o^5kO"A')r$S2b822mmE_abdg,e[Y.!uGqGnSAoRHbNHe*.t(=;$G3+q!<
%!T.3X4Qj'0hqf(a=57_@OnLX%TT=m-r)`X&[2o,2a/-.g'(i;c[*Og(l9j4M@DO<aC?W.=P-TBSqX$r9q.r7sBp75lS\*S%DbD#S
%cdgB\GGV]E0`l&.=_W7q1$%N_[SU.q[9(%$^#]'6meileApmn)/bcL4pA*1glpaeV@c#f.2;;(?qKD7LrJ:IhS2\`=/1f!\aKh61
%;/lImhK^V9WY*OGe/_'R\<("K2/g8nrcO8$jKPbVSM-QMn=M3BHfd;UlB]?/KT.isj`JreU?tflC?9]V;@_[hY:s"tA7YDi:Z`(:
%o>YcMrkN2@JZ!el9bJBB+W0h6Z8:E@^:*Sp"*/:dK`9>M7s+?tc7M\--R#7"@q-=Wq@AW=i!t\apbm4n:eAF?cr#Mfcbm)^;/O$5
%(&AQM>TEF%+&t<?k=.<=2p]!2?RI5Ageg.Cn't@n(6Er8?MtfBr*bYt<VMG5Et^Sa@!G*I)V$aragH)R/,PEeY/NcLW&OJ0CE5!N
%'X'+H>qWZ'Tqe>tnK'gXE]+^j.eD5)i;KWO,a4c33[u$skFR+(ReHOKaX.$B_@!cUT@$qI^PD:(7Vk;+m-C?eIH1tu+^NWBMu#!P
%YmIJFgR."&==shC9n.IV6_Fn2heeN4J=*Zc>=,s:bh'iMkM:Vg>LTe=<_.bX>Cb>Uf$&/mM`)`/<HENb(JSAhh"jkN$!&M6d'D[G
%E`6'l9j%G>+#L)3aLJZKE2Ner>A:>pT#_fV^s2e([5d.CF6[g/X:X'Ie%^^VD".m^g0M$4I;o[F:85Ap4_l9uGm(k&h?ieL-TO$[
%YV5@C',1!K;W_!7S3G/fTK0hBf!HL5Vgs@0k,#%7@E/iGpk"ugGj53SF3d:&0\5b9C[OgDMEptRM6VYKJec]uZ$U_M/oLSFN]AV[
%%:(.2`##+o8.L!PD8\SRq?Sqo?PY%F3I7BUZ^\_PER9lqr6g14$Of^9>BaH%W(19['`28mh=erV4t-L,Ou@7'h*1AjPsR:0'XDQV
%R*e:C]>&C$4&WZEC%F:eG`K]0U#8KT6m:c@-oi+SREg1oT)E/mcNt0W'(=(sQT]U;*mC2ir!QcbNLrA)*D*RsH0t2#+<&k=2d:Wm
%3:kU\aV<p$XK-Z;S$Y_ZLZV6GR*4X-91!ReR[\uJN':\A1c#FO]InqTeU1#kN)+<2d:!;iBG_+967?aBn'/BXRt;W3VW^l2RRJ;H
%2eJ6^R[4%fHd.(53JdQ7&2Gg><^s:-,Bn3&SA,WunXgosC94b!*qB:c3F1>Hh,SepnK6C]2u;?'+I+\litI83[%e:I>27n@2;PCM
%M61YYGCl-;":ZC&Kkg?+hd`3GCs-)P[_-L3.Qud\&4%"(g)id3e49j&-!fp&fjq=,IWQelQ%,"8G'FC7ZL'GcI@;Xj;>%N^Q.g[E
%7Df*/]=Kt2>2?UBO?">P>13eGP:+MhVA4"73STm6&']+/8'ka_7!f'.4`!M*H>F,>>>)8]>K<@g:^!tt&_^At=S1_&/s]0M!8:/S
%PEQVn0a:uWUcl/AL,<5Jon0W;-ac6YpNX1'<PLZeW3nIJo6)$jnMEq:D-jtiP<(nDm+GY`*?KQF?@Rq^E2P:Ki,ju@(_/gXR^fi!
%'L>%6_3C),S'f=Y&[^831j-<]Fq'F=UN&A%4N,HsL4RGlpB&6F&g7de]h*ekYLT%Y-C2cY*A7D?cJr/c*due_R.h+5]l;h3OT3Bs
%8)<\0W=)V8ml]dC3&l<>6,G9D#?1OFYiLKZoRVjd,lGK8&`aQd!QMaF4(OAIn=%8X1_q#H81Y,9]+ZnB)4o9N7DV_;;;bfT2_G)g
%S4\k;@'"^VLL>Pj,Mk+Is47`%.paN(+g*/0)iJ",FPkbD*r5#Bh/0&$\DUX6)SUMW4ZLTH#[[VV*_I$'TKW)@1:oYdIcS2d^?]G*
%5W?t%M[Bih!:c'Z)KaVS"1d3DLNc4EI?)WZYAkX*9_$&A_\P0gaPna>Y`">N#I.TV<$5^Gh#6q]C>#LJ@q-Z=Bcr-`WQum\"MNQb
%B_r&JII?)4o8O886#%te2f[52T29dPB?gU]:.120!(!,On:W("B(l)1Q(Q'#g-?'<ifEVAp7?&3L[n.@oIZY.6r1kRMb^?09Jst.
%(]%)n=iBMmMf8=eWj/bHc%I\ZpEl;]g?WaV;ij(2d&fIG0'm@F=g&;DNt+X:K!gLC28(F-VHmE9H1Zmeq_E3n4-&H]-KnuP/tR8]
%nJNL[/ngaE4,*Vg?id-g9+i^uSAO3<?_@.T1Ab""bZ"g\_hukdW*U65/YS;P&fbodkgc"4Df8s\)GEcu"NC$jSWo7#!<o]:&/<<t
%N;tfN3JRtGirZ3&@43u$.:]m0Om&;;lPSc^]p<>_Z=uZda?Ep)(agh1Q>Cm?'C:&i1b"d^UbELP^T+USZO&p2aJ!mTFR+=uoLQI:
%`uO83%:icZ!&s4NEI/@;k$;=&,2N15H[n"2l#u#X[fHmc$tq#RDUD>^2K&lLNKJ`MPh%L\B^+YOJTsFI35m1/&LU3BS(#YK:d0tn
%]US'TZe:a'GHA`R5R,sq<Z[["lNeP/:K/@h]LTO2B6<*pH6RWf()r\,_:EE'3;t=09I?(8884p4bO!#&^HJikd>1`VKT>0eAY1$Q
%Df9UdHoY.(L^/UmZ2-ULaE2qVZRU?!65*`4:p9'<cZBr#Dkdi$,OKV<[&CK9@"):DIY8H]q=Pu>/OXZAm1^npO-S,A^mp%!:>tlr
%E3+Nnb,ZN".4pC*]LqI>1C5'o.!K%_XoBHq#<QQ/1GGJ8jd8lH&YOg.J#$6m5Qb6j#UN#%\oE:CqXNu(MB@20UD<!Me;o[(Vp<q\
%-IIqK-<*2^:++9VE`5&Of?_n'*nq:]_IGC?52^_N3f(n+Sof!:^J8>C>C.%+kLYRc4B@9m85$nfnI?u6AhJnq6dss[X;sRjANgu7
%,R=t1ZkANj0U$e4'W&V\EXP%!WfRU\F=K4Eg:Vn5NlY*mOrEMS=SN1(3JApWN"T?LR+dJFifASPSGaQY(e,QRg=m\N/JiGRZ8csY
%_1Hku+-ZI#$rj_aI1r%5lQM0SF-?GKlm\-7)$db\DH/i5"?IU,'VNmfc<GIcEUq2RHs,*`+0^R)PdHt,g![Z>5#ThH.-HMkjb$ur
%;pNuNWi)0/&tOZAo0q:%iG+*FcGt/^XHq1U49dG$Mlu.\Yt>f;0'<T^eZ%XL#qB6IVjoEOQ>a^UARs/.^?Ab7&[r*cY]@JA>!A*`
%_^O^>9.Oo^G0%4,qJs;Vh8X(lZX?C-1",Sk3R5t5]t3]*,T8!jM8h?RLcImMB/.d?7Ur1(X`>dEUFJAKeT2j9o\7BjW!Y>>IhZ2]
%mpnZTM(2jtW]-iIiQ7q'L_@1"&)@HNZ)p,a7ouLkP<pf,r)LEM%TN[DH1gqk$&N))+k6qqo:+UB4)^cB%.Wk/b52]MqE_bOVq=79
%e?hR.pM:]:`I!Qlip!o4cf@hA-Y*_aHoGbs8T]DQBWS`l5b&tP>Y:Vq1(mEsHF#:`E7nMn_I\4.GA6V@6JX%@],MlujV5l!UHF,B
%\-^J7iOfjX6&.ELV9hQ6KK`2TQ^7+dp)a&m94)]"SkqaTb3>JWi%9AC"7n@?+CqL`f?3<.^BQGSd)JU!/-Z+LMDuGK&88BPNK00.
%r@hEhL^O(X@S#T?,O@b40QSeJ*mIcF(2AbI`>=AH$GYUX<198mkNMc30i*`Y]LHcq.e>j?XVm]j]oRllBq;I"8lSe*PBicI/`Ciq
%)taWD',0hCgPpN6>Fd49`OR*;FpE"BBQ5=Z;%rOAY9L>55:$%[h3dO_O;;-3RMKUW[l))Ibu_WcH%!$Wc(iu&/`0-7juQKS(bJM(
%p47NS\o)H)\M,64`lDc:,bCe:&c[+`@WFY6I=#Z,i7k\!*#s2bO5gb*_MAj>4TPDsk&!3V.MmQG;j?YA<34%,d\DoR,79\;=DX<\
%)A._P+=AhlpC,)5>e+b!R8/i6!)&42GYcg3U4cp:/keJ%+q<k2d^Z%1[73@07hTo;#ul#?Sjrd?3&`;l<S)B)TfPB&S[Lnd)%uE<
%g@=]^TUhAW<=*/$4sR^!*uZZ^o#%.'f5Gad+VRU$?qsUO3UqsK;5J62U,UK=I`daK'jlk<2(`b=-J'3Mq:lF=hLna08G$N'cfg?a
%fSFn7_hm6kj,:Ii6rAsId@8sc,UWVOkonP0DB43rS?OBELPq5MYV`l"HFSO$2g"\/IOW1M9gj-N85D['<"]WU%!m1P@A8XSUj])E
%CZf!>CImp5Q,Z92dNe[D)=lM#gt7,kdFns8s7d47&pcF.F:o=p3oQ\Z,n5c:S/uopA-qj*TFXB.1:H[SPe/1\-Eb:*i+pYBH^)g>
%,"FS.X0U+ZJ]Ue(&N>=VZ[1E*]u\9/Cn71_(\!eROECjJS)]P^qQ.p,nS]%NP4qhA(Od8[eB0llB$gD,pr^7F2')j#k.*>jT&RDs
%CKEhPo7CufirQ"%c0[C==ZP<"/+XC0c=']7\`R<"FWq,Ao0sAMR5.TM?I7R,Wm2*d12k*X)80=i2"8&;<DYW-_LL'Z8Pb\_U[PE@
%-UJb/oo`5VQd%ptQZ7^lEY-(i%_\T1K0jM%7=V0)"DE6\PIf[FORUfXU]`NEJhg#\#kb?!h60Fo)V4_<#LLnr=JJ/?lXNE-:5dea
%K`$'4l=Z0&0@,M-W9Wu]2^ergd"[emIFBBP*7.YTKI:afj%T-_:p)jf8f*C?ojCAD#bZjWOXIb&*`/#qs1$g/$ISSgVb/lAh03Z?
%]$`k8#./%*HUD+A!p=R84bq"U1:8fFQl(U@1+i1<acT#tQ-mXfb18b6A1OG$JUrNH*2mQ&k%[FUZ?KZn.$@"I6Re2;]!\4GaWdCo
%Me!Dl:Q]JG7G%'@A61p#\0hH36t^<CPF!@-!r2:H3Xh;u[<I_,]Kik_r1^jn]btQ^hM?OAI1ce"hkIapU^apa0<+D#?r>e%Di(AL
%85W]3P!u!3H-mBPG>*\?=5eojl#+6hpi8!5%T_#Ep]^Lg^(VS\\;WTC6"l,C)%4VLoL.4Ag-?fU*bh5CP9Whti_Lo"Q7g8gEF\^Q
%B8F-DmR3TH-.`mUnXsUPL#1dP,i+^r(VR/!o]ALr;lkD?(IV>chRDd:Q,hn:lZ]=ENit[3cW?0#lhTsJTmXSOhp=IS`S4:;I:HJC
%h^r[,?4)D2r#S&6E7V=[dmUksEbgB-]L?6@"`VZ<+5r:6)(1?_^*'5\lu)(Lk^\^uF/,c(ZP1O8Am!aBF]>VQB=.T*k8D6?G'CY<
%?L3G#O]TChI>TZNgKH;A;>h$</^AL/;>k'Mpc>nUi$2Ta2T"<"S;o)2'6BkBc7L\tL)'T"@q/m"pK`$Khp%4\!k?RT@__($H-iK7
%p,e!*eb@\"@_ZYW@H5IPpo(%,+'ZCek""ue6XG'I)tg"^TR^s_n`c6+mYa@V&DVCW&P2#$5IqpGA!LCBZ`]TLh:D_0<1AN`hfZ\c
%NOfR:SPSWIps-]\UF/)%Gd83X#@c3q,UqeGFC.0I@#99[lRR9bM<Es5\NW3P/+rL[6&)Y@4brjG?BBoKcD4t<QVWL=cqMZJGrEVE
%YH<%Ccfhk-qKuF!#S[lLf<XY-(h+Rj+j6a,Ob(u=H!MS.::r/T9UiC,0dg>DGn@^CWl@0@jQ>!=MD']_fG?B`Sth+X$i>OUqRi^%
%:^[)Oia]DK0Z:iBTW13Dctca;I1bY6_^t-^'qN5oll.M2S[bmWa>XDLkQ)(g4GJJge`W+t_^OjZWp0s+2M2b<"aS]pMW4+4qgtjE
%gf*"%(%tcGUSk-<8aRO)@:)i2*uD7$<af@^%^U-K:^d.eN`V!AfG?@l4#Ae4_S2[+jAW18<7i!deJD^\oi'KZ"D[#,PgJCtqiW!9
%%p7KI#DIgq1o*PZMeS<>TWg'QdKV/e$``KuNpqd+fG@N;2\Q%=i#m`%5l^s9<X(/Bit15j[Y.\_oO$5eA64iik.ac1i534$W]jcN
%cS,_'Jp,7!nJGG<+2;3qW\:(7)2aQ0ofj#nq>D*&"YFH,ItN6N_ERFY,(.=kLa$!*Nu2hZqeISDSPsNGe5"dTT#iJ!&8Cm0Y;iuR
%[ik)R^CZT=fWY&rIk)`:'u-Q`F5=AU?d<N'W%)tcXc7j(J0LSoo9MkASWi(G,^I0YBt\6L>J30+reXJeCDHWJBoA?ZG^;ij3>(.:
%#>Kj3Vq5K`'6cOP+M0aR[f!R!Df/L:YZ[F8rur`\ma1Ads4m!->2NJDOcTMgO)b[$pn,_g;=FN2/sQcjr%DVFFMEn:NVKY2#_)e,
%?(<P*n\:`)9![fL<0.&>g,&<u5QC7Pr8W9`n$[$!%33NSf.OuJT>'POc#GC&EKcjo'k<B8p'++g[g<u([k]aY9j_R[A")b%Wp/iQ
%Y%bgU<]VsS<UO0i>"F_J9S=?YDN*U`:Qem`_BgBS;%ZR/OsWY4@oNB,-G0[D3ib3eJ^N'=B9.PkB;&L&!d^;7.tEp6pGlBV'gPET
%6lqoJ:/Z$jKpZSHi,gEm%qslf?\2bO^^/>U&5[V+<k:48L[bl;M#E(h:of#jr-9-T4e[.'f,Gp4!5$Q?MF^h<!qT,1fR+3GKOtI\
%-c@A#C^-7A>bGkE[b(,k]"n:u0Bak$)F@kks'"TY],qYe;#n!%k^naMO#t4&`sE6Gj'FWcN;JaR$8Ia1:lIfW["Nr6I:*ncN""_b
%"89`@P_IG[`5_uNnme,TqYZ?Y0hOhK7HtMC3L^/ar-14AIe:>Nk6hj!.o]1@m[lX93'Ro7h*:5D,Q-f@2#J3imU$l2I=QPAI(j7^
%dsleN;9uk(,6L%NR)7kn1Y&%oruqN9.Gk"B@8A#"hhW<Uc!Rsmo'Tk$3`!V-hlGtjWPgRZmV<Boa%pCLD-5?&G@*MZ*q]7N?/kV?
%,GKfmms$O>U3V9P)a["1!K(m&SEO?3TRm"k7s+H8mIX\4cX%3Bb_/YsID7a)hntM5e,G6hT\R@Or-4d4O=E5+kH.F)#W4CO(K*7:
%<ENu1F(qT`X:UU\o$`N(Uj'<nZm=uU&aT'5Xc_Q<]4AY=FjaHnW'[N)G,XP7_ka?F]hVp*2*t=#iC7=meW3\5Q-s.6A.X(qjT\NB
%Za!)?i=3!Yp*TFMa0jBZfA5;Z^JudHWfGG\nJJ.pJDcOSD@="&kQ-cLXq4ragQU>'8esR2l:pH8Bas#U9IjA$40c!<C4bq_gOr[U
%\%Qfgr"'7*q;&+2=EXA>\2JPS^=%Cte)8^+0rm+C^+6rj;lcZ^VMHW?lp7*=LSlEeE:&l3ePhmf)8!OAjs+*eVs+s)5Akk6Gp?R2
%<-UuBqtk))$lr=r$aX8ALt^LkIQDQ=EH/[7@s?nnO/(g&*'WZ=f^4B2<2KrfVs/ArF)PJ_e'1;1a;q>?Q$JoLIBq+1GK[^pbF.V&
%+8(^6\XCNOpaZ7m7$\8I+F.o$3+Q!*CdL-55)!#!4[tCA26M6#`rH%qak1IOW5c9DeC-YIWGb`dQbt!,^!#nB9;RQPGAG7hgNhtG
%<>,-k]9;p]Z]Nbm<A"O`5RL;nM]3!!+jq-qh3+fu@Gs/&57bUkmg2gfKa@^9^Xt)GJgTDUSadaK'pE6BN[/l#D'cd-W[F/H:k*#$
%"N?U^>N'WQ"=DERE#6bEXfq#ccX.3fCjP*VaV)&a9=7UH-V_+06.K+3K%iieo!egZ>D^P`@Zj$@:mDKI5;eAB+H@rP9UGqE3$&[\
%l:D(N5:7?RCB2hZJORg434R`Sh_ZQu^oZc'4g<lY?)>0`=g.$=%31kG?!IBDPMk4NVS4W]<kH@gd^-`YKpWRD+<NU;fF/oSrD7O*
%JH"SCW@klBLo6MmEW5o5U560XFS8^$g.H=r/itVE_+h[N9cu_<'=uI\;Gm?>[3O8GIRC[0\i`Y^\l)9F6Ol7(^tQO/q^Y[^TMc7Z
%,=m/gOuN<5I.c8'nR8g'!TLiZlsO,NOk6tZhdk]F98p4?!d?UX!TnMT[e`1%23jTk8f*[r`=Q?g(NnPL&l[UBXmdNc"@\0=O=FZ2
%@sghTV;@t=G"gD0?"3^6?jtNjpWQAH[-2.q@ja1o(<Ic-hNso4?"WQ9k<RDRWejUs/`m0m-.66t5Z97U?b$P7>#,lSW5kCmTg<#B
%oMLd=Zl[W<SuG?qHRBD1O6AIO;jSb!S73k)6RO?T9NmM@3/+>?Uj?].37TKu8Rg+o7%8*]<DB](8GgbAT_;&cP*iTt0o77u;3I<R
%*\m'g0=iEKSP?#+?2hkOX\;8]ahqKT=CF<X`tXR\H`V03m_XqA4B?,%S"7=hYsMeQlsKEf@>H9om)KH3L$e_dXDl+-)r+fl=J8fu
%rFM$)"rgB1;5H_6eMNg"[p#VTn1`t+<rG4,a@iSjf+*Eg;u1h00KMYNOjJ_EGSn!$koo+Qm1/A]X$dI>`ntMgPQq_o?TT6!;=?M1
%)2:@Q\aKb6K<0@m[6sqP@%[`83V3KfFu[oG6!=&SaKPqLl3@ip?TT5FpjGs(_8?:`SOjncN%P*@_[PM?_rrk,KZUIg%j!(#pDiP9
%6P!Dn<9s`$F<;#7\j_9<RP3)a9Cq(MoPOm02uPj`(m[b4?9:i$7ZciM_eA_03:/cp_8?uU'FnB1+8X^M83l!7?On2I6OCitlL2R,
%+=OB<O$<2.n_dgWd5d-j&#618XPj'8%j"2Q.Ib1YU%SBB@1P7ZY8p+$%<p;8pY]KPCPP)l/S0h678gaH,d'7I3;'/Wp)I8X7IY)J
%l(pYdK87jO6&uu8mt6Ar;!)7Z+T6qJd82#[8^]_G)#`/se4F)[P)F))CPPT\%H5.@kgp;]s(:0o&(?ib%B]W!J*eqp9T+8eE'R>b
%l%=bJhC0HB_8GKg%[4N70b5>&I&F4+#7nLEr7;[<'ZQqun1Z9cQL5BY6k:>.]A5<f0HN?8IdJi7`D'[=+8OXL#ku^;5S"p5]5FY;
%#7l7%OhN'FOZmQ#HQG<9[h^paK81%8`6k'*1V2oX%n#@7<hbVF!&O+sLP]o*+8ismkV/B*fF79-@8Ii2l\l"H[D!\EN:u\A7-26,
%4H0"%He>[^#7lHKQ8IPU`Iiq;IEqp94A;'83:MQU4VjgU[6o/*!?XFG2E1-56S8COYQk]6MfdcRg]8KZN'?djOZ(R=LYdm`j-fjM
%2SKD,UJE4+@]hO[r8;#UCPO/$Y+`ZR4LF8c>bl/+Yc#7h,p/d1DF8OMbCM^c89-NPlIL=.m?#g5IMQ\]qiCB`+W4*Hl(]__(,t<^
%]$fR@Y[ts[@nljMg/G0=i^V!2<AeEe%m:EgI])"f3q$3J1V;>N+,AlCrq\up?*L=Z4+=EFP7sf4g&0$SQ6NfqG;6LL[=3%c>g,qr
%I*PE&IVfGHDhf9A?f.>Vp9*s9_l'F*EF\7F1jO'4FfKn=h#,OLSFU,/Pco.T\TV$0hbp%(:HpJ_?I'+gX7u5NU&&ml?2Zd4[5"Ej
%IuU%l@N>5SZ+bVAXKG8V^)lsNM=u6_43V"OY"ao!dp(PEcQ>511Z.Y25Et;9FclBa8kiA?cHe,L\[dLgXRu4/3O^P8XUF78]hP3u
%o4;"UdO%cEm3ctdh(c'oD`VA=g2fc4rc.;S-(`Gbj;4t>o"I,!(Z>87[l\e.I"BT`$U-iLe@R?hmQ[-Z0./=cR:e*qDt(<^mjE*a
%G%5rM2[EcD&Qj!rZJCheZ]T$OT<:jfO2ikkcWA.+m6'g]UnkYOO4@UDY?9YmCR;)6^ZShD+XY,J1oN_r]2:aVT+K#CYL%IJoNLi<
%*ui&UNXK_aerE*RmE%Kk$6h).)6;KbbcrM`G0A&(k?1A)<N_4J]N79QB@jQ_3V0h__Op[ugbG$DqGYZlX_soa3OSZ\PWSa%JN2=G
%8+++hZ:A;`ND>CQ+$*G*hE7kmm:Y1\_Mun(IV30ZlKWAlFEtQZT4$p(oc+_^ca,%8Wd<.&,>^_@4,oX<O'O*+o4i0crZk6;oGJ49
%2rIJ[Q3rgA$LP4Yc]reP',95_2Z-_!ffq"Mb9cDg!2/)`>]G2o]s[G'p<J[X5P>"h:N^T1^9bO-]+sLe3W=s8\JOFe"oaDb^$:!-
%pC5S$]K+l+glJm%^Tb`:E0bFSR!uJ*+3sIb]IC&0(HHdE;VW=#(G)J'>hiX6bP7WA8]\"A#r)K`WcZKPXcaKS4O=R=A'S:<4Pj5F
%RGiMDP#99s3U/qfq!dIG+Ph75`=]\?rY8Y?)-hIS*!dC:Q=e-X1UMd$raprZ!JW%Z9@g%#7l_JWhDAbQWVS=?Zgb,_O#H=DR)-<Z
%\0Q)%_4"i[r$pTP9_[[+T+kfI4?I08!I5iu+LR,m`PTX6jO-uc?/KF7S8U6e:cXokk)\2No&IrT4_a'?\n:EP\a7a'f[-`p=um8f
%oDZD?"Vm]ggaBJ"1'YO]aUJ&G)80:J:Or5H=nZS$<o-==F!KLj0CR78H//>a!e<3E].=Nfd4cXY@+UEVM6M9F'R^5%2l>9+b'7@6
%g5M)Mj@n_S7^uR,^N`[n7_)NieND#j(M-;9HSW\-e8?([q9&9hi`fpXU:a`/IeAp<DdAu;c7]!,dW;c<m4\&Fg&7&R.3d#Rd&M.<
%CpuLHR^ni1hdgI(F)8!I1NKCgh0s7nMa&RMkNg<,f?2+i[/e?8]iTb&:8Wk?jiQ5pAEi49bB2Pgb5s*]0jd0oYHo`d7[23d:6$sA
%2Y>DIc-F>mlC2CEY0YBuNip(Fmmbp[[P:X)FC!1!NNQuN>GE,VeRe*INijsM09*,!*?:'ASp.CKhAg_N3QZk@9Ra,!Yj"6]3GUWN
%+RH3_Q*1AR&Wdu4VHkA18A6OsH2YT)/A-"AHNkuG5;E(%J&4E/boDq>;sW+`U2RE4kGc=gW%VMimcL&#UtRrp4uA5ZnYOZOODPJ4
%E4Es@cM7^[\:A"0OO1')N'iBpQ98>VRA1Y+ea.j9=D<5W%@^j:F]H33/j+Pu]^g0V\h=?SoA3Z$F@C!2m>-U$H\GSaJ%&k@Bcn`1
%o;ifsDt)p"l\-ec^GbDQNA:iAOU5&)q"EDj$JUct"NDW_RUooFg?aJ.Z)uM9K;?3SVD$dJ+.+#%RYEJC05k_l*KD/gT8SoXiaQo/
%3knV)g8pmKs#_)FiEPQJClYLY7[;6ge(;J8mb%6]pD`n53Mh-1#4LoE:K-$"*TZJAJ/f/RIGY9LebJq9@d32r;(`P)2pMdAGGX]e
%R^i@)Ol([tME@H<::XIC2_?XYMD]p2g-ltSd(3M61WPZ=3n>b)eSa8'c7cB*TPUTB[Qc[q^9d;)fCnHXWD]/,Q#9r!hoQLa@>o,:
%)c&<Z$i%G^hXsF&%a?D]7_b+D\_QaUq6>9"XtT0kS@WKr>qfBYX5B+DT52Cu:&u;HDT'-c_n(Yur5cS&cLfB6ir1Cb]NX(fR%?K5
%2tYhPl==gHa;mEikbYu_ia$P>CZT'd]I87U^cJX<K6R\jZFJB8T(c#ph5QpM]fG1sN\/X]4^OODd:lnQ;7\9-3=aRPk4>\kC?<S2
%qW63ahQ+BIghu#6+6U,R2NHX[pAkfIGk'rgkEM@>PJ*S<$Ek,&,-^7i8V6=>6FcE-oSIXDnCb:r"PM='n`=F9B^$3I8?r"TQB(%W
%Rfi>MO;eTA[!I"mSLqG,)eAV/a#BQb13IkfTt?8Jp0HA*#I/T`^Rjnsm;6[?feuCLin7p8g0Q^2`lib/rNQ%smUTgMX+#>B#@2ca
%lhO<ASQ=tEd=O*hUqk@05)]WHj40NFd)K7C_WJm<j0"cuV`Lf1D?%I"rISIF+Apb:cqt1*@=2hpEbg[+_2QFf;VsjrX+k'B((Pq5
%Ts8"TK@hg@pq;pCYJc83nQ)_ISRt[$ejoKC!JdU]I&JDbq[6)c=@u5DmSjRK@1oY%K\V`oRR4$&m;rnh%8LVi=`G-OF866'G4_qX
%r^-^I"/odD%WBVYge2N*s4PWA9BAP7kKN:iP[1dLSRiW.;u7Eeh1I?rd(%?G+'bFLk@`AFf6hbX=Eqp4eEX*fKuV4Tr`m8<CWnTq
%*Ju2`S>@ZXj-OoUfg,^M2@F>1_T]M5#b<.dphq2oYMY\)Wqs)B^@Z3P\FW)BKcQR&"ZNu^Erpu$mQT^h-Q6j+)=C2uWl'Q4TkE2/
%UL.'R0DALj?m!\#V'kZo4ct`/E]Y$tlA0lQ>j.WQQcIePV7ZKB@d`lf?21tYGYUB$@obR/JH8He"@a+0])!648Tbs\PJj7j\C7,W
%7ft4]cA/4HP1pX!eEVkg"O`C6.%eGqo:#c>MPM0Hn^c.0gV:O4cd"`(>E8;5h'^Hogo-IipQ$Dijd8^\MO'C9P<?I*NO<&n]B;-%
%Y;^iLN&P1#IQ:atPu*NlDRl;B<DuuAg%i\??2RXBc@<7):i!kU-_j>5:6)V9:Hsj*r8g;&oZcEsS6ac)DuLZ'K;&?/klJ_@W))`C
%]duE2'V@9uBKMt>J`JIaSk:*jNN`6nN.6/;6Ie!Ws5j*sU[@mt3cr1l9Yd)_fNaFQLD[Ne8rI%99)7M7pd$!dG#J5ufc!6<qAJel
%ni3jb7?j*=jecZG7aT9QXA>90m5Z;I-_NJqZo!0]kGU)Y+G+/Y8kUI4Ot^#GR?hsF5tklhg&N<D$'X%VE:J=1\Ik08]g2cb2kmOE
%';X(,k0;l)HqRT!GW@c8(Y@eKP%jO4`Mqj6\U2)rXZ[]-s#b3OQ.kuY7n[XWV,84Zr@Si:AkR1?HqhB?1KYK@7PL>DNbreF0r"2>
%T+OIn>=m*G2Ek'MZU=>[dp(HLloNrgCs=5#Nm0N#&))?LVg-oL]\@,:O,Tu^c0[e&TCbjHn7@):qr;D.nhg@BaDI#g(E?3aqi.LJ
%O8m:0i9UaL4E___oP]KJbD9*IDW+m9YPL4!Xj.Jis-g:bq:,/LY&a2pGqP"UDEqBGLLIQte(M?mo8?rdM8GVOWVi-;:Q)'FiS-V+
%1GrI:AUhoL-#tq!F$Wp?*oo/Xrrna'_>UCAPRD(.P1H)bQ>>2S^Ce*!"VZ4mA!<Z(be1>,Ci]0"@@6"iEqFsc!:f!:*507(U4WQP
%0r)*!CiV9mD;\-K?8*]RV:fB0+P'hfMbMQ?8cg[SS?m%5,\kNcR.9*2D"5:<0PA)`s/J<Yk"fmubFNi>[c^]:9!>\XpG0jO7IJRo
%hN_ji8qlkL`Pj@8NI>Nu#<%)[:5mktFSkt2pl!VfPIJsm[g$TjY2"CcLKPFbQ\u..2nY20WA_rVn,kPk4$QseB+0MpmK@3s>We=M
%=+6[&Aj/.rXD!t:[iXB/FP^W2[`[4'eb1^YLWRFbRhUS$hUU.lO$^j?dkabE;an%Y=0iVqg?6WJ71RKNO.3h$(fBhBr3XGA9:r+]
%28Dt,ks6P`M3mKDLH*g]r8P`nWme>e2qQ_p^;SIlgRC,d>`CrG4FVS]cD.\!"Tu<l)@md$hcUpVbHRsfISAIk9eTV:A+"G`&q$"6
%2A4SP%LEflfd@OO+?V&t(CrL#&+7/?H3]8bU"DAHW[I4Z,^fVOEff4+:i"pJ$Uj#@?9ajL[d[*r47[@@@`N(o2JSQ8()mRGp'esY
%R^h+W\6sAicb[NmI;\]/706q+f<e[Q3\0Md*u5onDir)XbL&Tm0ha;^a(?s;STpaHl2b9i=q;%%-t?Zg!FY@B3<2OYLX;4%TSH1Q
%S.X!]Y.em`<(=@Z#$D4-Q8X79p5FYj=)"R8LhdJ]0L,j(#$HaEDLUXu)<mhFY;mF/_]d@u[)pP.K5$o>qr.-\Si1orfSUdi##Ch=
%9nLJDLHKi!8U"^6Vp,bQ\/N[Ur%MCH%,[2T`K,`_@!9Bt!,9nJ>$n'_SWl$h"@?M+j;ENn-lqL`S\fR?m+HY8YMnk0j-$'352UJE
%HZSZEQ]TW>E&6MfKW1(q'1$>(WHH4WZqr4q8rK-.O<@6)&0IbA[1J\QU'4?rV9OZj>2i+!;ps?uin]Fp6g?dY@EbU3JsO-]p;:jj
%Zd25<U`ck:P9OM&Vp/a_dA*LM'9Hk&&=X\*8X!(RrDc;(FF2kOb.OrohI:Tp('AU3g%hD2H)cD2\ft1sBZFr!#:f*Ph&NJ@iee#b
%O%uh>ERV(+3bsTDDf;[u\mlHtIZ1S,6rk]`9]o6!;@D>G1MqR:<Q3*RXFn@j\N2/8F)`,Cbj>T"c[@+cIeNABYtGgB6=/I[h!ua@
%BVUbX<fuGpD0"74\h_<S_3MI2()G[Y4N1#VH1q\lI-GL#)s0\5^3d)9"'[:^DAth4<ahTsJf>U9Sq%\j6,_R'Z-oQIcED.1kcIbq
%f:;$HS_OjVkI3I1KUu:G=teq4U:#dJ#?:B1.D@@7TN??#V[/"OZF5CTFs:,)34Y-=j)K\>[k<_=i@$me4(4D>/h"4?k?O^_1paX)
%j;\f(DUrlIZQ$q<5PL(_44uFa7$#Fq]Y&g\eLV>P00.aNB"#n+klLHB3S@bZTO?DIm2h<i\*e0o[uI`_nQP2NoiT!eLi.X>FT;<D
%DO8@,a>PWB/)2n<CV!GXI)Y;G.\7?9e#r6dpAJ^p#697fT>=<t>o.`S[>I]V,WhV4#,AQtWPP49(<FN4WYrOqgV:E:S53hRE\i$)
%*h6us>FGMcpb?Y@`Q'X^.3[7:UkSZu6ttMJH!"Dd0$!.bqM_?:cOp'9$aq>T+7$X$l\;oLofhQ!.Sn>0+^XWrT:7?QipT>!PJm2W
%GZ1h@EBF<KN)%MkQT'WXS2!qpQOYVW9-/4?<MB9%W):7-4MJK+KI)bim!=K/1/2A$6r[pH%Aca^@\$A]R_pT'UqMVbe=7IMRH=e2
%2&&oe3Q*\ts*]%N2c8*7-"j0^RLs+0OE7:5AFcYUokOB&?$iV01@la*/WK[ohq/O[MoKP=goa](X8hB!RkNZkeODL(R)s9:'m=a/
%[9.ik^/d$j#j'/SNs0=]<ZmO>OMhf@A>5joe(jfP*]mZ,'RpHKX8_1p)0pQ4PQ*>K#1'`Dfcf&HHgMj&r,UK$n&7(F)CoD9KEI(p
%1$H%^/l[1uIGQS04I)E4Pq9T=9_hdBO9Ml"o"6^73o"#u1HVYWp@;4dgq6W>9C9>qTm0eU3A7RPXLo*5G]-Q<Wi($C2=XqMT;JF<
%?V_,\*fR8XrnJK!X1&W/T;$K'C"I7o$!+sN/:;%5Em%fu=np2J/!)f6bJImm=MkR'ZLF7sQ3AsabJImmYZU`U/.;=Zm"4sa7e\Kt
%oJT/aa<57#:Xi3Ur5I4kgRG8A?YjS`@;a'!f\0^<GLN16Z*hDKF0?"gg.6UlJ:/_5kcFp_gt[1!:)?Nf_[Z-ECsPpRIMFK#o1%\6
%?5A54oi'MXP-[eS>@pG?Q_E<<.c#8t,,OONc_j;,XZt)?6e5E$PU0),91NU\XZ^Q*-I;>iPIOSfbCjPGoQ\drU)hr^1,RK#$hr'Q
%_sjS@,!]O3XlH%3F!@]&PrY<lIG_jo/obg<F*(7s5"Cg3Rn(E!LE,0J\Xi27>fXB;F^+@(p651dHdcM^M=X'oago#rehV=S'.o+F
%=4bPD_,0.U(WfX^E>T#KjnK48=p:V0]A+*HrAK`=QAr4+CTm5HNlZt^4'2b\X2>*g'!<g([2*a0%N0Us[T:qiSHi]+$X@#MaF_&f
%?Csr4Wt\A.r"Z%$Br>aPH`g^crr.6-nKM`f/SpA,B8`*>kEAeVB#IX64ZQk"q-_D]`n*i<;<kN6,Q!L!7n6Y4[d9d=k,e#&[PM)>
%:O%o2K^,M)pVFAR52L6de>>D'COs$WgWerTFLSV":G2SW_'UbZj"@TP,H2+]FJ-htCVK7"U?&rPfE1BDlV@QK003d;$qrZSZHc4I
%bJmR.p[erVbO0eVR.cik256-c\L:Y6.H\m&A!#/$MIR)2iLJqin=qR"gIS!$AK(r0gK.&bZgj,]nDF=#VMR=USK6mTYZCO6njf(_
%T'gm4S^<kk83?IB.="T@TAV+VkXaI=]5a9,,T]8c!$hRu5t/YX$%e9>!-bS01YX8c#JaRm>M'hYZ(,6.6JglNR)rcBS34SREmafE
%,S7SLr1K5bP%=qf_@R@\J750[bg.Qro+37@B67]0XZmXi&2s.O+Y])Ia?2so0MEl'cU.O`EX?p-:&H+_i6V@h+-a.p"Wr7,._eX^
%6VN#)++s?P7cu':L,S2b=_DhlYMeZ3T6:$j2rpfFX'b[$o(JPG7VP`casRri*2WI>/.BTTH&bL)R(df0T8lO2^@B)P#$m$l!'-:0
%@NeYG8ba_d0?:ET[^'pMQt%i(X/bLe+9`)pL:!btOQQG1"K/&l5tO_lKp%-[8Or0(Pf2Vhc!FmP>4Tk0U]Q@BF)Y:64*1i^mrkn+
%f#m/kMmoN@\=sg9gXZkD$^J3W?^+IQL?"Yn8)\>Lh=bTP\Jq[j=aF1T[XpM0eV<1>?@OLsO5$l0p.^XmhnJQldtOMVnlEO@*+_VF
%K(Z^jfG$IV7".&ml2''7]*XXJ>'57ErH[;"Z7C)I6@fHVm-N\>h7_X1T;p4[k.W6;3*4o'nQ4Mk?\luB\!HVJi`r5T[dqoC:>gT.
%0Y[/Hgl'@MY2\%3W,mIW+b+tp3+G^Vl];MRTbIL9=s1<.%Ug=a/@`3lmE91/Mlo//?>FAr.ZV]*)a)QPDUKS8NjaMnC]M-gJR<DE
%P\7j&SHmL1CE-M17/E$gVsEj`3Ic#AJWeu>N]Re`=2s+`]7J`bHPl_h<;/j_:\*6[IjqGiX@1C2X<u/s;$[=C"E3A1M.i!BPk:AL
%j2<d_b3N!VoA\']9%L_"pKDZJOqJjsXZqiVTqRs5_HinZ"i[*pfWD^8\^^4>hMTlK?OPlbrltq"qB9%IW94D"e_H9p^Rcs]rTR<*
%!#/>-rV\]%O:1^O"8mG8[sn>H6a/d<\5AQ)BkhL7e\4HG<T_#?aNBS1Y2H41Y6fD1+.l^Y[hl[Vpoc=<?K[hU?\i$%R-oSLDMd\(
%cr^nI:Ts3Z^Fp@\GCM&)do!`Djk6'P-2hjmoUu,(0O_9Q9.(fC]!/e(VdbSu&+6Mi*4p.`T^i%P#QKdYK,m&o`K2aEHTm`6YPae9
%1f$Bc=ge._U+Y`kB(`:WfWY3UD3+TAB%[+dp`KL9Ri,'Y16SZS+"F_e5EG_#rQkN0TE"k^s7t"@Q4[abqrkORju;#M@dU!rCGm[0
%5;S5M->)hHeOht\?"nM,?>&JDoeCrEY^`oVbUd?G.$"@>.5MF^'cmAaHu&Do76HV.-=f%(TBe^2If$"W>57OurZbN$`W'4FYXPqQ
%Y5cGTG2^n'B_s#!$CQOjO*`&A3W`Z[Nr6>Y$(A\jNtkrbkk#]ODS[#UJ+LCP=gOPsC3QA)[I[dTL>aWNDj[]W()KcI0AT7\X^7R?
%jNkF)>2q2%mJF<KX(Umd<crD%]@(r+=5/Lqc`2t55:FA$#9Msc@\MIm<84=9f@kF]ED`rh/dXks&%8OH\+d&UDgJ>OH_k%qohCG3
%IbO^;]YYKJJ)Wk-lZ^H_,P='S]a@K]jd`2_EnG'@$e=rnW]A`_0MFj[8\1oi_S58U"_-KKZ.XDP't0877Rbfs(=]R+=1-ZJHX@GJ
%;PDO1/o8j/UYF7CVbud2.eT"ob%nW;85=1&K]G>eT:GKId;6ArRCCjc"t[OGI/3Q4f!4sWWJ?Us/+(Jl-ff'85g0Oh!EqYh*u%Y;
%,UW,'L+.qU"s6N9#6qDCidq2:Ej@<T)9't!S0k5$TJMRt+NmYPPpA5bRu3V:0Ek1rWNmpb<7O6iMOI[%FAp<gJn/Imh2lZ7"Dma_
%J5oIkR>.MJ<+6/4`6O+5k>_4J7T2]0-VC6;NKS2?,Z0:ceURZo<@8'`Bdu,/PkC!4_:/ljLX*K65bfbH!'rA]MQ(@;W+]p@Q%8*!
%XH>:b=?]$4E"8Tf6G!5g<C+bYBE18pR4q?0P5pn"(so2h8ksu+_Ao4GP;JOIBWA/pFBs[IMPfPN^]8JB@5qBn]r/u(Q89e;)Kd&G
%3T+*T70R;(=:f"1J[rV^2$%<aR[O_W'a:fo).H&=JWUT\=[NIN5@)X0;3G<dp3T&&c;7n;WX<gs<#sR5WbN$*C#J\u0J*AG!<K^T
%)K)CC__qQ]c*/b")0$J"m5LhlV?K5@+=ICZ:cAMC'*V6gO+ndEL*2?B?bm:mk)*S`Wgg5n7AHr@L'Fsh3kkkD@N*=g"TN>SIn4;]
%TWXq:l6`UDJ6btR(J.u/b0HEZ2[\!6.BAnl+(SIgOFmO4"1nsUS.g$I"h'5eB##HQ+4s<?/g=c\eCC'9X$E&`+Qj0h0St[<Cc1,P
%"43j]SqoXq5V0\kn.F'L.mP.2I"IrgLG]6^)FdJg@5(0'YYdIZ!L,#7m@+Bs"QV(b"JZhY-kZOd!B\H.&d(''W'eoP,*jON;V5\^
%e8d#]"$:9X#.=OaW\T\2!ao,B<25lh&?*Hp&'+rR_).75A3Hgm3FH1tLdkEQ"t%^)WoCAo_#tHE`,MHB'2=<8!TkfnF;tYogQ48i
%]r7>Zh*=Ff$l.D+=($hL-\A.(UC)g3Y4h=84TQe;>Vua*K<l:)*?$+k#6IqF=D.hZ)]DIEf1jm@fb+H4&=Wr1"77"CW[?aG,T/L;
%=)f%L%4;6pJcr^f-rMp$AjjfBkWnr)+rB`XnM*9DJK8\K1n:bNdCaQ5OG')24IcLifi'RmJ-Q-PeH!nsMBH.Y#R(B5XQh\i(nt[F
%+2aC0UBuT$>%eU8jJe$0U@<de7B(kX!>>R<LIP3PJd33F@qh]G[K>qQTT2<'\KE&+bs3-k&2Ej@m[k*"i:I(A6;<)\k&er3k/Idr
%n>FNK"ZuH,"@6K(!U(JY%]1KZ-;t=5;["%tD2Jfi#![Wcf4"!5Fq@JFM*QJS_EdBA+RkT&K3/8=#OR\:;_rQ2P[pM'BS66fQF3/Y
%7`oE2!iL[P".=)8"2+_(+D_(h_!^)AAt:WmO9LWJM[C".EJqg!8ks!X:do@0kX7<4;us8(,$N_&M##r-09D/;Js94<TF'#a^,-YY
%4IOHJB^&<>/fJ[=fC$ip+<&V0TpdbD#V8b?%A=+QC,CX(81Y1.MX?/9Jugbk'55+M$;)0T7@]j)NB.[Scrbj-(05">Ng3E\BZ)G'
%ar+0)/i*D76'?pdU-MWj!0.+ah9^]Sflk5>J0b=/1.F*VM?/q1$0MB\%KrMl\Ra\b77)T75rV%><*d;L3p7f!:]X\KPXT>?hgqR*
%YR!n;,n_:j.UYb95m<trU_!,%mA_+Y,L\D"DQ'ap40.<mif$IZ!p>3cKUm`b'\5s$L`hTZPW^/DEuIY(6CeCh.'#=58KehD>1*e%
%)`l.h=uWapgV)gM8+NA[)ZWK1:!/BM<A]4?-4+8%oV\Ti"6Cf$[D9iljp<4@-3Pk16C<lQRPH!6\B^FWp(GMt'ZgF'WbE$43D0FG
%"MPWcCT0Jg?n4[6TLse_ToK;c(@3\$-U=OqG6*1=MtfSJ!e\T$&S.6JF=NBd-A(sfZtWC"EMo?#3jf'.K%5II:]n7bj?dT]Q-go[
%X-H8"`iq]\?id"["[eE.!P'$aehE3,@3qT0AX?ii03-D>B/Pl0UQ#$S+=j;p7YPY%bQKf&P4/[4%K[Xs\d2K&'I(a&N)>F.N^P//
%9Ms=?b&NS<X%4?m"e?o"BJ,!QQ!R]LM>iJh'FIYF+Hcc%)Ld<.+tVL\D+%U1R.mcJ$6p7P',WF%@R7qGBKlSjTlCF(m5?`]"?[ul
%lK()PikVAaJor"!)))&.1[&6!)q'cW<3T#:8-o,%lo+QaB=:Q:DQODihY"XZ%\8jLoieCP`5%35&D]dpp:O%8TS4ruR0EQ))\3Lr
%7+B$5%ID77hd?Y@0JnACH9s>1k=%HqJplk@,otU;V8b%#T[8.#h+G<&p[i^Cm[AS'/m)WsZ_G;kF?L>qf]'W]4V!Vq!d+'R+cndK
%[Y_p/9+jq<"%_kbMI<fl5sQ"qJ;FcQ$/Gd3oTB?'Q>(YAUk5=MB/$2Oa\[R[T':M37:7JVGCYT"TjJ$g1RdM_0cXq-OH>b;!n(FG
%6#=Cc7FRW+KAQuK'VfRJ\t?7:De0+303`J]@!mkXr^!s8oDs7_`_8Z$7^jSC$qVpp!@Xa046Im.:i/%_H]+?8BkQRe$ITJ)d1K4i
%?R$Ee?s243b%V(m9SS]8/;S1<U#5u2#J6*a5iY71ARB)<)5nU\DPMCc>e<(+(G*&&?9CU^/[R#nLBE-,fG.d.+BeH3)QY,#r@$!>
%@(/Qnd(D0t)El8cgGte6?odSaF7>nBj>e*fhTk%1.&-,5lSa(P^pUcfG/82llc$b\;>iXO0`p]VJmh>m+:/Jb&H-G"^k*51)o!)C
%_a_!l<=?RAWnNI%2mr`oUYk?E$nPkUZ*Bs+IF/mBJcmV<M&?U:'2f)9bf-r;G!Q7;f1aa()HjP.8S5@R:dpX,]2;EWl(gk]6T8\.
%l,66!;1`Uf@Lia[A;u>f8--p[CC(2)'UikMM!,Z.1UEi%cmTg0'p+P0Y6g^0Kod^Xl_lcC?n`1@#Acm2b)Bk.'M(QCaO?N0(=:c:
%Yt\XM'ZVC0'Z,E[5tCS%@)i]<V:,R_Z8SZo"LM_OOi_:U0>USM7#`d!'NN9?$BCmu2G>l"14;INWe)h5J3]V1W,>1DCe#"q9`Y#>
%*6A?3&JNn8lm1roFlYJ51Hgr4^9U<)BNU-'/2L.23sss`h7?Co?,oKsgQ%713O(YuSShPhQ7@QubD&AL3eh/_;Ll\R7W$KXl;;+P
%[B3,!TjT<R3Xa2M>>$(BOk`A,!9;m5.7@^nW8ark=b.@l?@^$6'oZU(10t"06m!B&9pn:Dd5Ep$<06d1eKt[8AnukGk!R+pfh2N+
%)]B(u5U3KOUMTE9CoF(AMJNlZ.6:B-3@;i`'nMuclQkIi``sj#AXG$m_1J<t$F^9Y4_e``1!7brHWUrN![(UNYTW5:Cic+Sb5r,B
%A!Vk&DQ%H.+&'$d#V'5:i=Z$.`KFHDPg3$c&&SYjI3RH)JJfJ7''Z*fE([R[=9'(FU/.eas+o6_TqGbKB-;dqB-?E_Ws2G2mD)=L
%3a+EZUHm<3S2b0n=`a]ikb<oi;Shl-;-mBD&L/D4OXG,r.-*Sn07k-\)fupT2(80T#:2D70Q8k!.^E`o.]U]f7!XC="QBTP%!i\Z
%YSuJ"7i0>U=J:XhOCs=<=&E$Ns0lV]FcZ>V81Y<W5Xf/1?c3eBXfHOd.RaqP3*ak`r1FX&82ucoKh2%ZkS[k]*#(aM*-.NE@D+!B
%2<"lU'SU`s"TgjoTm4.93aW#,,q:0gWMj%."2llK`>E"n`9H@*A'A<//EmJug(4Zk&t-2%&-@Ia>H*ITKk)mY'nrHC$2]WP%`H&d
%ak4?E&!81Ci#4.X?0K2C(^=E<.*E>5@mnM4Fure;'%bDI0u.EZR\FL>!LR/$NBhCTXq<gtL^/m18rSR#N.YN^%jVQWacrkr;'MNo
%CN%iKFVkU#0/@"e;9c=7N<pc^8dDG?2M("FjB*iXCb\lYBJ=06K)jn2,omMdWdoXeq[Si:1U+CXP"dsH-HYN\@ZZTMn=WK!_Ei61
%TQ<kC7%PQS<<>Xq!@Ts61bE_J^:.T;#*9L^@Zi.o;p[C%ZPjP`$_ZQ\ldQFZZ>SW+-cAOi@jIAW=JndgJ7/NI?p\L=.YJa@&/gU^
%R=QHR&b'KAM?SS+PBP0c'2/c88o:jl0d^i(1^.8Z<>*e&!qB,dS942@_dTPT4C/_.3j)&ZD$Ca.9g_KbTJE=,8lV*u*2DO+Nke!=
%M?3"\1g-TJgRF&?&dlW<#ll$gP$HO?aIJen=YV>/RMEaecG5M^ALj`RG#Q!U8@Ina<RFqo*SW?U=!\lINP)k+er49GO;1\-/ZVfH
%;)@Orb%k#\5\;ntZsf%q[AO"o.r.2*#"5+'[^ZRCQf>FJ[7Se<7`d.,Z'rtNrYIX#.V\)ul(F&F45"n3cEo$NKph8NEphb>BQ"2G
%OsqY@HigT-H*_Q?(8lfd':mF:'Qd&[gXS.uab(C_hMpnIqTb[MaKVOO:BfK-&&FJZbX0^#Oe$2`clCe*mA#aFR:``eLk:%STV3Q]
%s)@8ia99Tt:HdOZ2f(kN^dH"_:t?=+##g)0,8a*^ERTW5;`-HG*Yc^#*g;`Z7N#`&8;KI0!"08b:ee$FCkKQg1]a+[%.=0Ka?#Do
%FI!%TDHXmgU:joI/ms=M]=9VBnfWQ"$rb9RBt-ZhMQDV=]61K8"t_"GDYIU@6lP\VU<9q;P1tr\beb4O8QjKZRk5b*J$V9\1odK7
%FFIsjlUr=^*_nI4=@DADVoe-90rk=5n*cIi\+/6ff"\hG9Z1T:JbR-2^YrhuR@*dMVI[!.^9fD0ZMG'#mE\CQpdolb+\@dpZGaHk
%K_Oqsh3V^qrh[_bIW[]];^Z9enDQsOM#go2EXj@:_b<+b8%SaAIZht6/n&@TMC8-Z*^GQ_4,2ca4RtlR%OJ+)Xt%Z?UC7-&Z((]E
%`h'ITTE1&5))"@]1*e]L-(0o1@*og`A>fO(bTP@JUF"i>)4A;5Zg7k<)8^b4duJ?;$J6;j5XBB/QpX4.Jclj^MCo[@PCUb&1#3@`
%.@B?4iZ#3V7*>+a0ug%<1]mp*;:-:U`^)"K$_oD]5d$%S?F5`\-n:'Db!$6fh?)GT&Q?56QGik;__O+OE"TcnPbJJbr)XgV1fI,t
%)'16l9q)?a1&)+nZGZ8Oe]Fupb7O.q=nGD%)=+Ba+W'N"@2^*4(W?j77._9IcUjuZ1Q37!d3!U=(</%:%CZ]lJgY>A=RXuIJZ!k)
%)B_.t+b18KJPrBG]W"gR)@Q\C,SO%*oe0gd=MP!uN]5DVN_dMOs5,j.!+lgc8gBWU+HAOZ9#PK`BGfGcTKGXXklXC!E/QDq7!<T>
%"=kif6DDI"a!XNW!4(!,!",7=Z<LI(+dh/AeYpoIJI),SN2*XIi,HZXo`=4(:roW#:*`[FLXI)`F=P+!KC'r5&a,f[PZ&c^^dBS]
%3$!4$U.9)_ZP"^h(nEDc\P-Md#r4IV.T.#6s6ON7'QhREOYPb7"E%*H$Sk&A(mh&>loZ,GE(+ri$do?f%L!Wk\)L17oic@*>=8H;
%"%a=D:dcgC9B$000K2HT1P#gl-5&G]'Z&p,5pSV=rZH'$(fs`A!<ZH$Y%U@9._)XGL]hUd_S3i3FsJZ%a_Ck<T;n;S@):-'ij4^p
%PQ;+(gAu@0VQ[=*2Mu)p/2!cWF@6:o;6t!'e-CZ/SbIl,Kd*)Yk`uduc?'>Ga6Ip%UY'9rR$U:R5pHmS;qDn^j7/p9Yu9#$'W[?E
%1o4@\+?GJ)cKlj?h/orWYl^?!Da_f31g.t`JM@cfnL5SL#s2W>).O'^8:O%.[2*k1780#BXEL="(=uM^qC@eoAX`Tt0eS1GVgZ'K
%Y*&CBC1ht2bQJY*edeLeSYX3"V1L'%GdPIQ/PT<KN%N3A]4C.8$B+7IYlRMQ".'pYh8nQD69u:9Lds?9-'R:7=Gb4c(!=se0merB
%>uI7P$W(T*@S$V))DR_Lo'CH=]hcO?hM1!/3"pok''5CqG-Nl1&AOT[N@/rT`GbtGB[fYD^h/O,dod7iI">jY@mh;4DdD@1#os@b
%?5Q'e-9IuCHr86R(l?-Q"t%KsG4\I.%/f@q`m+RgO]$uhe-(q,Z;]S*GH,Q$m2UCiCLP2H0Y%gU-;=_7?j.eu3!HU\W/-,e3aEQ+
%63/A`D7jC,21fOTSb>)29^A-\W*jGiBjWP.8YP0L%:`r`)<'=(X3\!PVG=IRB;p+i>5'j`8H]Fp4!T<:(RY!*Ve)6#j,:MX?/jQE
%bs3'rK:`5I/5NYh+u^Flk"L^6]C!m)lFqFSc0f6bEe6"C5:aa(=eof2,90rG#j.$oK/&c>aH4tu[[fRM=#(S6#b_GbTgc5Y,h.ob
%Akj'aMEDp.IK)G4%Q^n_Td:%*UmZkRUGNi#p(qX<1F]llD>="K)u(8&/tseU#EGf6RT=A.laoRaK>_SUb8UQFWaYIf@L%<m4EEs?
%<PrhqWkI/"WWK5sA;PH<CHet.AY+s;<X8t)_\1lS$#h_NZ#%^#'N!7nk_YE<b<.V@.O(Q,cf??F87Eg4\0`5M2437q,?m0:5rQ-o
%=LCOl2#5*u'L3V+;)ASHB88h#VR(R`2BF8dWjr+&8`4u0F<J\<d6sO#.dcb:_(&a/&g]gfpB2HHk^jP3e4@WaZ@iBn?mdZ/QuU(L
%'JS;o)/MQ3Iq5.JL3aoK)9u#Ce&@0WkUKdC)40!/Ba%TMM00D0CkdofQ"CSRAAtoNVnhP,fdMMK;0*oaR/3Ws%/Z8&;n)^FXQ<nq
%A`X+eFM]PqCf<&-bXX/Q)1)?b:S&P_Aha$s?=FTX^aQ)VpkVeaP@-L;o+<4Y?!ui2*b%MZ9f!'`98jLLg0ln@Nu5,C'g+t):Q,q_
%*9d"hL_1VB(7!g6;,XX.:K2RJ7$gfk*$-1V8sltpaF7;,%@t$h5$A)QP9"'&["oggCltJ]n3Sk0V"eX9QAkVPZB#dKZ_tAD+"^st
%"P*&3e;/;tR%!<:7T%$`Wh13Wi<OF+pJE/[2CqYD7uc^oag*KX/8E*/K7_r+7ub1b1Mi5mPXAG_[)A(PqY3)u+o"S@j)G-$?Md8+
%dqgFab*++%[DA/R8Wq440b)/nP*g0afbef[P,6'0P+NpQgHh+<'T%)EFBlsc,irFl.@uSE.2?%*MJOq;$L!eLgZ0SN.^[YqS@Tu&
%-i.@[F!QSC;T0c@koiV,]c'urjrm<8P;)L,)Es<0(KE4aOXE`E@V$k%*(`JlNfI/$KZ&OI?)'H"N[?2le&6>T025?V.-P!+`6;.O
%@.\*\A1tn1R3oc#_r-@0UIj:WoICLijIo0$V!7usnBiMlX!//s8!A$e.Ug,PUIbfcYr[1A:$QuM:!$FBU=?GO=pFfe,>-e18A)`[
%YsjmV25[.ti=[Gj'F[_,';]U+koM2:HAN88%NDI2gu=/'g3&]]^_%kL8sZ[F&1+]?/;;VIPS>^r<8nad-n329;Ir'i;G*o\*j85$
%R$"6Q,aVf2`8!3R,NiC-e.$SBK25>/L5LX9Rsq(g<3/:6'qQhI&X/=dSgX\3B%TMNMn3JtH&,A=XB7j^$VDH%a,4>R7#?2TVP&9m
%;C>[E'0Sa_;mMk?6^5/JM!H3VMToQTha`ouUa>61LF=T;Ml0*<c6BgeV+C+N=UOZufA=.4>&n3+RI:@P+8B;1D1GSRXD=&mA4kYn
%ODVVk2HtPYYd4UlkX1ZP\d86.]tQ5`MMQ]+cBEN/P?BHI/.8+_m^"*H?07U-0co`'7`0%g\g&/bdS%1)ODPgF"]P<RO"IuQkL"Gm
%2NS"u\(boX.ppg)l#s-`+53iWXOn#"]@E%]0H,9(M&"\XRKE3HG!!-TDX#pC8GGRFGh;?8<dI)9]l(lgS)r[Ja(r'KDWGW-3eX/H
%X"?cum-L+!OS/,2_*p@=WOBU<qL%M(m!*74CgZOQf`es'#RI#B?&rKaa0$S*GfUJWs.j]t'4c8ei@<p.?fuQS8,i![hGkA5o/%qB
%h(X2$[4-M%kYnAV6#p3q3pP$GL2<?oSI`>p?!d;tr8Ee9q!-&?Np4)5a00-*Y.\+idsX"eZ>^-VIkNf!*\.D8)gT5ING"pKLQ#Q.
%13UH7qCT7/Knqj'W\C.Ej5D31cb:$+*rko@In[>b1@';F;nS9@..44ao/"VX06U>Keuc#3MTX'B,@0X`Nr,RtAV3rR7ZH<=:\jjT
%6d[)Qo&%4Y5CT_j!+CX#W$%p<f(AD/mM5'lq3GTUF5[1Q\roQ10a6:O32e+/`_,kOPp`H?OUouTJOQrndY6T<qKGA1SbN9)6V0&Z
%iu7;]BJLXl=elZM^b<8b`fd5[7*Ch;D_&iL>W9Gf'EKT^(_ct+mX<,'S&G!+^XG,<[^f;dM'"2M#&hVWV2'>NS@epX!o`-d<`-Se
%pk!^GU)o%lfV0pAN1B)[,4!"Rrm3E;X?ulZB)5.0:tB<0U3*%.-KH$c;me/+9#,*ieH<!-N@ZRu4HZ2aG8QO!bcL*k4>P$PUm!MK
%-C4JQ7t8D#Rt6V5R"4Zl84.lFq/-2"]Mgtp7_3"k0EVbT&2j.I1$)mtL>e3)UMl&p^CgnmQZ<A`ikMD`Qst=)^jW;Fk9](4ZXd3$
%FsOgZisCWI7AZfG=nGZ/7id=0)*&(,.Y,2(k;a;O_e/SJ1us(UlLN4*J$S<F]Zl3doS)_T_Dt:Q&8-_[$B>HrgYAS1'8:9Qb>?#<
%Ll.dFbc4.p<*`*G_U_#phWMECHdZdWl+*hH"72:mEQ;smc#6hKoFQ6<XJ;1aQ,p&O4Zj#E:e%J++^XEbi2.Zt=boU"2>Nf8I,HC-
%d]&36,O:UCP$V=*&]1G\p_p&iO=NcB6TC=G6=6;[&ZY"6'9')Q!k8=qM;G+@UX*Mqf=ne\DTM%Dkh^[H88N:t0`t)!51S2O[[>gC
%A!Q6%5_1'?IFG9),&t_nH>:R<mj^oggi9CNrO>W_[DUB2>@We1N%<ZjH5Oc#;umJ[4Jl7da4/,C'5Z8Sc[GUs@*lVJj<`7'gfFWk
%X[^DYI9pXa(`k'E"YETpC:K`?HBliu`nsj#^`^^`iD/uK'`=\#>[;#[dp#[TeE4JP;W-qM<@c\F(D,o0Tn_997CQ.=P[a^.V$7;/
%!FNQL)I@hYHUAB@^d[;b%%fHe%b_Dp&QZ`Hku+F#L>&^qcpe"5^*TcD;M-'>fYbSVpC]IKjCdrjLOh,=C0YpD2*Q:-#=tGS-_[Ri
%Nrd8U%n/1S\a$VR0kVmh$C$8c1B)<-#_^,Dp1a5>U)FiB-<M>>^$ki_f%cW0.C=*;0eepGil"YZ1A!k><a2QhiZ$YN(mJTVG!Wqe
%F$daaAsk$*FMkW"G-;3e2;(/12d^[a=k-=`WL$.U?0nblBnM\L'"[3;n-Ot0NRA]"Kia7dkZ(P1cb48oKJQ99<oWNg(@&++k.E;I
%UfN#m'+."DTSkn81cJq?UH1:cA[Q?ED35PlB$(R+Gj:"*_lr5PpM%E#)+I3M'Y"fr2c7)KG<`=C2m3KF&5tYi<=?hKd(SE,p<W/S
%a/;nP1t:PC'OcQt^n/O(;=+\)!\I76+pAC:i$(sJekTO3^8csB]T1HC.rg9#iWc3YJ2o##Z`g:4d<CWVN^YCtN\f=HT%fs@QZO3[
%g4C-/.Pqe'[s3>p#+;qeM=&o5pl\FO6\cC;mUrP/WJ*EN"H(oT,E`"sG:rJ8E/2;U<taf!WGi[E%C4bf._9^;!QSTn'D_l2Nl`;J
%K"S5P5%5OQY!7&tbH$qs`'lZB/E*&"4$W0)4L<;o+AuS,p"e5Me)WL0SbW$j+86)>2Jn!hWb*E#88We&[EV/Z<[<sp@n42#5L20(
%W68sfk3OM,Hj\p;3?!9_RrJKb/6it!#KAUeN$*%3M.UPH(7SXLi]/%AFCH$o_,3p$pKm[=:GlL?MNP^nhOSI7f\sbJ'cdAu6Kus-
%_6-X:8Btl7KbD1N)oepNiTNeh%2;>lVu+YNrq2dZd4&Ys[=:<9#qJrfjI;L4dmpFllS/Ok.'0eaX+Pr94g$L3i5bG0=OnF:\OBMg
%:I!pRojf7%gWKB\\];u"!ZA1<I%]uBVbom`7FPAR+NqdK?mdR,2:]h,&cO>o8N[o>Xr7k,YgBXYZ3+%tSAmC_^cs852cd69Y:QT'
%&L2D(&$',]Go,g<i@4YDKI2Kl(FfuL^2Wg651qbR.Poq3`_*pGai<er>QQKndrGPS`jh9Vla`'cXbNCr[o#UE&<O1IHDNrXRXYL%
%969ghc@gp<h<8ARdR-4qQTc11G(.e2:49DA.9dEdXshaOcTq[%RrD6R)X=*H<?-3F$7P!W,?O!_MaMO-5i;P&:Uka%aD")7e'\E^
%pq=XTBN(g$dXauk"Rq4UP>PT*0(FTn3R->/"<BW/j7#/.1kaQ&G6h30/_-3&34a,KkUK_a.M4VhNMh-f%VTJTR+5"tSqZ]3eClVm
%GM1NW?0_N248-;YZUV)H9`@_ah.Yhm55:>dp(Ej"^]^.pil,=lDfYM;jG7ao,_#YN]5`FmnX.C7NEr+k-Y.qC)dm`'I0"p[Eg"tW
%ho>!c4tQCh`eETHdOO2?1<BiJ[%;Ibc-)([es4S8W`GgL;oU?Om:AJ[>=U(uG<YFnmUkIXc3M^IKYc^9>Y0rlZJ:ZARN]Sm8O*ce
%64$WIF9V%jbBqa\?"1+lj5K"u&EB(N7b;pLP>i_mp9iM,QD[_8'b+.lFu2u/1fIH?*<dCck3atlXr3DM@5Atpi`ZT#hUCrjKX6SG
%X?m%8J>N#09fJ)A&tFR358I[dFN"K%F;K-3l+7'!Y8/C">+&kf8@FA"QU4D>'0t;IYY'(PU?k,Be\3F/J8OlXp8U/-N15@?_([<,
%h0S+i*Cmd^-lT/5"*?uXjRdNRD*l,!)trP&B<S>%#=tSm]C(F`S=Fu`&!*UH]kuVm07kZ.K]C$Q9q,4j&of*>f`n#8JiTuRoG+"h
%ohX3TgS<-;TWL7=MoZtG,oN40Bc8K.LB5D*BIA-68iOU?pa?X?=Eb$%>5)jYb3NHSA34k$7P5&:"&S"()%)Afbh`0+:Un)<59h8*
%psj@!!p82"NQ`*VaId)U<JP_'8.jG%*)9ms-:_!FE*38V'bNFE?IW_E?>khV#/ij;SnF?11F4g_o>l$&2.rFQmWaT^KtF17_RA_^
%U]BOZg`BjdMR@BjPC<:ET5nBIBQU`A-!+;sAmp-bq\K0s6b-^<%4<<g=#"E='dfN#GgN:PF0m)AGV0'5n,S,m9WJekM1sC#SIS%,
%aCTR7[tp,7aZXLZ^%"M0ECf)7K;Q_RDKN4%_Sa%X-(iW7+PrhnASFR1=6naA*@_o8!kj!O=j;XWEa_u>o$sE^4H[$4`Q!*:pT5lK
%=Mk>SKn*7cS.d8c\i1MZ:)nV\[9+M3[3I0.gZ5cWQ^`Y<%X6V=^OF(UHpS:raW:aW>I4BUZ7tn`=cTgePcpWL)_-Paj*DVpoFkn%
%V$i2:1`["`S?tFMW5M$0A3_W=gU.""2-.g/dhp3BMo'-J9326&_p>%-D0ftLEW_e&:ZRTNY&"RWXu6HuI`'cc_R[XQf-Fpbo%'QT
%);DUC*?\HhB:Wed7!AlH<<(>H?]#O4iDY%3pt-lJWG$tg21i%&&lVkff?+qiO?tjbK^r8T5!cS'B5GW;d_$dm]^U7QA6q<&:V4L\
%TEtqm&aN50R<2@HWI+:LdOId^<51f;pN[upVkQN2l':NEeb<W'7/4NOQ+Q:\Gd'0\$l,++oRB3YYkCu]VPt+@@FU1)_UfjfM;0<X
%c`*0,AIOrIn;?<@\hZT=Z,2HH&1nY+1O?IBVgS<'=)[k#Df>3AAQgtCO&s_i1F1S5YFJg>R9r.,#T&-L?!b1\YX+rHp=o%l4YCjo
%I)kUc!*O.6qX)Gmkn:T+G.j;[XkRd/pOUX2mD"*a,PpT2$C;p<O/K4D%4[DcY]T6qF>JE#*+5r8c,UW@(SZPmS\R>X(jInPp!"Vl
%:n&&NQpE]c1aA&nYk.pXHSgA!^@.iBi2g07GpCqaH/7EpM4WUMMT_gq\C<-[?FcJFQV1*V8mSM[>>ji2\*,"0)-b9XIni#eW<P]r
%+TRe'g^&+(k0DG&aGK\kU&Er4>d\_rA6U68O\jHTapd5Ai/OZ(p$K4.nlKc)`oe,qQc%@AU)j)C7/!AOQV@6'+mgQP+Lp!p!T#=?
%5fM^^jgEk.5elR&Y!'83Vt*=UR<ic@X(_lb8^m)'#sc5]]Bf/,aPlr(p&.e[lgs'C(;l>#db,T8<n1sAl>3:>(L9_4c;)9d.`0]G
%kj45s7VA@a>Fg2)T/p3@0NC5?F>d`aF1Jb@qtuaaSUKZ?s.Zk"'KR1/;HV4odFlk1lo-BDO/'&Y?Zbup9P;,,Yt]5Xk2q]_Knq?S
%MOTLL<@RPhIWZm\-0c6fDT0LjEHu1A#GNR)OoaQDo,&3<-EW`Bf=*Cf`NS.fDLW]7GGEBQ<kP&'irU-(ek`#[RsG(m!;RKhD?>k@
%(lVfC[J`1&>cMf;m>VMQ_&E&Z'_d+)[6M:+9iPMBRDaX64mC(YW45-4C0eGK>HMT*[RXlOJITc<(5Kms*_(0.']1@[^5ZrKTb#:K
%[&]9Ld6&@s:H=7Q`MQtt^<)l*`tSJ82"&'e;uVb'ae&WRr-_Qs`V`A7IMPqQ8Mk='L=H3D0Q'rl9p:\:\R<I/H%DLIQ_nf\(O,ej
%2"'p-e%"jXh-Ta,!e&W4:nebS3T[G^jgb*Od0+Iuo*4`-PWo7eWJic1idXglc`,*>1UF_k/,`UQVE_i,r8lV/s(a.-Q\KD*@`9oV
%f*Hp'Aig_3[ip9[r5MmspA@?tlc%\0OLQ%75b:i'b7i3@_,WH^$a8IWH@Hu.p-h8tpVj'/6s:?K+=MKl7EN7h0_''2#XDmkpbDaf
%2=5`Vdsb1`q[8;_I!!dVqNG1)@.H25-,-"J4p%Dh!/DJ<Com&)86d$#qD=V\dU(]>Oo_dG29QQnW%OfS\Q9?#W;1Z:/+5X3!E/.P
%d$HSh_Lt9#E$12M-!<*D85\".GicooSRCgfmEE94Gcm8>qS+WFZG)"7o]*1T4i5<UH)XP^Ws*.8!J[A4%p*uBE3lPZZt3Y<U5KZ@
%c1/;.lGlm3E!ld`+dR,o$-OGiALg;\rt^c%n[ZFC@eL<,$MLW;TKP!e4@#VW0m@",K&Us0e#]h>fkp6b(UnREA8Y%h>9NT@GP>=M
%A_*26,.O%gY*ag^<GV9+AeW;igLZ]diFf,G`\F>FEcG5"Gpg[SLCcka;WB"W'/MNNk^&/?]=ZZW!i54qqNdH2`+?Dp'.QGH`1eD_
%$gqcc:Ok;EWSeO6X:?\-_:+\Ij0O*:Z@Zkp00&rL(i#nWJ!`@eb[u-)]QfK=rM3JDT<cOZJ#Bst^F;MWOe\,RA\(^sho\b-Wl!>p
%:GU/t4J_6?j4l=U)+e/In3]_WWn(a`mKE'GXjfRre]r&K3;./7WgRR\&`KhcCht:6'-6@Kcdnh-#Z]BjT:o<d^.EHla87LGPhPea
%@VtSei\EuLbJue+p["8=S];^X>hZMEl]d%J+[T5s=V]Es+hd"/*MCRgZ5O\=&DYj,aUf)8+75aFMt*8l0nQ'C\gMtej?qm.X%..X
%0@ATA4\is+.1+nY-8*ao.d'']9OdrU?5"/..V9]6b)LmrV`0VcML4+:H!J6Oi>K2c,CZA.pN+"GUa189,6=G<&[CP%$4=V'2UFF?
%eS>Vs@GTVdjpL.sgSmW:rf@B+L\l5t\fd\_"#\\dg$E=(0!n\I[PcbWKlh=W?VS('c8E\+FcsS&l[Tbn-o#PU]h`pCSZk#0L0ft=
%.CrS7($Li/::P2'GsZ/h)C!9R27=;/@5B9j-_0T*+n1^a9.+Au'2AqpVE,rXQK"9O(W$8%3\FFbqWr?4B$-uCV.Et;n.^K>"Wt0G
%c,4oB.l?2Fo.G^k71*rLH1RW)V$8?2i3B07Q5YVO9uZ'S!4XGr>/+1?H9_"SZ>%,/UlqIsLrcG0(TLqEQ\3SWii:>P'N,S?%(YH1
%&-Ss5-tEp?UhII]=D2u2IS$&P2Ibl!FK[;M=F1U52phe,AlY!*IkVu\"'B2HTN11ZSh>^3ejgkYC8Nm:c2d:$>-(s7;.?iN92eNd
%H8:&"Q2hohRr%%X4'PuHq&o&&>QIH*Ah)=HpE_335RfQ()V=>%dU;+,crWpj\kSOAPe.]@#6I/UES4'<6Um8\<\#%5;u=uhXH?"`
%OdG:hCk/dK8PX3$Rdr0BTHMW0@XO)RQYMfOY'(L?;eZ]&/N\XTLH@ml_]m)DV9LtK^]T+R-eJio6BCZda'OS-)b.2#8JPH]`i?%u
%G%W66.+OMBn:S)]?fFVB4\GX"Vu[/>j?XLm]4d?5@0o&-fX%VU/&%T*4-%#8_ka7mm!sO'#GKMs<&B3\qD?&KHRACU$Im&O6n'td
%XNKW+[NNJ'$nsST?aMBLh\/B1P)KUG&Kj?h5oT=M\?Hse*dr!L&.I[Oj.lbQ9Mb,%>d[GQU"nI(4UeI\HHEA(]>g>?p3dpIiLBUs
%!0F.Q6ZNLo;N2)5X`0"%L7Aqbo@'GUJ3^\-\*qT>o1D4VjYG[8IgQt->AD:k]rD6[Z@hmPk]d1f+DPAdBj2lbo-Eo_CiEdU`^49I
%6$fit^5cP9RrVQUFYThmI]S.$j0i$mmF]-\JZk3e!o$60WD[e\FY&lt=Dg!`NT2&hkRGK<L4Wqk(OT5ZM<kBTTIDRMYl!gG.)uJY
%#jaXqGk3R%R"7!/*XJtAmdJ+jUK1I0rA=fkR@QXO8QR$DBjU<096<^be(+s.aH)[d&?EIR+B'4UP%p1&^MFfGm,B=/O%QK?GUUH2
%(c.I\MjgZD"6!iCQn^'M)V[;CaB$YTc:RR`NmCZDmT>BU#AgjFT.^*6VDUd]6hgR">abK$rd4#,%qdn?1`Pk7R2M@%h4,lC*4qB'
%N#U*U[W+A8pd+`d4J*dMHr5aQ$9SRS2Hg/A?`H('ToZF[JY=?b"48Zs9dZ(om!'5XQ,>fqmmp\=GbkSrS!jKV:'[sW&c8F6nuhgX
%r+X^n(oQC8CXf6I-l2%$2[DN^mhF.oNZ2"+hKR]]5%3\4XGtPcM\,5"k&EM#27<]j.GPC)[PC0QPpd65K+&t99pX&YLoZcmLjm!7
%Xt1]!)tLS;G#7ld<2qo2P^]UMJnir0FU(m#gDk*(q4"#.:2m%$9*"Zc605*<<#bk@N^(W6E>Q_1O9-*'^uJQ$bY2\BT"Tedo]CqN
%mA/ckW@&!a4hHZr=ptSSO%YinH0E/]eD#*\2l2TO6Nm3(:dm_&,%RR_C'aQj9pk1m'+".g=?6.RMnig(9R^(Z>rM/]%Lk4@GO,8#
%(8k[D,j?T]3nZ]TYaX/hdUPs`Ct2t^S*t/A",2"KAk7gGN6bi$oL[2YZ7-u]8Fq4G`=Saf2bg.r?2+nPB\2WJe$@;2H&Tjq66OS*
%Z9hc[F>pJ[\q\#8WPUY;j1=uE&Vbq5/QBMD,@KaJb&12T1"R]_@`DP+1t#KjAtSOi2giZ`gEOURgii.Hr]DgRe2e)U0[7XH,W#]9
%;thP]l*oVidITS?)l^0iI-D-_lpkluUBD9.[cdDAIp7Gkj0Yqc!<@De"rT.>hfBNe(j@AXZ<GH]J0rnNDRVl,,nROXUe6A"IAKXS
%&ob$.Jp7S:Rm4!h3:^Sa36(Y#Q>E'SO0Qb]"nU+Y^'3`FDD_auZ'Q6akri.Ba%cu=l]QsKWeMCb!+Yg@E0>eI$WAd&o?El/33VIf
%'SZZ/0lrG1/nE9TJ.iKffJjo:<`oTb._C.RVqsBH_FaV9lYL7SC--`88$K"?<<_m4T$.k%(L_uiM0oN-K=i;4G@LsPfo0:Wl_O5b
%6?L+u#grkfP:SA/57&!7I.k(_jQi%XTaPOQpdt^NK=F\)"bJ+n:sch)S%SV=n(kJa&'$X00*CeA(^^^a._?%f#h[!7'1Rn-kM_;d
%Bc%SMN!qKpR:P6f0ak[JJQhd6/8X)R2=<IW);0D&BN('Cb3>#U6^[4q%oq,$Q2C%5`Z;Bi%-3Ff28&BSB?A`\:\VW`=`(TT"cR<i
%d\c:?g%;r\gc_<A6C%)<mf?':DXq@"#Y]>DF[lG1NgYm\cZ.Mda</W>`,I's8d0in>Ghd=c3j`8'tLenWaHo&;hbMW)IJW*#*XIt
%,MTZ:NPM48le79i%1Tm;0@Mu&gsQ6q^8uo9#4Tnd>7Kas(?`A6GhtId@C2%(r9iabHnRRSOtmb@!5?bL_^,K8K=hZq19[Q7>b'>U
%L6bF$</B6F+^FhcXNaeYLE2ChJ6QULQVQUA5uqU:pCX"<Oh]8DFZFd's&c8AM@4@JCZaqAI)^4R3.Hp/3d0Wn9VRU+F+C?U]e)X'
%;s.DLplY@Sp.B)B$SCFh">\e@c<3RR^OTK4qj/<O5d`9.Z7*h3QLd8BA;X//V"J(;._a6rjR2i"VWpJZ9P+;?E#dau2PJOe>9c,A
%YHce:V@1%E\K5?#b,0`q[b5;>qQXtF;R_hc]15_qY%\'\9>N+hs$6T=G1l"sl?LXrT7kg_K:&455AjGge?Q,Ip^,fWJNp/lKE@X0
%,%dq,)Rrb3?Jdq,eA8FpA/j%?[c+`;dp9J=[:>W_7#-j4`h=>pid/*A9t_=sI+h'6HjD[+2uC:A+?bCYK<;??8,2*]_-IkA<XR8R
%:Feb,]Jg4:;_B_-RSY*CR)05;V\YV21g4s3e!#Om4.X0rk1!Gs&99?\b>dHZO3Dt/KiK!2X/:^RGkU3b#W"+@=8F.Ea2qqKg]j`i
%0BX)]1VbpfJ"&*&H]"d=`UE-g"X_+Gn*?]-,$p_o8ff<M\%?_NEMrV1e+5:<+t8m[4Y`eX,tn&1,O=uf7+e.\.mcV+24-qdWXsg@
%qtJ!`-.B/5G+6/Jk-9WdLG4juZ*<M88OsIH-@Maug(K)Rh?o;;K0Qtc1T@,_#BQK8N6be)PQC!H,#kenBYFpTbX`'uhdqUS.)k)i
%33hPshL$)*2A57s!Fb!.*#g>r)'YqcNUV6-FM8i_<[7?R^/DGk-=J7a<&4oR=cBRZ'u.]+MD2R^5XNFomk3[*Mjn%[n(nVBreSD$
%TrV]rlO3F#cE2oB'G.+jTeh`8<?C+)(OED*NtfuBNjD@k8_O`$NsQ&t'k:'5VYt;(P0ZKt*:\q!P(Na<F<EFc+LB&S]?]JFO7\o0
%kr9#Pj0n9,`9R7)[;A=W]K9Eq-H_i<9Y3Z.`s?_rHD"C+C!P2mgc0&Jq`q?h1u"tL2:6C&/8rQt'AnK_1M8TbQ-Rh^eb\U":/-LK
%=`K*.W)WXPNp+rGr;!h]9T/P&a\gk#V)A_B+^(X3_fMs6LOH7Af+sooOi-dCOZiDHCQ:lD*G"fSYSNNBI.,gP:@<*f%h#aKn&J/g
%Rgh'bUSNl,89Ri9-aml0UK"Ng8.clm#fZ<IOU<*9KlSN:^FKFffca[L3^m^4DET\bcCR$k;O-Dc$PPhch#o-h8%fA%#gN*"53D,=
%kkLuu(W)aSK0uL*b-&+EC9s7<<kd:>YJh/X-pS]fm"k7q<`b_WEcFZSk]mTLgA%6&0:9e-'P_>e_VU`'=\A2gg2pMiYVDMpOmfQ>
%9.e0i!@!IHR\>.a[8W.5me<9sn@%'kk+qq#-)2RM43QV"%]W4GIFa,cW7f*)+T!Xi>O6FiY1:6[gcn6;4A.M"*$B+q*i5?0Bi@OC
%EHN=jPr=qB'ec4P0SV`.Q5kt42A^mX8qX2W@G/%?p37O;:r:j%DGU2@:uQ7X<$TfeX^l!6F4X6B:ZgSPbJYF5^Q6e8i>P1r!#<[k
%"7Q&AG3mu-nl#ps4Y39>%MGpVkh4Kf4G@5u41o2D3][G`bZ)3EJCs3To!_7T4[R"0Xds5K#ut4DpVjoZAQP-31Xa&9`'*J]C>OYS
%dGet^3NUMTJ/7Ms/$!p>+^Du6`3TToHApdO'mF(U3mj.Uh+FWG&Vl-^=Z6_t'A]h;kV;Y`rA^<,'V:j'n]ESIiRmgPWlZFIEc,sD
%Wh\\*[>75JZ8&3B4ZBtDR;o5)G_LQXJ:W3p:5)QgjJ5d_-K>NOLiKh.FkQ9lM\C9j,d#SkL.rqr#^*NBDPs-,^3-+G6Yd:REF#)'
%/ZM:`PBg8pLe8"".JDb+jQa%V67K[Q?q%\5/OZuCA5o9Mad"=0"JPJll?rq%[*FF_"Y'urhehYF<e^dR".^IR*J;l:c9$OKrfQU)
%g]#(2p>,34IbKWUo<ncT+mG+u)FRGA7RTRfdF'm&_9C#\%`=>nWS:tMCTr=he$=gR8U9fW$5EqeFpip%r!5m1`MTX>kJgL<+kdkK
%3@L#bN6M)$0u=jo6a_BV3tFLg3Q$Ljn#'.DWbO,J;l?ji49A%e?14)2R>Ao"8u]rm63PDQHV[`Ab8HaIYmFr!MiuH]B)JRJpul%?
%LsrC(M2Sq:To9^2($+^:ZNk$<GNlg#_G?S(9*A!?=g6Ge9X9^Cft"&?2N5.`4&9EDHa*\*[]/jReHXjH'ZEsL[jXI_(iaSpokGs5
%6+E@?D[<*NJ7l8ta<^S1n=;(8[Y[gZOa4oP-?+5^LM-U.$D+qu?Q,X:_oIal4RPkp-phm4rMlg'l_GY#T]JW8m7iIlg*rl;`9=^L
%Za:11j/?mop=0D2W[1ZMWh<^M"ojs1O1GSIZEO*/X)8Ki+/pU;f9.P)UB(Hb0iO>!WgUk]0b".8&:a!s9qfR!;&"0)S1Y/J:UU'.
%q;r(uhqQp8,GA3h>U_]GX35ee%j*TbU\nuZQ&;A^<G"rUN\3"%A1+jIO`2IAmISMt^1`1BR6D@]L.[)TgW9%e:^dPZDU+8up_=SE
%6;:;k5(7Zf-/[9rZOU!F]lOPIca)k+=P?>n(?g.seb^:%C_aDn"GGT"g<C[D-Eeq'DJrZmM;2u8Tpl.1Wf/RT*)L/Dk+:0g)uG?+
%cIU;n/(Le/RPsnV&%6As1>Jm!U-0'j<SSMiQ#i+K%:<D3fPN?F\?:2F=-\*3j$jp&fWW\[QJkQZ%\R`>p2mQp;"PSdIL-I`IApDA
%fWWO8Xnl3`"0aWWHpR*RCYGbLh,Q+6@Q2>VI3O0F4BuULb_f%d5MjnX#E;DXaG-0^Y.B2Udo6Ril'U99A+JX=V*s)ZE2ro!0n4*l
%]WL;X:Nf#&NO7J'+&?0?V_jK7I-jAI+'!G\ZDh-(0U*f9$bFZ#9oFbP;'.YN6s^\ZYOP,2S$eohIp7O!D3thJhlG1#'oTq%*67VX
%A?*ujU/=otj,2V!;ke=glG)^q+JtpZId*_sk7X1Pp^H9`Mg3.Z8VJufIlCVcjI>B]^MT([(Z>6MZK+ADBsC9a1GRP8j\\;D&@5H[
%'^0-TdMlm!b0P\kV/.KB1J9(7PWE(GV'iB77n40M*'30;9`?kQ3^1@6&Lj]XMC<bfPl?+mM^BPb(T!Re?6(1/QooN-.F91-m!,hI
%QK7rd9]SBir#%'>&7WrJ@3`99fY.rIk"?UO&r4;g5ab8NL'a)mY-`jDc,uDKM/I(_4(%PZTC`#-WJ>6R`LB&*7YaFJKsT]RVj79a
%Vb+p6(R<*JdL'b!L+I4kCf)/1g[:53=U@sr]26O9Ld8G;\0q;9j+Rlo#.73adj]mU8WCMYK['GT*]Yi9;-\8S^Y@W!_dN'9i`0"I
%Zu!)ofH2(L`#5"j-YTkpDlJ`GHoA:_'mpiW?$E@?lfhjE`'n4n2&B[t[B:$@M/8tRQ70u/ULlYK0(/!;65aV%o,JfoG5=V?dge3q
%NNbI9VV^P>iNJ]O]_Mah_2HHg'kl+h.\GuhV[H#.e+2CW$7UJ/89\)^=Iq)+0=ZB*3Qpfb].1utpZMgJ@1`<`ki#QZb;K%LZd$ar
%U'A[.#I/@/0WWpi>G1"98[NbkenS2(W@-)SU@DGN'(pZnf[E2.oalP>HV#:&()o2X.hP8+eg!uJm2j?o4'm,Nq2_tu>_C@&5GZZ@
%T%%E$=?EuK=Y`Wn>nK0-3794Q6sd0CY-bl'W)`G/ls*EJ@(iRddL&pdeEW]-H_hIP@ZInC8tEf9Vt,Tl=,D^^\X8ET(0:Cl$:Oc[
%&f_+U=S/d/;Co.5Q@=OD5PDuEV->:(`Lh%&\!_=;.s4[\a09L(QV)%=M*O44+GKVO+`(GgU-:ZMDn1'ED7F*tWXSjZllOiH2)OeG
%pMI!jM=-lHJL.J_;M0[.Ts*)>o!`@7j'mq$JaUmpKsU9U#=Xr3qiRj>?#bk^i^n%"9eZnGME4J?"\kl,("lVB!3nLF)a+TaNG=Z/
%kZV0Q)lPI/_R#;39s2O@DQf1T>+OWYD\UHajR/L'"1#,QLk<*',pcJn\mTeEUT4b<&alNS22gL8Pc-1]lm_b380moeE6WNN*\X?a
%Rcc9qO0F>V6a(>-i!!ruhF$U;ND-m$5Uk/a]!]*H>WP/fZ,bSM-7W6tp"cTqcl]h5'?n9^Q_;8bm5#nJ1;t\<`Ss^#.KOFlDj*`K
%_N][E=1,1#a(9.'*/Uh;l_:O*\_7/gN8DG3,HugiZM1@l*@4d?fe\e-pnl#MLX4KgXG.9(B9tIH]$)BI<^%<NT[W9XY;qPED:@kK
%OJOpG"!V*kGB`Q%@/s=Yp=".aSh/iipWbE)^gX<AG#brYJ"7jXo)0nE:%aIe=6R%P/h-)6g$2`!!>VJh!YhN7*PuLN'LceJP/g%6
%>'`.Ooa?;=_H0uc2\(X%<>iDM;dSL]la&^fc\a=G\LN\hmo/**S@fQOiBuFaiT+lRS>Ok<e<6_VU)"'L@3uk]a<h)IYk:P8Y&`S,
%HD$KqBY.g<5hHP;L^u#nD*"`o6d%<Z<')al#'IT32agTfg,e<g%2DP_(BJ\H&rh8R+H:[Z=5hQ&&jca@K[IRAoX^3W_gt>5<U)X#
%loeN]q$^j0mF<ijd,fA/;nsY$g`d&JKBr%W,n%ju!8X<*0\m\DF/@Cih2k^o)jEPZ<".S*Xa,+2?AG<UiAGJ[m^$d=@\L.3Q0EPX
%4UQsu73M)RERM9DP9lk<4WRh431D[<jihbEcZ)fNp.BUcfV""]\Asn0RD)_r3GpID&?3475]P#VagObkA_J@5cm[%5Y;UNXWr!t9
%Z:A)[KW&>fPs3a6E:;s=)tK]AK"tF[F?8d\"mP^th\O`D>3JjsBg8`r<Gc:^ciL\j>5bUaX$XO@2:uM*l5e#d%>5No#Z0h($mCa1
%_ffjIOPmn*hl.DcBJLW[i[2(E-(<E7km!Z0$eU81O5ipPj3CQ:^48FqYY'0$ctS&Z>N0Km"'\'i%<i21VrSgWBAK4T.Qe+V2tcEi
%.M\j\cf'R.4X0)=pfmbX@m[25E&=<"9m?M94Y7#;4/aF?%!`pa@:OuB;fe<E>PiAZrt;dC)BohKFKqjXJ*fGNn0t-5.D+qUaKn7u
%[Eg$?a\l"e@Z<hpjg=`Lq5IZfCmqS3d6>33pQPMNK7Js;h[S5h.;R_5dW97(5e/U3Rk>?el+FHVkX$uoT82#6?#G*T2HZ6R9oi2*
%3M.qb^PV%#`suN+U21$2G#Fc/;+.;*+c7`72@]%u<=TqkODp\5n_,>F<'#?M+l-I&@.(!XL/#=L`n7M3/Pd`U04@Qf;KJ4!m@K=[
%LkIb1QaRsl*3J;0DX4iiH][rA%&/$U3ADaenk%?n2rYfbfP*7[Z]15K,GaJEQ.hMV&W@^+><W6riS>*ebneX1Me/gr3H\lOqmaS4
%PPlPXCL,c]VF\!BO(0D!OZuNb[SrW#!+M@="9Y])Nm#/Jj#cVofc(InHe<-"')5,2p]?.)UFk!folN.j,pW)hpn,IBLl+g\.*DJa
%i.3u".$6^T`a)EeQua"N:IXjqpJ85_kgciZN'gGITrK%L.GcXf<e"SR#T(_%'"sXKB\716kjSI('i104I@qLU&3;Lsm<%1j/]n:b
%0ri[R_`G/pf[%`g#=Fe$4:76n8AcLgQ)/9M;mQU,3N4`;?N_)A'f_`%><Dtp;JV<G0hSKq>b(F48CCNHdud8Z%+5h7UbC`EO'4ps
%rNH?`[<]'>T-T"3?SE,;_adZ08iSW=%B3:o>bL,nE[^<G+>gAS#U"-o%Pq0W,gu:!NT<PWmP;.G8mZLJ7r>l&VuN8lN(O-KkC+1a
%M$!t!cZSLd@DkVZlLfIl>HtT8qi]8J4:rGl!YY40(,hOuWI-Qp..fX1n?hg:\8Q_%a=<X/0YfrL)OKIm?jZWC!d#(,M6M@JjfY17
%mo7j03hT2ecKi#%-B-P+\<[b9I_7F3QgrNo0g5fS<Mb-s^mhjeM5,QMaHbOEjDoLp@NfPUj9!a;q<i3(WISAM+R:aWG9HHIVH^^Y
%:4I`LJtd#$M3gCDqrp1+f=>.Y.j8K0pj[4QmD&Ips7=e@pkQW]lrThXocHEUI[tue^O>et5Psc]rJ,Okom#WoQ_+T/)M]d]Ko#HI
%,u$pgb"g']SIR3i$EAb?:u(\u+"?5hW7,EnTf:/cE#&:/AN`]@(,t7N1n?]%cQHR2e]`Xt8'*s34EYh@5!UY/N=^<jVH^"Q(q%i?
%>hJ*=iiH%Y@+Z]<+G;24cl<"t9I"@iK7L@G!mY+0!l5.d>g\hf4[P(bHKhJf5\#<[[/^AWE-V%i:6.;.-Vf:sr'sOoE\s\9]pe)(
%G^1oaeW3(CetZTYA*U3qcVQLQ,\;f\R]A7_)&]\XgUYK>VfI4KarH%3!not<f%lGH"h:GDm1-XZ5;k^!Gn(hN=a/J]J7-nD@>H$^
%$;";^<)n<:O^"i'#tpd:!A1E+J1T?aDBZ$]i#5El1d_I&FDZ[@'N\uXd&?;GON9)8AK+]EG;+i).=mtq;D4Rp/VVk^W%<dIps:ut
%SBD\iXi=+Q<0Xq[1Ihim@<'E2=B/e)HA'h'pt1]<De4A<AqEP0-??);=%1qAN@;:WP=j8U"H/]SQ-F])s1gdY?UQF<\=`Ij#l+ML
%R_$Q3OkREF$H"9LrC&Yt0k)XuQI2Um99^c)qU--"BSr8_L@+50!pjR@>P.l/-`M?a0P=7q_#DQ2GOYXrFe%bLk?j4A>jJO7)EU00
%QZ;U3m>m+T)-p7"2<UT2P2_o[Za,Ebg?efHb7.NC_5aE^n2<KY'A%R)Ne*O),q-ptr]p0+<beRJcth/&d'a4tqoC:N-FAZgbL,[W
%R2`9YVAW)5[,F+d!UJ_V,,><Yn00ej]9PjGqm?Hg\@-c;MOVh?9M&4kK#JG6D$,ZCn\1[b8GH9aYT2kKI%+C)0ef7paTJWN_cd3V
%.V$(H$ZB76Tb^RPkNXDDD$^okVB1plqT1L+efJ&&R1T0(n9&5p/4lIj$_XYFOrV0]Y:L@9<M1BbIbUd/gPSq;rhZf*Q>19!GolMX
%5NqO=cRo%7gUtf;.W/P4EgT1e0:A_G?I6/!ZUfDRm/Ci3n6D3K+@PYC_T/52O4^j1J(GSP%N=7VY#OSO0g&LjYj3&p6Nn\iA)t#q
%j?6VBnMgr-`Ed/BJhQe"lB5B%:P?6G6pN4pM(f.dU1huJ'm^_LNc`FBCOCAHEuh3TQRYH$WH@4hB06^P6M&kig@&8cnhH-D>,rB-
%:=G(r'1,IRY2W92K"@)K\A/j<U5oQ6DE=#II'XFtm*4$pM1EA*^Ddt`nP&OI\$;iEKK\d)>Cg=l<i\PD9sHEL!\ns+pVT<?&0L6e
%[?`5q';1DHDB(@H!G%;I<bK'G"6*IIXg>kM\Y:?q"]^!IBq^Nk^g(p#$/J5OE*Hq5&u8[f:T-U2(KA6&aq*JcY=/XG8@?(=RsLc?
%i^F-]l5sS\HY=[,3n-rZE3*gOm*7@MT8FrP0^SHC!hB4VYS9-'maf7F9DAYI:V")=Olp>7=h5`0m8r,FX'B1uLO_[8>`#!>JF:OL
%o]EL8-Hq(70V.:kI3J`T)VYdl]D(Pb'V_R%PL9s+99l*L>sU84Y6kpSiV;>hXd$]^702j823WGdq)KmZrQ3Z,"DRhJc4O6)0762q
%au!.9YOT_=W]`gj5<id+eJTH-ZF?rU9[lDpG>QpZ_K"2\?3l95NR67JcEF1"iq734<h-D[O]lR11-+J_mXg-l*5.s;NUu;R;t1$:
%1tM53;_9+K.La0nk)%aBBo,gQW/rPDpl.iVg?$$8o^a/\O*;L5mKP;*OM:m75R+f.Fmoa)/JoQZpo,Hi))cDWo#>\]\%H0pXs?@V
%lkLK](k-/Q23A8SH.HbW48do'Cf=Mj")12<AtsQ-p\X1H:a9OuOG(hmFdnFD"*q^h%eGN`1gL:WF-kFK7\(SG&^;#4i>#UT0M,9-
%iq(c_m9J*ko>IBYNS-[`@+LbR0?C(Tn/1N'\=+m+1k=TNZDuO,Fe"06!O]DNI`$Io$\:egIN$])cEXoEHlQc003nj,36g*)hDH9n
%?fj`Z$r'Pe3b"&Hf`>=Y#rL3K3hRNOZ/pSQ<bKF[cirehH&hd!;Nh1\OR5iC[kmtINOQmJ'aUl147.O$X8dX>-rjf]%ps<mW^)]a
%Ftdc4"m@Ws#=4NM!:SB.Gi%"?]<(Zo9D&nA>p8i@,:jQkGN#/ImTOQP/uc,\i<6P<%T?IH;)hPtX>;WO=f@doAQFM"+Upb)oHUS(
%arV*=69*au:eBp-`\FOfEKi%?35LR892n=nq_Fq'>B6qj(6'LFJU24`Q0__ni?fNgG[L0jJQ,aJmPj5Zg,[#^O,EW[.k2SVnV"<r
%rY`3u"SF7/`n';Q`2J(+f-@dp1a"J?-al+R5&m/pV1-U!(2=3lWa%)!Od$/db1&T.N2nM6,llJ%cN$Wgr;^Ncf6Dj#=U"FJ,I3ho
%b#6O)7D7>_/^+sdCPl2tfhLKsRr@t5.m8CFiT91oh%L'4@h>"jqZ$5+UV>`XmX$;o9*i>e8Z4S6VjVfb7#pbI-_6r@U&kK<_UW&9
%@@rhS.g20e*L4TJ1BpXUOhJVn;qHWK6@r@[etB<1#1,s#mVMtNcVT9Xoj5m#X@=sJB1\((*0;DiOL#PA;EH"mB2sAqdn+dj4(0W*
%V7s8`reU+'mXLiI$uIj!j;Jl[BP:tqLDgIIoPqe"h!Pl>/>)n,?Wm3kT&h9^X<Qi3*.0*LJ:[BF()/S66o&ZK+Qt#i"dtDIQSWe*
%]4/p>jR*&;L*"g,h[5!^o1LaY5u_-IrI$&Ijo_rWV:%C<97''[+M:Pfjf>A3*7GL*Mjmo<I.hnsPItO;WOt*pUk,l?St%UiR75uL
%(@A5HBd-'J1pGkClWG%/HEAVY'0lj-Ig\()rNnWPWDdB]CcDL].&.cM%^f"k0n8mSIVXleq*YG3hg@K!G!_l?b+W@7'qDn&%jqc8
%;4=pKP7Kfs0P*8/Lq?=!LS1):k;j*H>>Ef'T1[g=,S?gbldBjaM3IKV$'sIUd3kM:idf9>V'qZRiU0`RB/bNf`bi6jI@c&Ul[d6\
%*6[NfD2LXAr:*iEJ`gr@DP#M'\Pb-<_MCS'qEp<_"B13AKk.42rSlh1P,#MPS-dI;.;.?mY7^9rM^UD]1Yb?.-SO*AK&Zk,gB<eu
%eJ:h=8W@K4-_';bRIkq1Q2>.)s15mTYM\QP%n^W$]@'AaE7pPC0B'sRBS-o9)HX_,2tSZ=V8'WF,EZrqI8n:G&lJSL3c-T2_t`Ur
%@Y+Vg3gaDbkI8qFL^0CQ(?Xf\&AM]J.pu5_fH>E([RV1EfUedJ>>A,:+;PXDpu*,^I10;>MFoS$NV,K"RaiM_bY/#<?Ie2qWGOG^
%$"[/-&K>[;K$Btb#_rGNFeKV!B.*U6F8iL94M"B2hD"bD9;oO_[JPA6r](7(QV;_Un>t1hGKur$n<$M?%UkGqrVKAhC$\Y\QRl(c
%5ON;`q7rr+[RL4`eX*8!_8FoIl%jjd"kS0c\;kd*<\#_`$KYqaEa;q'TCM>;^;b@$]aecUjI5\\>%"qS@k66WOrUC>OTQ"Ji=Sm$
%&0M.#VWZW?p\S3@YCF6fDc$T)U.WEZbId&&%r:e\!i8$Aeq-?W-nJ`]B`JX6:dA"rjmmXmNs)Cu@;mj9RR^E8/HrrXXl=$\b:Ff,
%(t><D?rJU5ALEdbRQ_<X^Zl7V0Z,c'H;no8$[0G<2WCO4ob?cL.%j_s63"<\r-ZRE,</dbp.@(iKrV\d]b6("R+M[D;429Y&WBqr
%"t#[<kf6Oj-6blHebS@+e_;<q"qHV!o-AFe%MlYeLh(7@fRn%acS#N?BqLJF.NoKJ7"H1th`Zg<Ah!EU1JOIZk<iR->%-13Jp0Jg
%P=T*f0<(LAbp<Q@:(SQhD&%"t)=TA_le02k&!;Pk<?#4OHJ9]WoBBL(G6$]SP]GHHL^o.nS#O=m&^RN:WUJ=&ETLPg&_,F6@QJ_S
%,WVC_p0sEq+:_hq?c?VLE?uo_gb.:lSri5M2CQ)!/+g[$hZ`ePQuTn-BDW%*l7BT98AHZ.^$S+boXSp:SB'Eh3@CC6nP0aCBn\r=
%,2$50THFW9fR;B]@U\mZ.)3Ik\)W.B)BD1#kl;(ue,2s7ZcRTA@/[SRI0jQnFj;C)K<Q7iaJX>=,U`rDi6LSWWE:I\ThRT+(5-<+
%UI_\@(?O,gH^a&!+-KO\iBk7!L[mo/Y5?u0MtaeUn(=Srhif_@.>=HGK3f:BW]]9ibS-^r%;Hba"'dTYn30j5J)heZ'1%:5\IOLU
%SO7,*_jt+e!S`l[;01q%C'g2:]Y/0)r0_F*doq8De!tj$'JhA=aEg#<IU0'"+qdMDSI:5/n2SXQFiWP;nemKu0k-YcbZh^ui`AkU
%DYGN%2njZPUOI$ariS3MN/\@/K!6#XCHFOj,I-?e`)`a.gYnQh+kF$GBHL1U8h3:=82Ch".=[]c.0Fi:EngW&S>!2oRV2+(P#"3U
%Gu&^SST>=&jJ>:D=VY/'<4i!/lo(/EN;Z,@E?RX@V0U->0"7)OLp(<-\(@EANe^nNo>NQU.6g#WiK='9C6Yga1,&6?B9Jlc8q6G#
%97?EfYC?/*hnK*g2a@63_m^F^L&BJFJ,E>eP@+:R5C`:BD]ZXkn\9JCr=#>])2b_rA_aP?o8hdXoC1H#^q]`rQbWLhLMq\?a)?Fu
%h&h+?X'[G587GN,2uV!Nrq<sRrg2NgJBd!N^VB[5_]O@-pa%T.s2X$riJ6<LIiuu,X'__!$o410\@p(4D=@A+q*BuShmc\XRi_=k
%&&8/<a+&Dr=.>hgB8RbNNdLI+?bc&bXRcu&bAVn.rgS[%s-_d4p5e8Nei17ohg1(BLNun"ndWA3J%kg)n,MKthIA0F%eTL>RFh9&
%CBP"erV.I`q!Rn6IIlrXrSa7'r:nMI^OMlb9(0A-g\X*M3PX`ArV!^E^Ad*#YQ)@erU+lN.K8@kZi8jrq=0sCJ+n\IT!.eW&AZKI
%4GUX$</BHU_csKcduu:iii*LcOGA`6*8.7FaVcs'OW9q:G8F]B0C69J4>B0opW#^/JkNtK;3bs)Q%,4/SW@ZMo32_#X#GFdEs_9,
%;gg;P<8=%QWV)f=pHSTFa)<$5qoqbKpD/_j02gRYI+G"#TgBPpi4J4?GFPXk`X]c]cWF\0.kimGS*m9e<nSp:6[q:brRRP0EHUu5
%*qp%Bg@qq?1nQ>i0o6:3ZHM)1VII:N#;WpbITLi:FaXuJMW(4&:oL*bf^QK<@[Mm4_3pJu&5TPR5sb0DIF0K&<j8f,._Lp;'t3[%
%8B,4t\CW/_1qpFF"^1Cb:;9U@/^Emrd`$)R4NmP8Vp#7Dn7K:g4`1SQ&=(-Yl38idq\OBXU:-h/n[iVe\o4nT^'T:1.lCuW<9R)#
%:=%u"co(O\J]E^5P,gle:Uf4JKl(,IgTS<sk7m0;L]![j=-)G*r#_!3Y10#mI_J/.V>Ko0/-W,D@gM#k/A8tk.rB9<nru@`)Y`13
%531b!+SH!KWecfa$0^af<d;K:',/`!GN99qjGFP*jl(GhKi$.X<Tgub_Uga(EloK:f:o))3XG'`!`ulqmNT;hk<&6i)u90EO2kP(
%kfu<F&&%rU_.OLV4^*G)rb)TJq/m"T8k<idTEt=5VHrZ4+!/OT>OV5s$&Ti-bo^uZ*`Mk1d<:uLgEj?>EgaW4E>RTY45Z/b>(XqQ
%T9$TXd@GQ34ek@<[!3KBUa4,Q9"B[>?=p`QS`uCf=9t[LD%8m6(cdmcU2aV?5RKV,@TRQrZrlqmk:T"6lWD-i:$s^M#\!%WFN#CT
%"O*k<HhBo\6;ie(+/NR,[*r[NCRm3kb7lJKG/ui7QCRqR@A=r<6CoE[Xq$EMb-u5U("c_PP5B$f:oWbOGt1"0=RUr]^IM'^k4=^_
%<N`XaI*>d&UGm=EogKW0UrOM83Ld2n8^E6c:V*^USQ5[[Grh>_-bDIUb?go!/iH1`k8e$D<7E%jCZ(;\KIJ*q;Bes[GRAe*38%Fr
%jl@+Ha$&5!\Rrl)9nU[1eO=H#Y-!L]4(YU6^>tM?.(9?7eo_Cg42fQjIG,i,?VMbPjRZ:k*m)as4s"p=Tf]UYV[E1GBp[Nmj'6fA
%7[S8F)af9#-f!nZqGcE;b!8s^nh+h?93uIa:8cTA#i`T]kOD8an?(TX]1_="nf(pkVh`auQVcQI]Z-_G2c4I%f0_7Q'CJ^d6\MU;
%\MZ)Y=Ns$2aQ&/CA(3pL.hK<kG[hHDP<V0mYLNfqf>iI>h@)_i^=sfYIJYUO>U'pW1[i@q&7I'25J'&G,.r3a47\/2q;oN?a'GS+
%c9-Su6Va<*M%k.[3`X?K!`n^*<\@iAHQ6PgY+>,,XAM8[1G/VNU:^itV5O=CNp@i)S(QTl)#9EV7W.#r@.SB"e/=8(I'l?(JUoW(
%Kn%0,0M"XB/E<`_cJ42f\;48\ctYJqZiqdC?"m!VgE*.alEhGD'TRT(&]-1IYoc.!SC8E;!"#[]]R5Yd7T=)Oq<Y/$cB6>];gusT
%X%2_j!R@TK<pItF^Vuibf?Rj4Y*u$EW,8.G,V"%6q1GT13o"-]T5rDmWLUUJ>+)r=f1oc:)<mg+H7FDh,i@m3-UfQ2a(=0=9G;oi
%gECrmq^mS.,Js_':\umQ>_l@e>b?2^DVk/fpu+\iq<7EIQg)%:a4"g1W$is_>?+0lH[*e7i.r':P^AR40G\N2.JHkEX&g%$=Pq\6
%iO6:Dp%:E`O5ph4jE+NDRJhM<!]*;oZ'TYrKWf=/jcE+]_WRt7P04tXq^+[0?64;*?JkRMr8Ee9q!cJe/lQk)T'n/`s)9CAcWaIJ
%#&U!*ToDD[8#*-@\1<fJcKT4p15uqcW.fPp##pY6,#=nEML'S2g"RUl(MsaR:u;5:F\mnKjN]m,#&Nm,l("Z5#@tW5`B"(Kcb;u,
%qIrgAg7#%".>%`G;SV.,q\P:+J9tEe3S:"ja>A,^64Z<`E>REZji:lnqjrJUZuJFa8&A$Om2Y$q9=p&4JPh?qQf)o-K'0%c'r#&g
%oUn_$@)uDI3VkJL@S%ZcR4S?q4\/J*O<Q1>L(L@@f-<,;eB)_S5q%m]VIh8tiT\>IiXNC'l&ab"46LV+G7fX/lWjdZ(+S*kZ[`i'
%P0kHE?W2-T;WMrkgE%p<#QpO1U!>UM0agfnd66(]i+d(%4l9NW%Bs408P$AXg.<Yjg*+rO6L3nsh>Wd^PDu$6bDTYZj"RHi2F][f
%["K3U+OX?:#bg7@r*iG3e<cj6=Z>lb2L%81'6$l[XP+%LI/UV\*3EBSYFiK"PCMgH#@Y*[/t8UCd&ZfLEV'<fm.K-X.(n<l_CLrH
%8#)ZmRo_T2]PgqRmuk6Qc4>7W"]eJ"iIAKP+6#N_iOOEQ&g[/ciaI7RJ07kD5Fuo5J-e-4XoM]s42W3e8<MNGBRc/^KiO*UFUYmu
%YA/K7^;D+9"kON,*S2AL!>Q0E\I<fshRp`T^V'%rm,c^abepfErpFs$#e(/t3*K4[&^X:`gR*YTBH&TnX8='QSYnih_Do';$i_&e
%'aX3TDr5OAO4m4HZ`ZNip(=m!Rpcidm5nS6k6mp"?9[c%4FHsB)t<=Q]F2>">VLpk>cLBZeKOBbQZ^!_LJYuBD[PeKr@k-?WMd^*
%lBD@D9#8Mi5a?(_CN=^q+k):d5g]72IbUOaE7X+jod[Vg^f>irlXe`72a.!9lfPhWo@<^'98XYZM[@k!'"pYT'Am5$DhYZ!FNTF@
%.s5eO(0^8qQ-A>)VT]-m11'W2a)?MGF6E1,e>r(^P"ti7IEu=T?hS"G5/PTtkuRaF_\]?&JB$/mgKEH,VgJcj19NH8N40K.?b[<W
%^=36jj!k;9BV?dQ12KfNo;5rWG;t6o@<JHShY_W#5ok=np*..pLPu(XiH*Z;V`gT+Rk8l1`ra_-C,&M"0c&duk:;<+U=FSf0;'CD
%NaILLo5r-opS9Tj)4!1.,pKM\0SM5Wc!Ub-+0QZu%I`a@lpZ.\:T+,<iQJHl:O>,5cgSa8;]hKjPdgOX(8s`9l!%5O"G%FL!)LqQ
%J2.V/M[2Q\g`#'7P!d,d`4]<HBNX=8_nEU;+`H^+f:APNf1rGkpD$t`X:k,5cJ8nU&^GTVeES2!)f9DrmBc,_?muKl@)$uB6g/_R
%?MOBWo@#>05+Mp_552,sX^[LC%H.\`p\RI$&ouY>/F]qFVGZRdC7B_g:Wq].`_G.BIt%?9-*5qrrFX]?E5"]peq]cJBKu522M9ZA
%!7:NOLX9)Hn\Wm"T:^9:HY4BDUsQT@9a*X1-n#qm31j*kOisnK<s/B]N,3kOlE.naDPJ=;OUcGSjnpjY46G:?e5PMmql^N=#FfDY
%+!2`-m5a?OoCt[dD0!;TouH5sS\mXZJ=#HErr1m8]Dq]=&'LKJ/7X5`)2f>sUk$WmXr.q*`pT8+pD:=7+5e$&gEOYtQe,2pIb4%L
%Ga!loQIm4m\=Y0PmZ."u^AIWmJ,%:]Hf"P0s8Mn6If00;QT'2Lo8=]%22jf6pLgAdT0>jKUm(=-9G;N,$74pBU!fYtB^@T:Sm@Vs
%X.8(*OIG-6=mnA$[Vug&X3,t.=Vhe,<L=RmT._G=V,S1*`sD9V(%U$``3@:/h8n_;4<B$Z6c$[bdn\l`]q3NdZ[Heb$ZI<Wn'#).
%_Y^W;_mZXP-#l1;-DrUOEc@$he.G&MTTi\?K:NlD\Pqu%ccnnW8a0^?h"&^N78HR@o/c4e4Pi@K>i_R)$EO+\C^28I&BNrJVT`st
%]^FmZkP&<&Ho_S;Y68/RN,mL[Rj,Ru+1UbgG!CO2_i%:c.rS"^DcJY=?a^knC?V^eo&a:_hKLa`'md3>[j3uZqnC(r7?qRAS84!"
%4W==aCHbfts"*u]44bW>+s3cP6p>!?EI:>V[Z:<ngMGEQ!h#K\5X[)R4Cl>2;1l8r\SS[6l[JC-,Z&J)'A6fO)fNJ/7^0a\a6A:'
%8d.gK(Qm3F?K6gVit"@u%Y3`G2HVq)e32,.d+4\EUO@D47*ToPU?<Ndk]Q`Z<=EWbohsbKh((mS4fNTT0FdGE_6YVFNA:p5\$sr&
%%n_("l2oJ'K9C!ucIh>,#@oH/<PZ'uG<hHTA@U$7.h+M94*=QO.X/0l2:"VO)Y$7ki!s0&*4_*+,coZ/QAZXn]5h80p7['78dr6<
%TiR(A,[VSS:f+<!P2_54B9P6igg7mae_(UuKRbT_XXg+7l_I;je@[jLcRoO+^M+W/o?JK;SH`E:.h%\Cc*cJh%r>cj;Is[q9fka2
%a.$X]lLkNh8J!sRBM0.S('5T<_XjkdDI0UMUR0o'&KZY_n7sY-^c1=+i9uDm3-Hf$P>9$$Hd)lb<anZ,$fAW$D#P>ZNXi(6cnr$>
%6P0fNXj18W]L?1RD\bP)7"7>K`3-[EiDT0Qb5]H&BRte.Lq>SLQ,El9`X>BPL/[]-pFsCeJqt/jC@r>FS\mc$2MM;.l8Wg(Ku9a\
%]@I+R$N:-$5YZlT]K<NHS;cA[Mu`l\POCqMp"oS+B7Wu^77c&'SJ`\:#%],?+)>/W30Xcr3$;Tdmcbq(bfmX(lWRKua8RS4Ui$,(
%]M`$SaC10'KJ49HD[6kRL/>P;g;e&ejFp'*2mjTTD(:JJ?-1j$g`KdHl<k_2]6XELGgHHUj;<>4nl7D7/sk9lq>uV)=kXQJjg'V%
%*TpuD!&(#QIX1OrDK-`BP(Gl@pg6O-\)'RiJ%c,DLkHm<+KIuu*++t_6c$XqU9t,`JA-/K?>-/G6C02dIIPkDY0<Y@I(&o<oF>BW
%IjC!B&)Dmm!#[O/'9en7cFesE1fmUnTkJ<igfq7,XN=Y`]Ju)K3ecS>;c\.u7GBqn!ob7>.'Q>j'Mq*srFHffdm/JE>LWYo\!$*'
%V-,M`25[UcV4ie>oXHR+aiW7N->d?B)KIKuU9#uCVi)q1Gp<RK&/]ckIU;7jX^T?[WnG8K($D39XYG>uRe1$bfD,lS8N.cScAm\Q
%kVWDnJ(H^?X\;:0heS:n(GL&;M`FTr9mSTK28"cSiMX36KAo>^`S+'CYADM[Q[g3A6b*M7cG[tS&#"M9/51h-;h<CIZ,.se,O-O$
%]%J3%G14cd(d?MBBEAC$MT*OQQ]Fp/;sDCFlr6;]^s(&.k3C]o^o[le&,AE^#'a$4$0lZmk7$sFpD_leNuE9MoVVc$m[iKhMCq9c
%^q9*D[H6n;%*X;W+2K]%@0kHfH.o?sW%s,fVO.[.dlW(%-f\0/r0jL[?e=L_L2#3ffs-K_>eptI/kq5o,/d3DI7lM>TF:&W6\N-[
%]!;k#[As)h[ViWnV]X@ifT85uBM]PJ-7/g\CJTAm<cF&+DIt;X!-5?VoKWQ%H<W/l=Z%8I%>J:V3CVN!e]h:peFqmW!B`t*JiGp0
%p<$eb-VMaP87Q'#O[@`'kqDE2bs&rQ=(mj^#T1<rV1jH+=kLMn:Da&]Y>EflP#Ji'jQj#MW'i4,OKQ4%:S5$C"`1NRG;^j6$>@$,
%gI8?g<61"m)TIcdNI\0U."L[YVWb5rDLL?0DX4r01hSN4Q83([,S\%i"F`#rEZWgAW?lj?&VIFQpZTaC^=*-!R)O[1Es[$%e9m<U
%;qBLI8_dsbr=@VaaPO-iqkS1pkA/:+n\%q`5fH6UpE_Vlq8JrL_qXPX1"Toc57):T(GCu\/H&$`285\lED^GiL<e<0'_!g\%aHnS
%h;nor6Rq%l%b&6!:5e&=_,mXp/2pO'3N1)h,7'eIP=Q!/I2\??!0aiVB&B`UC,/)Cen9B3L#&t-6b&\;f%LU?+4ZkJNd";;QK<](
%)nso8\j/o;8Xc!VTVmbeY#M.@UR9hq.Grl72itZ[KV'e4#cBCBOs@#IpY<GLp8F`Q-r2>,[L:BoZcT]P#1-SnO7Ne5,&FREW?k0[
%0gZZBH(us(T5T6h<BV0fMH9KL<+YO'OEN6KPZ)<I#^PHT"$7=?[JjL=d^;%d]Bne=?@(0<OQXeUrNUn%08-DK_)EDk@u0\&.qtPO
%UUErR`u:G,$Rl8K.i>R/n$:7>U2PC?Ft?jgpE0&@Fcq$'YD(=[J<Uu?V61t8]77A@EB%_BgfGM`-6#H>V'OB";jBUsXYN8Sj6m_l
%p&G*2WZ;k(O2Fjc-Yoo+a;2DH6B,7K_q&EZ6p[htgE+!PMIu7`KmFRLIL&)rh!=9?BX`7F)mgbHF"qPKNr\[W_c\Ho?%W]0R.)mE
%TO*OcZ%:p\F!E8@d!`M=``:ELYFWS^?fg&ccTPU.)eWINb.)6\#\Ts1qd\uHZ)*Ig"?)W(!F^gbPoLVm`b0u&A/>^M^"r>Yfm%4a
%ib`>g:&c4=k!ef>fI%WNb:.[II5$2?#AZ/s6rcA2*HZ:Di+@k;7J)6e3=7V8+h"*q0YFGsRS#2)o%<;Sl^&]C4V%R,%7AE@Z9'!0
%Y;QTC=fI)^X2DIY2<]6TII$F5-f=H!@c=M!ZPY@)]Q;p;'*E(DD1+NH;YCf)?)O\0qDjh1W<,=^hu%/fWoE=@m8OC\iXh\[Kj9R7
%f;X@F6o9;CWP\>M+HSgVW]M<nETcUs"?$6jm=NjE\o'jZFg`Ut.!1/B79YNl!l]tQlDsV$-6Da9:ELKlED;W1Ub3*_?pa>5CS43O
%8^fU^[VY'TCC>9P,!Zt395&^#qX_afS^Pb02e3L8>>#QL0fCNMVH*P/.W#@UL2Xil12nd;.C;E/\u_a#ma&ki>I;Xo=blPIK&ui:
%FtU`end<0M<qLB<Y]M)Q4'+OZiMCbWD2S+1-0\<[du"e<J59<>./4e?a>kP(%.u9jJ$8VtX%l_RC@:D5OHdB-dVN(\0(_4ETV4`o
%79:\a/af+PFh$E7#fj3.DIk&_\`R9_q8t;l!@U-M,<WS!Z%ah]n8bi&>E7fk1)"S1Y-J%Fr1`\''-,RI@[Ar$m63EP#7Y?s(>L3o
%+Pjj39L<_Tr+u-8q_/dHYu;6eY1"Z5S!2q_*mk7$d*K*Nh5jWYZM\I;D&(lm.V^\RkXu8.9Hb1@FhC<_`3$F8L]4f[%tAm4p"M%H
%?Xo$HYLgFYF(!f=3;IlT+<7MV;+m`Wm'4Mi,72g[P8<qim\nKn9=@d5\[$"0SBPeY>miuQBRA\G0O&/P9a)XLR"=nn=#1h,r\r%'
%eR70+1?"Fenn3/Zr]0T/=e_/T8V6uckATNTGrGqb\#%NV`r$pQG#]EPEPPO1!^T3W,cDVaYQ(kY4a>H[pMIeD&g:A/PI6%"m_7[1
%KPsl!%\7)6o!URGKWItdDH7!9GMRsEGph!D6L2,&lVH/eX'!$V2*u=IG+Uh'b\!)Egn567@7>2,FNE(?CnaT8F_X4M.qIWLKoR<c
%buhX/F+E1u/8PPOKt1%^.f9p8S6Xi9.Bqs1\7+ZY18fa]%[`YYB9jdLm$"*km:Mop@hFe=GQj@\ZLoKWAs#=jq@e5.\@]<ii5au^
%Nj%2`hN\n-i^W'5fO(\IiJXih8/km[_\n+b4n<n);`L9b]ilEW-NPGf4Cd&__-,9or+c)D+Ard)!aiDr:,Es,ICe7]7EF!sY",bf
%N^`XV>F<2h302(FaFVV<iljB9.SZ]e6:moWnhB18!$t^`^EiHp*r1,l$Co/'#''kN)\kX(+iL2hVWAAhkD9d='"UTgOV(Q>>0%",
%Ig)KV::IgY>WGnm+\'753hdf4kuV3)JE,0cLr)4j^E-T*]9$FLo[>Qb[U%tf?d96__4t5F\i.34GN"shb)6JlZ$YO8brslYr]]_O
%=B1,C("iV37tI&Z6nKF$prsTW27IO7Ho]NW!1Y2T&).h<Gb]QtS.Mg>>p]"%)jJ6]#45W^VcMT2p*02EdQnT!mTF4L_dMAJn4@b[
%p]),W_0m#`i!S2V:.N0"c-bEq_cG5AN&cUXDp>Ou3HAR3KJn-/(74M7hQ>:?aW#<$FD`8a/OlpRWlh&Mh+S"8K>:\,Jjs@OOhRok
%lE9,SRB?n$s(8#Kn.k%5@q-!97)8D)nuV7I;;b;cCu+tNMbC94-lDFEOd,hV9b`FDYBHW_K,=mdm?p9P%mWO"fo"s)U9Y7h2n-ka
%``(+q1Gls()bWW!/MfHj@kY!c]XViOq`$7F-rbkNmSHa>9P>2=c'tRW&UkG.qj9"t,Q(l,(,o)JGeW&CAno0F_tPT\O<I8ok7D@"
%e1ec+k#mi</aEhu+a5UPHdf&;0$I@:PpB7<=9,GTJt6g9bCX*g^tI)pE9m13H(@K1>b2!i+2Vk(jl'UOe5'BqN)_PBFeO*/E*4=*
%dc&g@HWX3D@Q1Gukq0`r>=d?skOf-oP6+`@]c$<h#VjT5c("m0(\so,%-2+CC,c=*:Th"]Cp^^SQQVVCY\8p7Mg5Sc+S#*F)2\0W
%%+SU.8OcmX7oq-?U1R8.ReD@h@'W^XM>$Es$=O4Z=4sN8TTDeRQ6V(8m&Bh6dDZs7HL+u.`fAe$qM0j1Qm]HN\P*9YqP>ZTMD!*Z
%=0I`:^6;[#S3fd\G[ao>3T(Oi/t'(c)-hO:q3P<+Md$hHc-SJ/.;Ci[Z?30:jF</i1B97[&L_$\K?q+(`9=JlMmpLho>Och&I<:7
%D4Q5DB;msZF!0il3ic-P.-`KcS\APH=Cp1aA!_/^Lh=7.8293E^RT&fI-J;4HAE.#P6c)dU.HjZ,r.k,VRX8$L(J'aEKBgDe'!N9
%m(D5-fi++mO\rpAfAt"*6V-a(QSR5Un>`lB+Qi==U:V:-0$[&u@6_16)$,j(d47Z`iR"JLXM=nd%ut4bg6WhCRnX9X[DWeIR8t,T
%Y1CiP'm=m4*#2cR]/Y"62cAIX1=j^X*X"sOD<>s[?Do9ZK(J\<2^\tV0GYsq)b"""`!EA9o>2q[-Bk>21HG#/V-HF:QJu4b8JYJq
%+h447j[M9p.-2\YS()mb2*9L:Rb&#?>"hMF)[[W_-V1ao7AZN4P$D8>qk@p:A*,rWef;T/'*-?co?h(qZV2q@fA4_?j8=_kN`fJE
%HOL?`S$eQPc`g%9@*o\-XU(T-D?f1>ke<F;Tp(h9WB(g?`5='=m#%1O:,K/3p>8($`1V@/JH^^t=?%e4FE`?H&D-aCWY[4OjE?5O
%qG^NCGQc3pn5TDOPBerM6[7F=Xb@rr!MO8aL:n=\1TFRJjC%4r9j3UdoiK28HSs00X3t&U%:tT2nSN2En%o@Q7F+@K<WYQI^KRR^
%&WN&b>#fSKG:g-ShdE^;1/mccXfrf19L_GO*Z/uH`mdi:MaD[Rb.%F6G8,ikU3HuWDP(1dY+u^PWIc-$%e@j"O9t0`KUF*g^f96S
%NNQuuj`//+LFl#]$O)&12,`7I1?@!tj6Xp\VL9c$*g&_A/mEL'^$Z@<q?Sj@]Y5V!UL\t84..sTi=c(=L"KfN9V`oWpQ!oTs4##f
%p*)Bb1<g_ZnP]#$pg(8p4Nsm_?OukN]]tY3+pqMZM&UePn/bBqZXj4\Z4m6,jSs^_G*4Dk;6R0V?&;`o9E6js;P[@1CKH?Ui=46P
%/"CLK@fH4CjRN*6W'HQGC(5q(#g9CAjgbW5?6n@!:%_Xpqh/pe.2AI"X>Bi1His,d9"ZPQ8dM9uD<B>VaG*_+VGFb1rd1Ip9CWCg
%H3%F`(RDS+M97l;)6jH(&a;QATY_Ln!p5nqmlI]_!=LCt+c[bjlQ0=56o2bF(RB0(S!>QA=3&$F&M;b^I*WTbR-c6o\\f+_EC/4c
%-nUgco+WAt]Zr9`m]PsK2(^=p)oJuY_!L1;17E-T;84r(^]2"pTPIben<i3?XqHEY?M.OuoHDqSVWB>@Vp1pph/MY5hH<_&4/k]j
%:Fp.?M^n;Ac7\(VAg(I(3^`c''uSG9M?>cjVA;edGDEts<QUeUIW&Q[cPpl((MK9-GWC.lbld+M1PS&hI4UT#JL:GbL[h81V)2I1
%cPpLj?jPJV`+`qYp*:&F:[haZ.9G\h/1_-J.W>D=bZFDV/o;e3X4+l$Q*>ZUV1FQSo[E8Rn";bKR).0r++:g>^`fi-<(/C=L_Lm*
%U&RPC"*n,u#cjK8g<6QP&]bnO:""#K($0/'i4.Dcn'qDk(5`\n_G,5+1@'MF_dTm.1m>n49"Q#8d+3gU?<hfGP+,#L&ESdgh+3bO
%&IW`MlQ];iGD@lTFp_B"!>?GmZ'Sg@94oqI!,EK58jCbOS>'H2-TQj,oH1j]-m..2:e2l\JCUEZ_/<LV_ku-&r<e58P="0ll()fk
%q-0mt?Ai%?E@7u]'rR5>\ZFcYC%iAmKmT9f\?(,32u@L<k\p_?W<?f]j[_>k=i@`qHY)^RP5ppoPTi^f-(]?[gGDBeKG'SPK<LZ2
%FH8\hHVkg;8mYHmT.#i#Y7'R5qrXc)OC=Hg3Y*Fph6R)ZNbdLmW34u;>IVp2TdVWVJ=a3n)0K.1BM,!<:GpE9\AnS@cLR?Vh2VrM
%/V6i3SNjQ(;p1p7gm#0,%h:U89^bDXRpsV,+24>?<#bQ@Lo%i<bpS">!JU^)SaK#mDH)$"FW(pr?#c"W;m9ZfG)&2<_Z1=<?qUDp
%;M^k`Tc,3s,3Qs_c6q-B%[<_I0)4cBWdhJ?PT@4"f8<R['j:P$2$US?@-6RDFr1-@eLSsPm[q*5\#h<ZS_i4dq283Za!W554\e4q
%Bh280agZ7WX41MppDT!#\C22]76uPLq9rU%'[:a)^1S(*H"O8/C3W7RRS2!)K!4P"C5^g]8@I*1/"9`?,DtEXSH((gfSta?glqEd
%Q(>:oY\eNl`0F'`g\H`pbYAF4I8039SHZa5b<B&G(3LUn\?][(Rq9WSe>M3o@95@[r\(dehhA2?]k[iMC')'E:ZEPsp)hG\s8If2
%]_^cgDh%]_o-*o's6Z;*rq?BknXJtg^A[T*rnTg=m[HFiqq3nmr4q'8q`i+cIJ1uOIf$b7s7XKO5Ps9Or:XK[n41M@r;2!Dp]'o9
%s/UYDrr[9MOl?~>
%AI9_PrivateDataEnd
